{
  "version": 3,
  "sources": ["../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react.development.js", "../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js", "../node_modules/.pnpm/react@18.3.1/node_modules/react/cjs/react-jsx-runtime.development.js", "../node_modules/.pnpm/react@18.3.1/node_modules/react/jsx-runtime.js", "../src/core/index.tsx", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/format.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/other.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/angle.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/linear-algebra/vector.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/linear-algebra/matrix.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/linear-algebra/matrix-transformations.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/random.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/convert.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/derivative.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/equations/linear-equations.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/equations/quadratic-equations.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/bezier-curves/bezier-curve.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/path-movement.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/color.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/id.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/collision-detection.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/animation.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/circle-ellipse.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/sequence.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/statistics.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/ml.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/series.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/combinatorics/factorial.ts", "../node_modules/.pnpm/mz-math@3.0.26/node_modules/mz-math/src/main/combinatorics/combinatorics.ts", "../src/core/domain/svg-provider.ts", "../src/core/domain/defaults-provider.ts", "../src/core/domain/common-provider.ts", "../src/core/domain/circle-provider.ts", "../src/core/domain/pointers-provider.ts", "../src/core/ui/Pointer.tsx", "../src/core/domain/style-provider.ts", "../src/core/ui/Pointers.tsx", "../src/core/domain/data-provider.ts", "../src/core/ui/Connection.tsx", "../src/core/domain/connection-provider.ts", "../src/core/domain/animation-provider.ts", "../src/core/ui/Text.tsx", "../src/core/ui/Ticks.tsx", "../src/core/domain/ticks-provider.ts", "../src/core/ui/Circle.tsx", "../src/core/ui/InnerCircle.tsx"],
  "sourcesContent": ["/**\n * @license React\n * react.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n\n          'use strict';\n\n/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());\n}\n          var ReactVersion = '18.3.1';\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\n/**\n * Keeps track of the current dispatcher.\n */\nvar ReactCurrentDispatcher = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\n/**\n * Keeps track of the current batch's configuration such as how long an update\n * should suspend for if it needs to.\n */\nvar ReactCurrentBatchConfig = {\n  transition: null\n};\n\nvar ReactCurrentActQueue = {\n  current: null,\n  // Used to reproduce behavior of `batchedUpdates` in legacy mode.\n  isBatchingLegacy: false,\n  didScheduleLegacyUpdate: false\n};\n\n/**\n * Keeps track of the current owner.\n *\n * The current owner is the component who should own any components that are\n * currently being constructed.\n */\nvar ReactCurrentOwner = {\n  /**\n   * @internal\n   * @type {ReactComponent}\n   */\n  current: null\n};\n\nvar ReactDebugCurrentFrame = {};\nvar currentExtraStackFrame = null;\nfunction setExtraStackFrame(stack) {\n  {\n    currentExtraStackFrame = stack;\n  }\n}\n\n{\n  ReactDebugCurrentFrame.setExtraStackFrame = function (stack) {\n    {\n      currentExtraStackFrame = stack;\n    }\n  }; // Stack implementation injected by the current renderer.\n\n\n  ReactDebugCurrentFrame.getCurrentStack = null;\n\n  ReactDebugCurrentFrame.getStackAddendum = function () {\n    var stack = ''; // Add an extra top frame while an element is being validated\n\n    if (currentExtraStackFrame) {\n      stack += currentExtraStackFrame;\n    } // Delegate to the injected renderer-specific implementation\n\n\n    var impl = ReactDebugCurrentFrame.getCurrentStack;\n\n    if (impl) {\n      stack += impl() || '';\n    }\n\n    return stack;\n  };\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar ReactSharedInternals = {\n  ReactCurrentDispatcher: ReactCurrentDispatcher,\n  ReactCurrentBatchConfig: ReactCurrentBatchConfig,\n  ReactCurrentOwner: ReactCurrentOwner\n};\n\n{\n  ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;\n  ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;\n}\n\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nfunction warn(format) {\n  {\n    {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      printWarning('warn', format, args);\n    }\n  }\n}\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\nvar didWarnStateUpdateForUnmountedComponent = {};\n\nfunction warnNoop(publicInstance, callerName) {\n  {\n    var _constructor = publicInstance.constructor;\n    var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';\n    var warningKey = componentName + \".\" + callerName;\n\n    if (didWarnStateUpdateForUnmountedComponent[warningKey]) {\n      return;\n    }\n\n    error(\"Can't call %s on a component that is not yet mounted. \" + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);\n\n    didWarnStateUpdateForUnmountedComponent[warningKey] = true;\n  }\n}\n/**\n * This is the abstract API for an update queue.\n */\n\n\nvar ReactNoopUpdateQueue = {\n  /**\n   * Checks whether or not this composite component is mounted.\n   * @param {ReactClass} publicInstance The instance we want to test.\n   * @return {boolean} True if mounted, false otherwise.\n   * @protected\n   * @final\n   */\n  isMounted: function (publicInstance) {\n    return false;\n  },\n\n  /**\n   * Forces an update. This should only be invoked when it is known with\n   * certainty that we are **not** in a DOM transaction.\n   *\n   * You may want to call this when you know that some deeper aspect of the\n   * component's state has changed but `setState` was not called.\n   *\n   * This will not invoke `shouldComponentUpdate`, but it will invoke\n   * `componentWillUpdate` and `componentDidUpdate`.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueForceUpdate: function (publicInstance, callback, callerName) {\n    warnNoop(publicInstance, 'forceUpdate');\n  },\n\n  /**\n   * Replaces all of the state. Always use this or `setState` to mutate state.\n   * You should treat `this.state` as immutable.\n   *\n   * There is no guarantee that `this.state` will be immediately updated, so\n   * accessing `this.state` after calling this method may return the old value.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} completeState Next state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} callerName name of the calling function in the public API.\n   * @internal\n   */\n  enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {\n    warnNoop(publicInstance, 'replaceState');\n  },\n\n  /**\n   * Sets a subset of the state. This only exists because _pendingState is\n   * internal. This provides a merging strategy that is not available to deep\n   * properties which is confusing. TODO: Expose pendingState or don't use it\n   * during the merge.\n   *\n   * @param {ReactClass} publicInstance The instance that should rerender.\n   * @param {object} partialState Next partial state to be merged with state.\n   * @param {?function} callback Called after component is updated.\n   * @param {?string} Name of the calling function in the public API.\n   * @internal\n   */\n  enqueueSetState: function (publicInstance, partialState, callback, callerName) {\n    warnNoop(publicInstance, 'setState');\n  }\n};\n\nvar assign = Object.assign;\n\nvar emptyObject = {};\n\n{\n  Object.freeze(emptyObject);\n}\n/**\n * Base class helpers for the updating state of a component.\n */\n\n\nfunction Component(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the\n  // renderer.\n\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nComponent.prototype.isReactComponent = {};\n/**\n * Sets a subset of the state. Always use this to mutate\n * state. You should treat `this.state` as immutable.\n *\n * There is no guarantee that `this.state` will be immediately updated, so\n * accessing `this.state` after calling this method may return the old value.\n *\n * There is no guarantee that calls to `setState` will run synchronously,\n * as they may eventually be batched together.  You can provide an optional\n * callback that will be executed when the call to setState is actually\n * completed.\n *\n * When a function is provided to setState, it will be called at some point in\n * the future (not synchronously). It will be called with the up to date\n * component arguments (state, props, context). These values can be different\n * from this.* because your function may be called after receiveProps but before\n * shouldComponentUpdate, and this new state, props, and context will not yet be\n * assigned to this.\n *\n * @param {object|function} partialState Next partial state or function to\n *        produce next partial state to be merged with current state.\n * @param {?function} callback Called after state is updated.\n * @final\n * @protected\n */\n\nComponent.prototype.setState = function (partialState, callback) {\n  if (typeof partialState !== 'object' && typeof partialState !== 'function' && partialState != null) {\n    throw new Error('setState(...): takes an object of state variables to update or a ' + 'function which returns an object of state variables.');\n  }\n\n  this.updater.enqueueSetState(this, partialState, callback, 'setState');\n};\n/**\n * Forces an update. This should only be invoked when it is known with\n * certainty that we are **not** in a DOM transaction.\n *\n * You may want to call this when you know that some deeper aspect of the\n * component's state has changed but `setState` was not called.\n *\n * This will not invoke `shouldComponentUpdate`, but it will invoke\n * `componentWillUpdate` and `componentDidUpdate`.\n *\n * @param {?function} callback Called after update is complete.\n * @final\n * @protected\n */\n\n\nComponent.prototype.forceUpdate = function (callback) {\n  this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');\n};\n/**\n * Deprecated APIs. These APIs used to exist on classic React classes but since\n * we would like to deprecate them, we're not going to move them over to this\n * modern base class. Instead, we define a getter that warns if it's accessed.\n */\n\n\n{\n  var deprecatedAPIs = {\n    isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],\n    replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']\n  };\n\n  var defineDeprecationWarning = function (methodName, info) {\n    Object.defineProperty(Component.prototype, methodName, {\n      get: function () {\n        warn('%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);\n\n        return undefined;\n      }\n    });\n  };\n\n  for (var fnName in deprecatedAPIs) {\n    if (deprecatedAPIs.hasOwnProperty(fnName)) {\n      defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);\n    }\n  }\n}\n\nfunction ComponentDummy() {}\n\nComponentDummy.prototype = Component.prototype;\n/**\n * Convenience component with default shallow equality check for sCU.\n */\n\nfunction PureComponent(props, context, updater) {\n  this.props = props;\n  this.context = context; // If a component has string refs, we will assign a different object later.\n\n  this.refs = emptyObject;\n  this.updater = updater || ReactNoopUpdateQueue;\n}\n\nvar pureComponentPrototype = PureComponent.prototype = new ComponentDummy();\npureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.\n\nassign(pureComponentPrototype, Component.prototype);\npureComponentPrototype.isPureReactComponent = true;\n\n// an immutable object with a single mutable value\nfunction createRef() {\n  var refObject = {\n    current: null\n  };\n\n  {\n    Object.seal(refObject);\n  }\n\n  return refObject;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  var warnAboutAccessingKey = function () {\n    {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingKey.isReactWarning = true;\n  Object.defineProperty(props, 'key', {\n    get: warnAboutAccessingKey,\n    configurable: true\n  });\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  var warnAboutAccessingRef = function () {\n    {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    }\n  };\n\n  warnAboutAccessingRef.isReactWarning = true;\n  Object.defineProperty(props, 'ref', {\n    get: warnAboutAccessingRef,\n    configurable: true\n  });\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * Create and return a new ReactElement of the given type.\n * See https://reactjs.org/docs/react-api.html#createelement\n */\n\nfunction createElement(type, config, children) {\n  var propName; // Reserved names are extracted\n\n  var props = {};\n  var key = null;\n  var ref = null;\n  var self = null;\n  var source = null;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      ref = config.ref;\n\n      {\n        warnIfStringRefCannotBeAutoConverted(config);\n      }\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    self = config.__self === undefined ? null : config.__self;\n    source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    {\n      if (Object.freeze) {\n        Object.freeze(childArray);\n      }\n    }\n\n    props.children = childArray;\n  } // Resolve default props\n\n\n  if (type && type.defaultProps) {\n    var defaultProps = type.defaultProps;\n\n    for (propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n  }\n\n  {\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n  }\n\n  return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n}\nfunction cloneAndReplaceKey(oldElement, newKey) {\n  var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);\n  return newElement;\n}\n/**\n * Clone and return a new ReactElement using element as the starting point.\n * See https://reactjs.org/docs/react-api.html#cloneelement\n */\n\nfunction cloneElement(element, config, children) {\n  if (element === null || element === undefined) {\n    throw new Error(\"React.cloneElement(...): The argument must be a React element, but you passed \" + element + \".\");\n  }\n\n  var propName; // Original props are copied\n\n  var props = assign({}, element.props); // Reserved names are extracted\n\n  var key = element.key;\n  var ref = element.ref; // Self is preserved since the owner is preserved.\n\n  var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a\n  // transpiler, and the original source is probably a better indicator of the\n  // true owner.\n\n  var source = element._source; // Owner will be preserved, unless ref is overridden\n\n  var owner = element._owner;\n\n  if (config != null) {\n    if (hasValidRef(config)) {\n      // Silently steal the ref from the parent.\n      ref = config.ref;\n      owner = ReactCurrentOwner.current;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    } // Remaining properties override existing props\n\n\n    var defaultProps;\n\n    if (element.type && element.type.defaultProps) {\n      defaultProps = element.type.defaultProps;\n    }\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        if (config[propName] === undefined && defaultProps !== undefined) {\n          // Resolve default props\n          props[propName] = defaultProps[propName];\n        } else {\n          props[propName] = config[propName];\n        }\n      }\n    }\n  } // Children can be more than one argument, and those are transferred onto\n  // the newly allocated props object.\n\n\n  var childrenLength = arguments.length - 2;\n\n  if (childrenLength === 1) {\n    props.children = children;\n  } else if (childrenLength > 1) {\n    var childArray = Array(childrenLength);\n\n    for (var i = 0; i < childrenLength; i++) {\n      childArray[i] = arguments[i + 2];\n    }\n\n    props.children = childArray;\n  }\n\n  return ReactElement(element.type, key, ref, self, source, owner, props);\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\n\nvar SEPARATOR = '.';\nvar SUBSEPARATOR = ':';\n/**\n * Escape and wrap key so it is safe to use as a reactid\n *\n * @param {string} key to be escaped.\n * @return {string} the escaped key.\n */\n\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = key.replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\n\nvar didWarnAboutMaps = false;\nvar userProvidedKeyEscapeRegex = /\\/+/g;\n\nfunction escapeUserProvidedKey(text) {\n  return text.replace(userProvidedKeyEscapeRegex, '$&/');\n}\n/**\n * Generate a key string that identifies a element within a set.\n *\n * @param {*} element A element that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\n\n\nfunction getElementKey(element, index) {\n  // Do some typechecking here since we call this blindly. We want to ensure\n  // that we don't block potential future ES APIs.\n  if (typeof element === 'object' && element !== null && element.key != null) {\n    // Explicit key\n    {\n      checkKeyStringCoercion(element.key);\n    }\n\n    return escape('' + element.key);\n  } // Implicit key determined by the index in the set\n\n\n  return index.toString(36);\n}\n\nfunction mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  var invokeCallback = false;\n\n  if (children === null) {\n    invokeCallback = true;\n  } else {\n    switch (type) {\n      case 'string':\n      case 'number':\n        invokeCallback = true;\n        break;\n\n      case 'object':\n        switch (children.$$typeof) {\n          case REACT_ELEMENT_TYPE:\n          case REACT_PORTAL_TYPE:\n            invokeCallback = true;\n        }\n\n    }\n  }\n\n  if (invokeCallback) {\n    var _child = children;\n    var mappedChild = callback(_child); // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows:\n\n    var childKey = nameSoFar === '' ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;\n\n    if (isArray(mappedChild)) {\n      var escapedChildKey = '';\n\n      if (childKey != null) {\n        escapedChildKey = escapeUserProvidedKey(childKey) + '/';\n      }\n\n      mapIntoArray(mappedChild, array, escapedChildKey, '', function (c) {\n        return c;\n      });\n    } else if (mappedChild != null) {\n      if (isValidElement(mappedChild)) {\n        {\n          // The `if` statement here prevents auto-disabling of the safe\n          // coercion ESLint rule, so we must manually disable it below.\n          // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n          if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {\n            checkKeyStringCoercion(mappedChild.key);\n          }\n        }\n\n        mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as\n        // traverseAllChildren used to do for objects as children\n        escapedPrefix + ( // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key\n        mappedChild.key && (!_child || _child.key !== mappedChild.key) ? // $FlowFixMe Flow incorrectly thinks existing element's key can be a number\n        // eslint-disable-next-line react-internal/safe-string-coercion\n        escapeUserProvidedKey('' + mappedChild.key) + '/' : '') + childKey);\n      }\n\n      array.push(mappedChild);\n    }\n\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getElementKey(child, i);\n      subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n\n    if (typeof iteratorFn === 'function') {\n      var iterableChildren = children;\n\n      {\n        // Warn about using Maps as children\n        if (iteratorFn === iterableChildren.entries) {\n          if (!didWarnAboutMaps) {\n            warn('Using Maps as children is not supported. ' + 'Use an array of keyed ReactElements instead.');\n          }\n\n          didWarnAboutMaps = true;\n        }\n      }\n\n      var iterator = iteratorFn.call(iterableChildren);\n      var step;\n      var ii = 0;\n\n      while (!(step = iterator.next()).done) {\n        child = step.value;\n        nextName = nextNamePrefix + getElementKey(child, ii++);\n        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);\n      }\n    } else if (type === 'object') {\n      // eslint-disable-next-line react-internal/safe-string-coercion\n      var childrenString = String(children);\n      throw new Error(\"Objects are not valid as a React child (found: \" + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + \"). \" + 'If you meant to render a collection of children, use an array ' + 'instead.');\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Maps children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenmap\n *\n * The provided mapFunction(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} func The map function.\n * @param {*} context Context for mapFunction.\n * @return {object} Object containing the ordered map of results.\n */\nfunction mapChildren(children, func, context) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = [];\n  var count = 0;\n  mapIntoArray(children, result, '', '', function (child) {\n    return func.call(context, child, count++);\n  });\n  return result;\n}\n/**\n * Count the number of children that are typically specified as\n * `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrencount\n *\n * @param {?*} children Children tree container.\n * @return {number} The number of children.\n */\n\n\nfunction countChildren(children) {\n  var n = 0;\n  mapChildren(children, function () {\n    n++; // Don't return anything\n  });\n  return n;\n}\n\n/**\n * Iterates through children that are typically specified as `props.children`.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenforeach\n *\n * The provided forEachFunc(child, index) will be called for each\n * leaf child.\n *\n * @param {?*} children Children tree container.\n * @param {function(*, int)} forEachFunc\n * @param {*} forEachContext Context for forEachContext.\n */\nfunction forEachChildren(children, forEachFunc, forEachContext) {\n  mapChildren(children, function () {\n    forEachFunc.apply(this, arguments); // Don't return anything.\n  }, forEachContext);\n}\n/**\n * Flatten a children object (typically specified as `props.children`) and\n * return an array with appropriately re-keyed children.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrentoarray\n */\n\n\nfunction toArray(children) {\n  return mapChildren(children, function (child) {\n    return child;\n  }) || [];\n}\n/**\n * Returns the first child in a collection of children and verifies that there\n * is only one child in the collection.\n *\n * See https://reactjs.org/docs/react-api.html#reactchildrenonly\n *\n * The current implementation of this function assumes that a single child gets\n * passed without a wrapper, but the purpose of this helper function is to\n * abstract away the particular structure of children.\n *\n * @param {?object} children Child collection structure.\n * @return {ReactElement} The first and only `ReactElement` contained in the\n * structure.\n */\n\n\nfunction onlyChild(children) {\n  if (!isValidElement(children)) {\n    throw new Error('React.Children.only expected to receive a single React element child.');\n  }\n\n  return children;\n}\n\nfunction createContext(defaultValue) {\n  // TODO: Second argument used to be an optional `calculateChangedBits`\n  // function. Warn to reserve for future use?\n  var context = {\n    $$typeof: REACT_CONTEXT_TYPE,\n    // As a workaround to support multiple concurrent renderers, we categorize\n    // some renderers as primary and others as secondary. We only expect\n    // there to be two concurrent renderers at most: React Native (primary) and\n    // Fabric (secondary); React DOM (primary) and React ART (secondary).\n    // Secondary renderers store their context values on separate fields.\n    _currentValue: defaultValue,\n    _currentValue2: defaultValue,\n    // Used to track how many concurrent renderers this context currently\n    // supports within in a single renderer. Such as parallel server rendering.\n    _threadCount: 0,\n    // These are circular\n    Provider: null,\n    Consumer: null,\n    // Add these to use same hidden class in VM as ServerContext\n    _defaultValue: null,\n    _globalName: null\n  };\n  context.Provider = {\n    $$typeof: REACT_PROVIDER_TYPE,\n    _context: context\n  };\n  var hasWarnedAboutUsingNestedContextConsumers = false;\n  var hasWarnedAboutUsingConsumerProvider = false;\n  var hasWarnedAboutDisplayNameOnConsumer = false;\n\n  {\n    // A separate object, but proxies back to the original context object for\n    // backwards compatibility. It has a different $$typeof, so we can properly\n    // warn for the incorrect usage of Context as a Consumer.\n    var Consumer = {\n      $$typeof: REACT_CONTEXT_TYPE,\n      _context: context\n    }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here\n\n    Object.defineProperties(Consumer, {\n      Provider: {\n        get: function () {\n          if (!hasWarnedAboutUsingConsumerProvider) {\n            hasWarnedAboutUsingConsumerProvider = true;\n\n            error('Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');\n          }\n\n          return context.Provider;\n        },\n        set: function (_Provider) {\n          context.Provider = _Provider;\n        }\n      },\n      _currentValue: {\n        get: function () {\n          return context._currentValue;\n        },\n        set: function (_currentValue) {\n          context._currentValue = _currentValue;\n        }\n      },\n      _currentValue2: {\n        get: function () {\n          return context._currentValue2;\n        },\n        set: function (_currentValue2) {\n          context._currentValue2 = _currentValue2;\n        }\n      },\n      _threadCount: {\n        get: function () {\n          return context._threadCount;\n        },\n        set: function (_threadCount) {\n          context._threadCount = _threadCount;\n        }\n      },\n      Consumer: {\n        get: function () {\n          if (!hasWarnedAboutUsingNestedContextConsumers) {\n            hasWarnedAboutUsingNestedContextConsumers = true;\n\n            error('Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');\n          }\n\n          return context.Consumer;\n        }\n      },\n      displayName: {\n        get: function () {\n          return context.displayName;\n        },\n        set: function (displayName) {\n          if (!hasWarnedAboutDisplayNameOnConsumer) {\n            warn('Setting `displayName` on Context.Consumer has no effect. ' + \"You should set it directly on the context with Context.displayName = '%s'.\", displayName);\n\n            hasWarnedAboutDisplayNameOnConsumer = true;\n          }\n        }\n      }\n    }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty\n\n    context.Consumer = Consumer;\n  }\n\n  {\n    context._currentRenderer = null;\n    context._currentRenderer2 = null;\n  }\n\n  return context;\n}\n\nvar Uninitialized = -1;\nvar Pending = 0;\nvar Resolved = 1;\nvar Rejected = 2;\n\nfunction lazyInitializer(payload) {\n  if (payload._status === Uninitialized) {\n    var ctor = payload._result;\n    var thenable = ctor(); // Transition to the next state.\n    // This might throw either because it's missing or throws. If so, we treat it\n    // as still uninitialized and try again next time. Which is the same as what\n    // happens if the ctor or any wrappers processing the ctor throws. This might\n    // end up fixing it if the resolution was a concurrency bug.\n\n    thenable.then(function (moduleObject) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var resolved = payload;\n        resolved._status = Resolved;\n        resolved._result = moduleObject;\n      }\n    }, function (error) {\n      if (payload._status === Pending || payload._status === Uninitialized) {\n        // Transition to the next state.\n        var rejected = payload;\n        rejected._status = Rejected;\n        rejected._result = error;\n      }\n    });\n\n    if (payload._status === Uninitialized) {\n      // In case, we're still uninitialized, then we're waiting for the thenable\n      // to resolve. Set it as pending in the meantime.\n      var pending = payload;\n      pending._status = Pending;\n      pending._result = thenable;\n    }\n  }\n\n  if (payload._status === Resolved) {\n    var moduleObject = payload._result;\n\n    {\n      if (moduleObject === undefined) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\\n\\n\" + 'Did you accidentally put curly braces around the import?', moduleObject);\n      }\n    }\n\n    {\n      if (!('default' in moduleObject)) {\n        error('lazy: Expected the result of a dynamic imp' + 'ort() call. ' + 'Instead received: %s\\n\\nYour code should look like: \\n  ' + // Break up imports to avoid accidentally parsing them as dependencies.\n        'const MyComponent = lazy(() => imp' + \"ort('./MyComponent'))\", moduleObject);\n      }\n    }\n\n    return moduleObject.default;\n  } else {\n    throw payload._result;\n  }\n}\n\nfunction lazy(ctor) {\n  var payload = {\n    // We use these fields to store the result.\n    _status: Uninitialized,\n    _result: ctor\n  };\n  var lazyType = {\n    $$typeof: REACT_LAZY_TYPE,\n    _payload: payload,\n    _init: lazyInitializer\n  };\n\n  {\n    // In production, this would just set it on the object.\n    var defaultProps;\n    var propTypes; // $FlowFixMe\n\n    Object.defineProperties(lazyType, {\n      defaultProps: {\n        configurable: true,\n        get: function () {\n          return defaultProps;\n        },\n        set: function (newDefaultProps) {\n          error('React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          defaultProps = newDefaultProps; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'defaultProps', {\n            enumerable: true\n          });\n        }\n      },\n      propTypes: {\n        configurable: true,\n        get: function () {\n          return propTypes;\n        },\n        set: function (newPropTypes) {\n          error('React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');\n\n          propTypes = newPropTypes; // Match production behavior more closely:\n          // $FlowFixMe\n\n          Object.defineProperty(lazyType, 'propTypes', {\n            enumerable: true\n          });\n        }\n      }\n    });\n  }\n\n  return lazyType;\n}\n\nfunction forwardRef(render) {\n  {\n    if (render != null && render.$$typeof === REACT_MEMO_TYPE) {\n      error('forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');\n    } else if (typeof render !== 'function') {\n      error('forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);\n    } else {\n      if (render.length !== 0 && render.length !== 2) {\n        error('forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.');\n      }\n    }\n\n    if (render != null) {\n      if (render.defaultProps != null || render.propTypes != null) {\n        error('forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?');\n      }\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_FORWARD_REF_TYPE,\n    render: render\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.forwardRef((props, ref) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!render.name && !render.displayName) {\n          render.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction memo(type, compare) {\n  {\n    if (!isValidElementType(type)) {\n      error('memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);\n    }\n  }\n\n  var elementType = {\n    $$typeof: REACT_MEMO_TYPE,\n    type: type,\n    compare: compare === undefined ? null : compare\n  };\n\n  {\n    var ownName;\n    Object.defineProperty(elementType, 'displayName', {\n      enumerable: false,\n      configurable: true,\n      get: function () {\n        return ownName;\n      },\n      set: function (name) {\n        ownName = name; // The inner component shouldn't inherit this display name in most cases,\n        // because the component may be used elsewhere.\n        // But it's nice for anonymous functions to inherit the name,\n        // so that our component-stack generation logic will display their frames.\n        // An anonymous function generally suggests a pattern like:\n        //   React.memo((props) => {...});\n        // This kind of inner function is not used elsewhere so the side effect is okay.\n\n        if (!type.name && !type.displayName) {\n          type.displayName = name;\n        }\n      }\n    });\n  }\n\n  return elementType;\n}\n\nfunction resolveDispatcher() {\n  var dispatcher = ReactCurrentDispatcher.current;\n\n  {\n    if (dispatcher === null) {\n      error('Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' + ' one of the following reasons:\\n' + '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' + '2. You might be breaking the Rules of Hooks\\n' + '3. You might have more than one copy of React in the same app\\n' + 'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.');\n    }\n  } // Will result in a null access error if accessed outside render phase. We\n  // intentionally don't throw our own error because this is in a hot path.\n  // Also helps ensure this is inlined.\n\n\n  return dispatcher;\n}\nfunction useContext(Context) {\n  var dispatcher = resolveDispatcher();\n\n  {\n    // TODO: add a more generic warning for invalid values.\n    if (Context._context !== undefined) {\n      var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs\n      // and nobody should be using this in existing code.\n\n      if (realContext.Consumer === Context) {\n        error('Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');\n      } else if (realContext.Provider === Context) {\n        error('Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');\n      }\n    }\n  }\n\n  return dispatcher.useContext(Context);\n}\nfunction useState(initialState) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useState(initialState);\n}\nfunction useReducer(reducer, initialArg, init) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useReducer(reducer, initialArg, init);\n}\nfunction useRef(initialValue) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useRef(initialValue);\n}\nfunction useEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useEffect(create, deps);\n}\nfunction useInsertionEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useInsertionEffect(create, deps);\n}\nfunction useLayoutEffect(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useLayoutEffect(create, deps);\n}\nfunction useCallback(callback, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useCallback(callback, deps);\n}\nfunction useMemo(create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useMemo(create, deps);\n}\nfunction useImperativeHandle(ref, create, deps) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useImperativeHandle(ref, create, deps);\n}\nfunction useDebugValue(value, formatterFn) {\n  {\n    var dispatcher = resolveDispatcher();\n    return dispatcher.useDebugValue(value, formatterFn);\n  }\n}\nfunction useTransition() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useTransition();\n}\nfunction useDeferredValue(value) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useDeferredValue(value);\n}\nfunction useId() {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useId();\n}\nfunction useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {\n  var dispatcher = resolveDispatcher();\n  return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher$1.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher$1.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher$1.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      setExtraStackFrame(stack);\n    } else {\n      setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n\nfunction getDeclarationErrorAddendum() {\n  if (ReactCurrentOwner.current) {\n    var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n    if (name) {\n      return '\\n\\nCheck the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  if (source !== undefined) {\n    var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n    var lineNumber = source.lineNumber;\n    return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n  }\n\n  return '';\n}\n\nfunction getSourceInfoErrorAddendumForProps(elementProps) {\n  if (elementProps !== null && elementProps !== undefined) {\n    return getSourceInfoErrorAddendum(elementProps.__source);\n  }\n\n  return '';\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  var info = getDeclarationErrorAddendum();\n\n  if (!info) {\n    var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n    if (parentName) {\n      info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n    }\n  }\n\n  return info;\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  if (!element._store || element._store.validated || element.key != null) {\n    return;\n  }\n\n  element._store.validated = true;\n  var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n  if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n    return;\n  }\n\n  ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n  // property, it may be the creator of the child that's responsible for\n  // assigning it a key.\n\n  var childOwner = '';\n\n  if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n    // Give the component that originally created this child.\n    childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n  }\n\n  {\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  if (typeof node !== 'object') {\n    return;\n  }\n\n  if (isArray(node)) {\n    for (var i = 0; i < node.length; i++) {\n      var child = node[i];\n\n      if (isValidElement(child)) {\n        validateExplicitKey(child, parentType);\n      }\n    }\n  } else if (isValidElement(node)) {\n    // This element was passed in a valid location.\n    if (node._store) {\n      node._store.validated = true;\n    }\n  } else if (node) {\n    var iteratorFn = getIteratorFn(node);\n\n    if (typeof iteratorFn === 'function') {\n      // Entry iterators used to provide implicit keys,\n      // but now we print a separate warning for them later.\n      if (iteratorFn !== node.entries) {\n        var iterator = iteratorFn.call(node);\n        var step;\n\n        while (!(step = iterator.next()).done) {\n          if (isValidElement(step.value)) {\n            validateExplicitKey(step.value, parentType);\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\nfunction createElementWithValidation(type, props, children) {\n  var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n  // succeed and there will likely be errors in render.\n\n  if (!validType) {\n    var info = '';\n\n    if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n      info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n    }\n\n    var sourceInfo = getSourceInfoErrorAddendumForProps(props);\n\n    if (sourceInfo) {\n      info += sourceInfo;\n    } else {\n      info += getDeclarationErrorAddendum();\n    }\n\n    var typeString;\n\n    if (type === null) {\n      typeString = 'null';\n    } else if (isArray(type)) {\n      typeString = 'array';\n    } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n      typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n      info = ' Did you accidentally export a JSX literal instead of a component?';\n    } else {\n      typeString = typeof type;\n    }\n\n    {\n      error('React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n  }\n\n  var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.\n  // TODO: Drop this when these are no longer allowed as the type argument.\n\n  if (element == null) {\n    return element;\n  } // Skip key warning if the type isn't valid since our key validation logic\n  // doesn't expect a non-string/function type and can throw confusing errors.\n  // We don't want exception behavior to differ between dev and prod.\n  // (Rendering will throw with a helpful message and as soon as the type is\n  // fixed, the key warnings will appear.)\n\n\n  if (validType) {\n    for (var i = 2; i < arguments.length; i++) {\n      validateChildKeys(arguments[i], type);\n    }\n  }\n\n  if (type === REACT_FRAGMENT_TYPE) {\n    validateFragmentProps(element);\n  } else {\n    validatePropTypes(element);\n  }\n\n  return element;\n}\nvar didWarnAboutDeprecatedCreateFactory = false;\nfunction createFactoryWithValidation(type) {\n  var validatedFactory = createElementWithValidation.bind(null, type);\n  validatedFactory.type = type;\n\n  {\n    if (!didWarnAboutDeprecatedCreateFactory) {\n      didWarnAboutDeprecatedCreateFactory = true;\n\n      warn('React.createFactory() is deprecated and will be removed in ' + 'a future major release. Consider using JSX ' + 'or use React.createElement() directly instead.');\n    } // Legacy hook: remove it\n\n\n    Object.defineProperty(validatedFactory, 'type', {\n      enumerable: false,\n      get: function () {\n        warn('Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');\n\n        Object.defineProperty(this, 'type', {\n          value: type\n        });\n        return type;\n      }\n    });\n  }\n\n  return validatedFactory;\n}\nfunction cloneElementWithValidation(element, props, children) {\n  var newElement = cloneElement.apply(this, arguments);\n\n  for (var i = 2; i < arguments.length; i++) {\n    validateChildKeys(arguments[i], newElement.type);\n  }\n\n  validatePropTypes(newElement);\n  return newElement;\n}\n\nfunction startTransition(scope, options) {\n  var prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = {};\n  var currentTransition = ReactCurrentBatchConfig.transition;\n\n  {\n    ReactCurrentBatchConfig.transition._updatedFibers = new Set();\n  }\n\n  try {\n    scope();\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    {\n      if (prevTransition === null && currentTransition._updatedFibers) {\n        var updatedFibersCount = currentTransition._updatedFibers.size;\n\n        if (updatedFibersCount > 10) {\n          warn('Detected a large number of updates inside startTransition. ' + 'If this is due to a subscription please re-write it to use React provided hooks. ' + 'Otherwise concurrent mode guarantees are off the table.');\n        }\n\n        currentTransition._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nvar didWarnAboutMessageChannel = false;\nvar enqueueTaskImpl = null;\nfunction enqueueTask(task) {\n  if (enqueueTaskImpl === null) {\n    try {\n      // read require off the module object to get around the bundlers.\n      // we don't want them to detect a require and bundle a Node polyfill.\n      var requireString = ('require' + Math.random()).slice(0, 7);\n      var nodeRequire = module && module[requireString]; // assuming we're in node, let's try to get node's\n      // version of setImmediate, bypassing fake timers if any.\n\n      enqueueTaskImpl = nodeRequire.call(module, 'timers').setImmediate;\n    } catch (_err) {\n      // we're in a browser\n      // we can't use regular timers because they may still be faked\n      // so we try MessageChannel+postMessage instead\n      enqueueTaskImpl = function (callback) {\n        {\n          if (didWarnAboutMessageChannel === false) {\n            didWarnAboutMessageChannel = true;\n\n            if (typeof MessageChannel === 'undefined') {\n              error('This browser does not have a MessageChannel implementation, ' + 'so enqueuing tasks via await act(async () => ...) will fail. ' + 'Please file an issue at https://github.com/facebook/react/issues ' + 'if you encounter this warning.');\n            }\n          }\n        }\n\n        var channel = new MessageChannel();\n        channel.port1.onmessage = callback;\n        channel.port2.postMessage(undefined);\n      };\n    }\n  }\n\n  return enqueueTaskImpl(task);\n}\n\nvar actScopeDepth = 0;\nvar didWarnNoAwaitAct = false;\nfunction act(callback) {\n  {\n    // `act` calls can be nested, so we track the depth. This represents the\n    // number of `act` scopes on the stack.\n    var prevActScopeDepth = actScopeDepth;\n    actScopeDepth++;\n\n    if (ReactCurrentActQueue.current === null) {\n      // This is the outermost `act` scope. Initialize the queue. The reconciler\n      // will detect the queue and use it instead of Scheduler.\n      ReactCurrentActQueue.current = [];\n    }\n\n    var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;\n    var result;\n\n    try {\n      // Used to reproduce behavior of `batchedUpdates` in legacy mode. Only\n      // set to `true` while the given callback is executed, not for updates\n      // triggered during an async event, because this is how the legacy\n      // implementation of `act` behaved.\n      ReactCurrentActQueue.isBatchingLegacy = true;\n      result = callback(); // Replicate behavior of original `act` implementation in legacy mode,\n      // which flushed updates immediately after the scope function exits, even\n      // if it's an async function.\n\n      if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {\n        var queue = ReactCurrentActQueue.current;\n\n        if (queue !== null) {\n          ReactCurrentActQueue.didScheduleLegacyUpdate = false;\n          flushActQueue(queue);\n        }\n      }\n    } catch (error) {\n      popActScope(prevActScopeDepth);\n      throw error;\n    } finally {\n      ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;\n    }\n\n    if (result !== null && typeof result === 'object' && typeof result.then === 'function') {\n      var thenableResult = result; // The callback is an async function (i.e. returned a promise). Wait\n      // for it to resolve before exiting the current scope.\n\n      var wasAwaited = false;\n      var thenable = {\n        then: function (resolve, reject) {\n          wasAwaited = true;\n          thenableResult.then(function (returnValue) {\n            popActScope(prevActScopeDepth);\n\n            if (actScopeDepth === 0) {\n              // We've exited the outermost act scope. Recursively flush the\n              // queue until there's no remaining work.\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }, function (error) {\n            // The callback threw an error.\n            popActScope(prevActScopeDepth);\n            reject(error);\n          });\n        }\n      };\n\n      {\n        if (!didWarnNoAwaitAct && typeof Promise !== 'undefined') {\n          // eslint-disable-next-line no-undef\n          Promise.resolve().then(function () {}).then(function () {\n            if (!wasAwaited) {\n              didWarnNoAwaitAct = true;\n\n              error('You called act(async () => ...) without await. ' + 'This could lead to unexpected testing behaviour, ' + 'interleaving multiple act calls and mixing their ' + 'scopes. ' + 'You should - await act(async () => ...);');\n            }\n          });\n        }\n      }\n\n      return thenable;\n    } else {\n      var returnValue = result; // The callback is not an async function. Exit the current scope\n      // immediately, without awaiting.\n\n      popActScope(prevActScopeDepth);\n\n      if (actScopeDepth === 0) {\n        // Exiting the outermost act scope. Flush the queue.\n        var _queue = ReactCurrentActQueue.current;\n\n        if (_queue !== null) {\n          flushActQueue(_queue);\n          ReactCurrentActQueue.current = null;\n        } // Return a thenable. If the user awaits it, we'll flush again in\n        // case additional work was scheduled by a microtask.\n\n\n        var _thenable = {\n          then: function (resolve, reject) {\n            // Confirm we haven't re-entered another `act` scope, in case\n            // the user does something weird like await the thenable\n            // multiple times.\n            if (ReactCurrentActQueue.current === null) {\n              // Recursively flush the queue until there's no remaining work.\n              ReactCurrentActQueue.current = [];\n              recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n            } else {\n              resolve(returnValue);\n            }\n          }\n        };\n        return _thenable;\n      } else {\n        // Since we're inside a nested `act` scope, the returned thenable\n        // immediately resolves. The outer scope will flush the queue.\n        var _thenable2 = {\n          then: function (resolve, reject) {\n            resolve(returnValue);\n          }\n        };\n        return _thenable2;\n      }\n    }\n  }\n}\n\nfunction popActScope(prevActScopeDepth) {\n  {\n    if (prevActScopeDepth !== actScopeDepth - 1) {\n      error('You seem to have overlapping act() calls, this is not supported. ' + 'Be sure to await previous act() calls before making a new one. ');\n    }\n\n    actScopeDepth = prevActScopeDepth;\n  }\n}\n\nfunction recursivelyFlushAsyncActWork(returnValue, resolve, reject) {\n  {\n    var queue = ReactCurrentActQueue.current;\n\n    if (queue !== null) {\n      try {\n        flushActQueue(queue);\n        enqueueTask(function () {\n          if (queue.length === 0) {\n            // No additional work was scheduled. Finish.\n            ReactCurrentActQueue.current = null;\n            resolve(returnValue);\n          } else {\n            // Keep flushing work until there's none left.\n            recursivelyFlushAsyncActWork(returnValue, resolve, reject);\n          }\n        });\n      } catch (error) {\n        reject(error);\n      }\n    } else {\n      resolve(returnValue);\n    }\n  }\n}\n\nvar isFlushing = false;\n\nfunction flushActQueue(queue) {\n  {\n    if (!isFlushing) {\n      // Prevent re-entrance.\n      isFlushing = true;\n      var i = 0;\n\n      try {\n        for (; i < queue.length; i++) {\n          var callback = queue[i];\n\n          do {\n            callback = callback(true);\n          } while (callback !== null);\n        }\n\n        queue.length = 0;\n      } catch (error) {\n        // If something throws, leave the remaining callbacks on the queue.\n        queue = queue.slice(i + 1);\n        throw error;\n      } finally {\n        isFlushing = false;\n      }\n    }\n  }\n}\n\nvar createElement$1 =  createElementWithValidation ;\nvar cloneElement$1 =  cloneElementWithValidation ;\nvar createFactory =  createFactoryWithValidation ;\nvar Children = {\n  map: mapChildren,\n  forEach: forEachChildren,\n  count: countChildren,\n  toArray: toArray,\n  only: onlyChild\n};\n\nexports.Children = Children;\nexports.Component = Component;\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.Profiler = REACT_PROFILER_TYPE;\nexports.PureComponent = PureComponent;\nexports.StrictMode = REACT_STRICT_MODE_TYPE;\nexports.Suspense = REACT_SUSPENSE_TYPE;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;\nexports.act = act;\nexports.cloneElement = cloneElement$1;\nexports.createContext = createContext;\nexports.createElement = createElement$1;\nexports.createFactory = createFactory;\nexports.createRef = createRef;\nexports.forwardRef = forwardRef;\nexports.isValidElement = isValidElement;\nexports.lazy = lazy;\nexports.memo = memo;\nexports.startTransition = startTransition;\nexports.unstable_act = act;\nexports.useCallback = useCallback;\nexports.useContext = useContext;\nexports.useDebugValue = useDebugValue;\nexports.useDeferredValue = useDeferredValue;\nexports.useEffect = useEffect;\nexports.useId = useId;\nexports.useImperativeHandle = useImperativeHandle;\nexports.useInsertionEffect = useInsertionEffect;\nexports.useLayoutEffect = useLayoutEffect;\nexports.useMemo = useMemo;\nexports.useReducer = useReducer;\nexports.useRef = useRef;\nexports.useState = useState;\nexports.useSyncExternalStore = useSyncExternalStore;\nexports.useTransition = useTransition;\nexports.version = ReactVersion;\n          /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\nif (\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined' &&\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop ===\n    'function'\n) {\n  __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());\n}\n        \n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n", "/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\nvar React = require('react');\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false; // Track which Fiber(s) schedule render work.\n\nvar REACT_MODULE_REFERENCE;\n\n{\n  REACT_MODULE_REFERENCE = Symbol.for('react.module.reference');\n}\n\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n} // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  {\n    if (typeof type.tag === 'number') {\n      error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n    }\n  }\n\n  if (typeof type === 'function') {\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n        return getContextName(context) + '.Consumer';\n\n      case REACT_PROVIDER_TYPE:\n        var provider = type;\n        return getContextName(provider._context) + '.Provider';\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n\n      // eslint-disable-next-line no-fallthrough\n    }\n  }\n\n  return null;\n}\n\nvar assign = Object.assign;\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, source, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if ( !fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  var control;\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      var Fake = function () {\n        throw Error();\n      }; // $FlowFixMe\n\n\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function () {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        }\n      });\n\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sample.stack.split('\\n');\n      var controlLines = control.stack.split('\\n');\n      var s = sampleLines.length - 1;\n      var c = controlLines.length - 1;\n\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, source, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar loggedTypeFailures = {};\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction checkPropTypes(typeSpecs, values, location, componentName, element) {\n  {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    var has = Function.call.bind(hasOwnProperty);\n\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error$1 = void 0; // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            // eslint-disable-next-line react-internal/prod-error-codes\n            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n\n          error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED');\n        } catch (ex) {\n          error$1 = ex;\n        }\n\n        if (error$1 && !(error$1 instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n\n          error('%s: type specification of %s' + ' `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error$1);\n\n          setCurrentlyValidatingElement(null);\n        }\n\n        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error$1.message] = true;\n          setCurrentlyValidatingElement(element);\n\n          error('Failed %s type: %s', location, error$1.message);\n\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n/*\n * The `'' + value` pattern (used in in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object';\n    return type;\n  }\n} // $FlowFixMe only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar RESERVED_PROPS = {\n  key: true,\n  ref: true,\n  __self: true,\n  __source: true\n};\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingRef = function () {\n      if (!specialPropRefWarningShown) {\n        specialPropRefWarningShown = true;\n\n        error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingRef.isReactWarning = true;\n    Object.defineProperty(props, 'ref', {\n      get: warnAboutAccessingRef,\n      configurable: true\n    });\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nvar ReactElement = function (type, key, ref, self, source, owner, props) {\n  var element = {\n    // This tag allows us to uniquely identify this as a React Element\n    $$typeof: REACT_ELEMENT_TYPE,\n    // Built-in properties that belong on the element\n    type: type,\n    key: key,\n    ref: ref,\n    props: props,\n    // Record the component responsible for creating this element.\n    _owner: owner\n  };\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // self and source are DEV only properties.\n\n    Object.defineProperty(element, '_self', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: self\n    }); // Two elements created in two different places should be considered\n    // equal for testing purposes and therefore we hide it from enumeration.\n\n    Object.defineProperty(element, '_source', {\n      configurable: false,\n      enumerable: false,\n      writable: false,\n      value: source\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV(type, config, maybeKey, source, self) {\n  {\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      ref = config.ref;\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n  }\n}\n\nvar ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement$1(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);\n      ReactDebugCurrentFrame$1.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame$1.setExtraStackFrame(null);\n    }\n  }\n}\n\nvar propTypesMisspellWarningShown;\n\n{\n  propTypesMisspellWarningShown = false;\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  {\n    return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner$1.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner$1.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n\nfunction getSourceInfoErrorAddendum(source) {\n  {\n    if (source !== undefined) {\n      var fileName = source.fileName.replace(/^.*[\\\\\\/]/, '');\n      var lineNumber = source.lineNumber;\n      return '\\n\\nCheck your code at ' + fileName + ':' + lineNumber + '.';\n    }\n\n    return '';\n  }\n}\n/**\n * Warn if there's no key explicitly set on dynamic arrays of children or\n * object keys are not valid. This allows us to keep track of children between\n * updates.\n */\n\n\nvar ownerHasKeyUseWarning = {};\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement$1(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement$1(null);\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object') {\n      return;\n    }\n\n    if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else if (node) {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Given an element, validate that its props follow the propTypes definition,\n * provided by the type.\n *\n * @param {ReactElement} element\n */\n\n\nfunction validatePropTypes(element) {\n  {\n    var type = element.type;\n\n    if (type === null || type === undefined || typeof type === 'string') {\n      return;\n    }\n\n    var propTypes;\n\n    if (typeof type === 'function') {\n      propTypes = type.propTypes;\n    } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.\n    // Inner props are checked in the reconciler.\n    type.$$typeof === REACT_MEMO_TYPE)) {\n      propTypes = type.propTypes;\n    } else {\n      return;\n    }\n\n    if (propTypes) {\n      // Intentionally inside to avoid triggering lazy initializers:\n      var name = getComponentNameFromType(type);\n      checkPropTypes(propTypes, element.props, 'prop', name, element);\n    } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {\n      propTypesMisspellWarningShown = true; // Intentionally inside to avoid triggering lazy initializers:\n\n      var _name = getComponentNameFromType(type);\n\n      error('Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', _name || 'Unknown');\n    }\n\n    if (typeof type.getDefaultProps === 'function' && !type.getDefaultProps.isReactClassApproved) {\n      error('getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.');\n    }\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement$1(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement$1(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement$1(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement$1(null);\n    }\n  }\n}\n\nvar didWarnAboutKeySpread = {};\nfunction jsxWithValidation(type, props, key, isStaticChildren, source, self) {\n  {\n    var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to\n    // succeed and there will likely be errors in render.\n\n    if (!validType) {\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var sourceInfo = getSourceInfoErrorAddendum(source);\n\n      if (sourceInfo) {\n        info += sourceInfo;\n      } else {\n        info += getDeclarationErrorAddendum();\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    }\n\n    var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.\n    // TODO: Drop this when these are no longer allowed as the type argument.\n\n    if (element == null) {\n      return element;\n    } // Skip key warning if the type isn't valid since our key validation logic\n    // doesn't expect a non-string/function type and can throw confusing errors.\n    // We don't want exception behavior to differ between dev and prod.\n    // (Rendering will throw with a helpful message and as soon as the type is\n    // fixed, the key warnings will appear.)\n\n\n    if (validType) {\n      var children = props.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    }\n\n    {\n      if (hasOwnProperty.call(props, 'key')) {\n        var componentName = getComponentNameFromType(type);\n        var keys = Object.keys(props).filter(function (k) {\n          return k !== 'key';\n        });\n        var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n        if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n          var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n          error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n          didWarnAboutKeySpread[componentName + beforeExample] = true;\n        }\n      }\n    }\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    } else {\n      validatePropTypes(element);\n    }\n\n    return element;\n  }\n} // These two functions exist to still get child warnings in dev\n// even with the prod transform. This means that jsxDEV is purely\n// opt-in behavior for better messages but that we won't stop\n// giving you warnings if you use production apis.\n\nfunction jsxWithValidationStatic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, true);\n  }\n}\nfunction jsxWithValidationDynamic(type, props, key) {\n  {\n    return jsxWithValidation(type, props, key, false);\n  }\n}\n\nvar jsx =  jsxWithValidationDynamic ; // we may want to special case jsxs internally to take advantage of static children.\n// for now we can ship identical prod functions\n\nvar jsxs =  jsxWithValidationStatic ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsx;\nexports.jsxs = jsxs;\n  })();\n}\n", "'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n", "import { useEffect, useRef, useState } from 'react';\nimport { getSvg, ISvg } from './domain/svg-provider';\nimport { angle2value, getClosestEdge, getPointers, IPointer, IPointers, roundToStep } from './domain/pointers-provider';\nimport { ISettings, ISettingsPointer } from './domain/settings-provider';\nimport { getNumber } from './domain/common-provider';\nimport {\n    DEFAULT_PATH_BORDER, DEFAULT_PATH_END_ANGLE, DEFAULT_PATH_RADIUS, DEFAULT_PATH_START_ANGLE,\n    DEFAULT_PATH_THICKNESS\n} from './domain/defaults-provider';\nimport Pointers from './ui/Pointers';\nimport { getData, IData } from './domain/data-provider';\nimport Connection from './ui/Connection';\nimport Text from './ui/Text';\nimport Ticks from './ui/Ticks';\nimport Circle from './ui/Circle';\nimport { mod } from 'mz-math';\nimport { isAngleInArc } from './domain/circle-provider';\nimport { outlineNoneStyle } from './domain/style-provider';\n\nexport const RoundSlider = (props: ISettings) => {\n\n    const [ data, setData ] = useState<IData|null>(null);\n    const [ svg, setSvg ] = useState<ISvg|null>(null);\n    const [ pointers, setPointers ] = useState<IPointers|null>(null);\n    const [ selectedPointerId, setSelectedPointerId ] = useState('');\n\n    const prevAngleDegRef = useRef<number|null>(null);\n    const svgRef = useRef<SVGSVGElement>(null);\n\n    useEffect(() => {\n        const _data = getData(props);\n        const hasChanged = JSON.stringify(data) !== JSON.stringify(_data);\n        if(!hasChanged) return;\n\n        setData(_data);\n    }, [\n        data,\n        props\n    ]);\n\n    useEffect(() => {\n        setPointers(getPointers(props, data));\n    },\n        // eslint-disable-next-line\n        [\n        props.pointerRadius,\n        props.pathStartAngle,\n        props.pointerBgColor,\n        props.pointerBgColorSelected,\n        props.pointerBgColorDisabled,\n        props.pointerBorder,\n        props.pointerBorderColor,\n        props.disabled,\n        props.pointers,\n        props.pointerRadius,\n        props.pointerBgColor,\n        props.pointerBgColorSelected,\n        props.pointerBgColorDisabled,\n        props.pointerBorder,\n        props.pointerBorderColor,\n        props.disabled,\n        props.pathStartAngle,\n        props.pathEndAngle,\n        data,\n    ]);\n\n    useEffect(() => {\n        if(!pointers) return;\n\n        const pathStartAngle = getNumber(props.pathStartAngle, DEFAULT_PATH_START_ANGLE);\n        let pathEndAngle = getNumber(props.pathEndAngle, DEFAULT_PATH_END_ANGLE);\n\n        if(pathEndAngle <= pathStartAngle) {\n            pathEndAngle += 360;\n        }\n\n        setSvg(getSvg(\n            getNumber(props.pathRadius, DEFAULT_PATH_RADIUS),\n            getNumber(props.pathThickness, DEFAULT_PATH_THICKNESS),\n            getNumber(props.pathBorder, DEFAULT_PATH_BORDER),\n            pointers.maxRadius,\n            pathStartAngle,\n            pathEndAngle,\n        ));\n    }, [\n        props.pathRadius,\n        props.pathThickness,\n        props.pathBorder,\n        props.pathStartAngle,\n        props.pathEndAngle,\n        pointers,\n    ]);\n\n    useEffect(() => {\n        const clearSelectedPointer = (evt: MouseEvent) => {\n            const $target = evt.target as HTMLElement;\n            const $pointer = $target.closest('[data-type=\"pointer\"]');\n            if($pointer) return;\n\n            setSelectedPointerId('');\n        };\n\n        document.addEventListener('mousedown', clearSelectedPointer);\n\n        return () => {\n            document.removeEventListener('mousedown', clearSelectedPointer);\n        };\n    }, []);\n\n    const setPointersCallback = (pointer: IPointer, newAngleDeg: number) => {\n        if(props.disabled || !pointers.pointers || !pointer || pointer.disabled) return;\n\n        newAngleDeg = roundToStep(newAngleDeg, data.stepAngleDeg, svg.startAngleDeg, svg.endAngleDeg);\n        if(data.isClosedShape && mod(newAngleDeg, 360) === mod(svg.endAngleDeg, 360)){\n            newAngleDeg = svg.startAngleDeg;\n        }\n\n        if(pointer.angleDeg === newAngleDeg){\n            updatePointer(pointer, newAngleDeg, false);\n            return;\n        }\n\n        const handleOverlap = !props.pointersOverlap;\n        if(handleOverlap) {\n\n            let prevAngle, nextAngle;\n\n            if(data.isClosedShape) {\n                const prevIndex = mod(pointer.index - 1, pointers.pointers.length);\n                const nextIndex = mod(pointer.index + 1, pointers.pointers.length);\n\n                const prevPointer = pointers.pointers[prevIndex];\n                const nextPointer = pointers.pointers[nextIndex];\n\n                prevAngle = prevPointer.angleDeg;\n                nextAngle = nextPointer.angleDeg;\n\n                if(pointers.pointers.length === 2 && (prevAngle === nextAngle)) {\n\n                    const splitPointDeg = prevAngle; // === nextAngle\n\n                    if(prevAngleDegRef.current === null) {\n                        prevAngleDegRef.current = newAngleDeg;\n                    }\n                    else{\n                        // Clockwise: new angle in (splitPointDeg, splitPointDeg + 90]\n                        // Clockwise: prev angle in [splitPointDeg - 90, splitPointDeg)\n                        // CounterClockwise: new angle in [splitPointDeg - 90, splitPointDeg)\n                        // CounterClockwise: prev angle in (splitPointDeg, splitPointDeg + 90]\n\n                        const SAFE_ANGLE = 150;\n\n                        let t1 = splitPointDeg - SAFE_ANGLE;\n                        let t2 = splitPointDeg - 0.001;\n\n                        if(t1 < 0) t1 += 360;\n                        if(t2 < 0) t2 += 360;\n\n                        const clockwiseNew = isAngleInArc(splitPointDeg + 0.001, splitPointDeg + SAFE_ANGLE, newAngleDeg);\n                        const clockwisePrev = isAngleInArc(t1, t2, prevAngleDegRef.current);\n                        const clockwise = clockwiseNew && clockwisePrev;\n\n                        let t3 = splitPointDeg - SAFE_ANGLE;\n                        let t4 = splitPointDeg - 0.001;\n\n                        if(t3 < 0) t3 += 360;\n                        if(t4 < 0) t4 += 360;\n\n                        const counterClockwiseNew = isAngleInArc(t3, t4, newAngleDeg);\n                        const counterClockwisePrev = isAngleInArc(splitPointDeg + 0.001, splitPointDeg + SAFE_ANGLE, prevAngleDegRef.current);\n                        const counterClockwise = counterClockwiseNew && counterClockwisePrev;\n\n                        if(clockwise || counterClockwise) {\n                            updatePointer(pointer, splitPointDeg, true);\n                            return;\n                        }\n\n                        if(newAngleDeg !== splitPointDeg) {\n                           prevAngleDegRef.current = newAngleDeg;\n                        }\n                    }\n                }\n            }\n            else{\n                prevAngle = pointer.index === 0 ? svg.startAngleDeg : pointers.pointers[pointer.index - 1].angleDeg;\n                nextAngle = pointer.index === pointers.pointers.length - 1 ? svg.endAngleDeg : pointers.pointers[pointer.index + 1].angleDeg;\n            }\n\n            if(nextAngle <= prevAngle) {\n                nextAngle += 360;\n            }\n            else{\n                if(mod(prevAngle, 360) <= mod(nextAngle, 360)) {\n                    prevAngle = mod(prevAngle, 360);\n                    nextAngle = mod(nextAngle, 360);\n                }\n            }\n\n            if(!isAngleInArc(prevAngle, nextAngle, newAngleDeg)){\n                newAngleDeg = getClosestEdge(\n                    prevAngle,\n                    nextAngle,\n                    newAngleDeg,\n                    svg.cx,\n                    svg.cy,\n                    svg.radius\n                );\n            }\n        }\n\n        updatePointer(pointer, newAngleDeg, pointer.angleDeg !== newAngleDeg);\n    };\n\n    const updatePointer = (pointer: IPointer, newAngleDeg: number, angleChanged: boolean) => {\n\n        if(angleChanged) {\n            const _pointers = { ...pointers };\n            _pointers.pointers = [...pointers.pointers];\n            _pointers.pointers[pointer.index].prevAngleDeg = _pointers.pointers[pointer.index].angleDeg;\n            _pointers.pointers[pointer.index].angleDeg = newAngleDeg;\n            pointers.pointers = _pointers.pointers;\n\n            setPointers(_pointers);\n\n            if(typeof props.onChange === 'function') {\n\n                const updatedPointers: ISettingsPointer[] = _pointers.pointers.map(pointer => {\n\n                    const val = angle2value(\n                        data,\n                        pointer.angleDeg,\n                        svg.startAngleDeg,\n                        svg.endAngleDeg\n                    );\n\n                    return {\n                        radius: pointer.radius,\n                        value: val,\n                        bgColor: pointer.bgColor,\n                        bgColorSelected: pointer.bgColorSelected,\n                        bgColorDisabled: pointer.bgColorDisabled,\n                        border: pointer.border,\n                        borderColor: pointer.borderColor,\n                        disabled: pointer.disabled,\n                        ariaLabel: pointer.ariaLabel,\n                    };\n                });\n\n                props.onChange(updatedPointers);\n            }\n        }\n\n        setSelectedPointerId(pointer.id);\n\n        const $pointer = svgRef.current?.querySelector(`[data-id=\"${ pointer.id }\"]`) as HTMLElement;\n        if($pointer) {\n            $pointer.focus();\n        }\n    };\n\n    return (\n        <>\n            {\n                svg &&\n                <svg\n                    ref={ svgRef }\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width={ svg.size }\n                    height={ svg.size }\n                    tabIndex={ 0 }\n                    focusable={ true }\n                    aria-disabled={ props.disabled ? true : undefined }\n                    style={ props.svgBgColor ? { ...outlineNoneStyle, backgroundColor: props.svgBgColor } : outlineNoneStyle }\n                    className={ `mz-round-slider ${ props.disabled ? 'mz-round-slider-disabled' : '' }` }>\n\n                    {\n                        (props.SvgDefs) &&\n                        <defs>\n                            { props.SvgDefs }\n                        </defs>\n                    }\n\n                    <Circle\n                        settings={ props }\n                        pointers={ pointers }\n                        svg={ svg }\n                        $svg={ svgRef.current }\n                        setPointer={ setPointersCallback }\n                    />\n\n                    <Ticks settings={ props } svg={ svg } data={ data } />\n\n                    <Connection\n                        settings={ props }\n                        pointers={ pointers }\n                        svg={ svg }\n                        $svg={ svgRef.current }\n                        data={ data }\n                        setPointer={ setPointersCallback }\n                    />\n\n                    <Pointers\n                        settings={ props }\n                        pointers={ pointers }\n                        svg={ svg }\n                        $svg={ svgRef.current }\n                        data={ data }\n                        setPointer={ setPointersCallback }\n                        onDragEnd={props.onDragEnd}\n                        selectedPointerId={ selectedPointerId }\n                    />\n\n                    <Text\n                        settings={ props }\n                        pointers={ pointers }\n                        svg={ svg }\n                        data={ data }\n                    />\n                </svg>\n            }\n        </>\n    )\n};", "export const setDecimalPlaces = (num: number, decimalPlaces: number | undefined = Infinity) => {\n    if(decimalPlaces === Infinity) return num;\n\n    if(decimalPlaces < 0){\n        decimalPlaces = 0;\n    }\n\n    const coefficient = 10 ** decimalPlaces;\n    return Math.round(num * coefficient) / coefficient;\n};", "import { Vector2 } from '../types';\nimport { setDecimalPlaces } from './format';\n\nexport const mod = (n: number, m: number) => {\n    return ((n % m) + m) % m;\n};\n\n/**\n * Convert range [a, b] to [c, d].\n * f(x) = (d - c) * (x - a) / (b - a) + c\n */\nexport const convertRange = (x: number, a: number, b: number, c: number, d: number) => {\n    return (d - c) * (x - a) / (b - a) + c;\n};\n\n/**\n * Check if 2 ranges [a,b] and [c,d] overlap.\n */\nexport const doRangesOverlap = (a: number, b: number, c: number, d: number) => {\n    return Math.max(a, c) <= Math.min(b, d) ;\n};\n\n// eslint-disable-next-line\nexport const isNumber = (value: any) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n/**\n * Convert polar coordinates to cartesian coordinates.\n */\nexport const polarToCartesian = (center: Vector2, radii: Vector2, angleInRad: number, decimalPlaces = Infinity) : Vector2 => {\n    const [cx, cy] = center;\n    const [rx, ry] = radii;\n\n    return [\n        setDecimalPlaces(cx + (rx * Math.cos(angleInRad)), decimalPlaces),\n        setDecimalPlaces(cy + (ry * Math.sin(angleInRad)), decimalPlaces),\n    ];\n};", "import { Vector, Vector2, Vector3 } from '../types';\nimport { setDecimalPlaces } from './format';\nimport { v2Length, vNormalize, vDotProduct, vSub } from './linear-algebra/vector';\nimport { mod } from './other';\n\nexport const getV2Angle = (v2: Vector2, decimalPlaces = Infinity) => {\n    const angle = Math.atan2(v2[1], v2[0]);\n    return setDecimalPlaces(angle, decimalPlaces);\n};\n\nexport const getV2AngleInEllipse = (v2: Vector2, radii: Vector2, decimalPlaces = Infinity) => {\n    const angle = Math.atan2(v2[1]/radii[1], v2[0]/radii[0]);\n    return setDecimalPlaces(angle, decimalPlaces);\n};\n\nexport const setV2Angle = (v2: Vector2, newAngleRad: number, decimalPlaces = Infinity): Vector2 => {\n    const length = v2Length(v2);\n    return [\n        setDecimalPlaces(Math.cos(newAngleRad) * length, decimalPlaces),\n        setDecimalPlaces(Math.sin(newAngleRad) * length, decimalPlaces),\n    ];\n};\n\nexport const radiansToDegrees = (radians: number, decimalPlaces = Infinity) => {\n    const res = radians * (180 / Math.PI);\n    return setDecimalPlaces(res, decimalPlaces);\n};\n\nexport const degreesToRadians = (degrees: number, decimalPlaces = Infinity) => {\n    const res = degrees * (Math.PI / 180);\n    return setDecimalPlaces(res, decimalPlaces);\n};\n\n/**\n * Returns the range [0, Math.PI]\n * A = Math.acos( dot(v1, v2)/(v1.length()*v2.length()) );\n */\nexport const getVNAngleBetween = (vector1: Vector, vector2: Vector, decimalPlaces = Infinity) : number => {\n    const unitVector1 = vNormalize(vector1);\n    const unitVector2 = vNormalize(vector2);\n    const dotProduct = vDotProduct(unitVector1, unitVector2);\n    const angle = Math.acos(dotProduct);\n    return setDecimalPlaces(angle, decimalPlaces);\n};\n\nexport const getV2AngleBetween = (vector1: Vector2, vector2: Vector2, decimalPlaces = Infinity) : number => {\n    // return getVNAngleBetween(vector1, vector2, decimalPlaces);\n    const diff = vSub(vector1, vector2);\n    const angle = Math.atan2(diff[1], diff[0]);\n    return setDecimalPlaces(angle, decimalPlaces);\n};\n\nexport const getV3AngleBetween = (vector1: Vector3, vector2: Vector3, decimalPlaces = Infinity) : number => {\n    return getVNAngleBetween(vector1, vector2, decimalPlaces);\n};\n\nexport const isAngleBetween = (angleDegrees: number, startAngleDegrees: number, endAngleDegrees: number) : boolean => {\n    const distance = getAnglesSub(startAngleDegrees, endAngleDegrees);\n    const distance1 = getAnglesSub(startAngleDegrees, angleDegrees);\n    const distance2 = getAnglesSub(endAngleDegrees, angleDegrees);\n    const totalDistance = distance1 + distance2;\n\n    // Use a small threshold for floating point errors\n    return Math.abs(totalDistance - distance) <= 0.001;\n}\n\nexport const isClockwise = (angle1Deg: number, angle2Deg: number, startAngleDeg = 0) => {\n    angle1Deg = angle1Deg % 360;\n    angle2Deg = angle2Deg % 360;\n\n    if(angle1Deg < startAngleDeg) {\n        angle1Deg += 360;\n    }\n\n    if(angle2Deg < startAngleDeg) {\n        angle2Deg += 360;\n    }\n\n    return angle2Deg >= angle1Deg;\n};\n\n/**\n * Shortest distance (angular) between two angles.\n */\nexport const getAnglesSub = (angleDegrees1: number, angleDegrees2: number, decimalPlaces = Infinity) : number => {\n    const angleDistance = Math.abs(mod(angleDegrees1, 360) - mod(angleDegrees2, 360));\n    return setDecimalPlaces(angleDistance <= 180 ? angleDistance : 360 - angleDistance, decimalPlaces);\n};\n\nexport const getAnglesDistance = (angle1Deg: number, angle2Deg: number, startAngleDeg = 0, decimalPlaces = Infinity) => {\n    angle1Deg = angle1Deg % 360;\n    angle2Deg = angle2Deg % 360;\n\n    if(angle1Deg < startAngleDeg) {\n        angle1Deg += 360;\n    }\n\n    if(angle2Deg < startAngleDeg) {\n        angle2Deg += 360;\n    }\n\n    if(isClockwise(angle1Deg, angle2Deg, startAngleDeg)) {\n        return setDecimalPlaces((angle2Deg - angle1Deg + 360) % 360, decimalPlaces);\n    }\n    else{\n        return setDecimalPlaces((angle1Deg - angle2Deg + 360) % 360, decimalPlaces);\n    }\n};\n\nexport const percentToAngle = (percent: number, startAngleDeg: number, endAngleDeg: number, circleStartAngle = 0) => {\n    if(percent < 0) {\n        percent = 0;\n    }\n\n    if(percent > 100) {\n        percent = 100;\n    }\n\n    const distance = getAnglesDistance(startAngleDeg, endAngleDeg, circleStartAngle);\n\n    const clockwise = isClockwise(startAngleDeg, endAngleDeg, circleStartAngle);\n    if(clockwise) {\n        return mod(circleStartAngle + (percent * distance / 100), 360);\n    }\n    else {\n        return mod(circleStartAngle - (percent * distance / 100), 360);\n    }\n};", "import { Vector, Vector2, Vector3, Vector4 } from '../../types';\nimport { setDecimalPlaces } from '../format';\nimport { getV2Angle, setV2Angle } from '../angle';\n\n// ------------ SUM ------------------------\n\nexport const vSum = (vector1: Vector, vector2: Vector, decimalPlaces = Infinity) : Vector => {\n\n    const vector: Vector = [];\n\n    for(let i=0; i<vector1.length; i++){\n        vector.push(setDecimalPlaces(vector1[i] + vector2[i], decimalPlaces));\n    }\n\n    return vector;\n};\n\nexport const v2Sum = (vector1: Vector2, vector2: Vector2, decimalPlaces = Infinity) : Vector2 => {\n    return vSum(vector1, vector2, decimalPlaces) as Vector2;\n};\n\nexport const v3Sum = (vector1: Vector3, vector2: Vector3, decimalPlaces = Infinity) : Vector3 => {\n    return vSum(vector1, vector2, decimalPlaces) as Vector3;\n};\n\n// ------------ SUB ------------------------\n\nexport const vSub = (vector1: Vector, vector2: Vector, decimalPlaces = Infinity) : Vector => {\n\n    const vector: Vector = [];\n\n    for(let i=0; i<vector1.length; i++){\n        vector.push(setDecimalPlaces(vector1[i] - vector2[i], decimalPlaces));\n    }\n\n    return vector;\n};\n\nexport const v2Sub = (vector1: Vector2, vector2: Vector2, decimalPlaces = Infinity) : Vector2 => {\n    return vSub(vector1, vector2, decimalPlaces) as Vector2;\n};\n\nexport const v3Sub = (vector1: Vector3, vector2: Vector3, decimalPlaces = Infinity) : Vector3 => {\n    return vSub(vector1, vector2, decimalPlaces) as Vector3;\n};\n\n// ------------ MUL SCALAR ------------------------\n\nexport const vMulScalar = (v: Vector, scalar: number, decimalPlaces = Infinity): Vector => {\n    const vector: Vector = [];\n\n    for(let i=0; i<v.length; i++){\n        vector.push(setDecimalPlaces(v[i] * scalar, decimalPlaces));\n    }\n\n    return vector;\n};\n\nexport const v2MulScalar = (v2: Vector2, scalar: number, decimalPlaces = Infinity): Vector2 => {\n    return vMulScalar(v2, scalar, decimalPlaces) as Vector2;\n};\n\nexport const v3MulScalar = (v3: Vector3, scalar: number, decimalPlaces = Infinity): Vector3 => {\n    return vMulScalar(v3, scalar, decimalPlaces) as Vector3;\n};\n\n// ------------ DIVIDE ------------------------\n\nexport const vDivideScalar = (v: Vector, scalar: number, decimalPlaces = Infinity): Vector => {\n    if(scalar === 0){\n        throw new Error('Division by zero error.');\n    }\n\n    const vector: Vector = [];\n\n    for(let i=0; i<v.length; i++){\n        vector.push(setDecimalPlaces(v[i] / scalar, decimalPlaces));\n    }\n\n    return vector;\n};\n\nexport const v2DivideScalar = (v2: Vector2, scalar: number, decimalPlaces = Infinity): Vector2 => {\n    return vDivideScalar(v2, scalar, decimalPlaces) as Vector2;\n};\n\nexport const v3DivideScalar = (v3: Vector3, scalar: number, decimalPlaces = Infinity): Vector3 => {\n    return vDivideScalar(v3, scalar, decimalPlaces) as Vector3;\n};\n\n// ------------ LENGTH ------------------------\n\nexport const vLength = (vector: Vector, decimalPlaces = Infinity) => {\n    let sum = 0;\n\n    for(let i=0; i<vector.length; i++){\n        sum += vector[i] * vector[i];\n    }\n\n    return setDecimalPlaces(Math.sqrt(sum), decimalPlaces);\n};\n\nexport const v2Length = (vector: Vector2, decimalPlaces = Infinity) => {\n    return vLength(vector, decimalPlaces);\n};\n\nexport const v3Length = (vector: Vector3, decimalPlaces = Infinity) => {\n    return vLength(vector, decimalPlaces);\n};\n\nexport const v2SetLength = (v2: Vector2, newLength: number, decimalPlaces = Infinity): Vector2 => {\n    const angle = getV2Angle(v2);\n    return [\n        setDecimalPlaces(Math.cos(angle) * newLength, decimalPlaces),\n        setDecimalPlaces(Math.sin(angle) * newLength, decimalPlaces),\n    ];\n};\n\n// ----------- DISTANCE ------------------------\n\nexport const vDistance = (vector1: Vector, vector2: Vector, decimalPlaces = Infinity) => {\n    const diff = vSub(vector1, vector2);\n    return vLength(diff, decimalPlaces);\n};\n\nexport const v2Distance = (vector1: Vector2, vector2: Vector2, decimalPlaces = Infinity) => {\n    const diff = vSub(vector1, vector2);\n    return vLength(diff, decimalPlaces);\n};\n\nexport const v3Distance = (vector1: Vector3, vector2: Vector3, decimalPlaces = Infinity) => {\n    const diff = vSub(vector1, vector2);\n    return vLength(diff, decimalPlaces);\n};\n\n// ------------ NORMALIZE ------------------------\n\n/**\n * Normalization creates a unit vector, which is a vector of length 1.\n */\nexport const vNormalize = (v: Vector, decimalPlaces = Infinity) : Vector => {\n    const length = vLength(v);\n    const unitVector: Vector = [];\n\n    for(let i=0; i<v.length; i++){\n        unitVector.push(length === 0 ? 0 : setDecimalPlaces(v[i] / length, decimalPlaces));\n    }\n\n    return unitVector;\n};\n\nexport const v2Normalize = (v2: Vector2, decimalPlaces = Infinity) : Vector2 => {\n    return vNormalize(v2, decimalPlaces) as Vector2;\n};\n\nexport const v3Normalize = (v3: Vector3, decimalPlaces = Infinity) : Vector3 => {\n    return vNormalize(v3, decimalPlaces) as Vector3;\n};\n\n// ------------ DOT PRODUCT ------------------------\n\nexport const vDotProduct = (vector1: Vector, vector2: Vector, decimalPlaces = Infinity) : number => {\n    let sum = 0;\n\n    for(let i=0; i<vector1.length; i++){\n        sum += vector1[i] * vector2[i];\n    }\n\n    return setDecimalPlaces(sum, decimalPlaces);\n};\n\nexport const v2DotProduct = (vector1: Vector2, vector2: Vector2, decimalPlaces = Infinity) : number => {\n    return vDotProduct(vector1, vector2, decimalPlaces);\n};\n\nexport const v3DotProduct = (vector1: Vector3, vector2: Vector3, decimalPlaces = Infinity) : number => {\n    return vDotProduct(vector1, vector2, decimalPlaces);\n};\n\n// ------------ CROSS PRODUCT ------------------------\n\n/**\n * Cross product is possible on 3D vectors only.\n * The cross product a \u00D7 b is defined as a vector c that is perpendicular (orthogonal) to both a and b.\n */\nexport const v3CrossProduct = (vector1: Vector3, vector2: Vector3, decimalPlaces = Infinity): Vector3 => {\n    return [\n        setDecimalPlaces(vector1[1] * vector2[2] - vector1[2] * vector2[1], decimalPlaces),\n        setDecimalPlaces(vector1[2] * vector2[0] - vector1[0] * vector2[2], decimalPlaces),\n        setDecimalPlaces(vector1[0] * vector2[1] - vector1[1] * vector2[0], decimalPlaces),\n    ];\n};\n\n// --------------- INIT VECTOR HELPER -----------------\n\nexport const v2 = (defaultValue = 0): Vector2 => {\n    return [defaultValue, defaultValue];\n};\n\nexport const v3 = (defaultValue = 0): Vector3 => {\n    return [defaultValue, defaultValue, defaultValue];\n};\n\nexport const v4 = (defaultValue = 0): Vector4 => {\n    return [defaultValue, defaultValue, defaultValue, defaultValue];\n};\n\nexport const vN = (N: number, defaultValue = 0): Vector => {\n\n    if(N < 0){\n        throw new Error('N must be a non-negative number.');\n    }\n\n    const vector: Vector = [];\n    for(let i=0; i<N; i++){\n        vector.push(defaultValue);\n    }\n    return vector;\n};\n\n/**\n * Initialize vector using polar coordinates\n */\nexport const v2FromPolarCoords = (distance: number, angleRad: number): Vector2 => {\n    let vector: Vector2 = [0, 0];\n    vector = v2SetLength(vector, distance);\n    return setV2Angle(vector, angleRad);\n};\n\n// --------------- EQUALITY -------------------------\n\nexport const vEqual = (vector1: Vector, vector2: Vector): boolean => {\n    if(vector1.length !== vector2.length) return false;\n\n    for(let i=0; i<vector1.length; i++){\n        if(vector1[i] !== vector2[i]) return false;\n    }\n\n    return true;\n};\n\n// --------------- NORMAL --------------------------\n\nexport const v2GetNormal = (vector1: Vector2, vector2: Vector2, decimalPlaces = Infinity): Vector2 => {\n    const sub = v2Sub(vector2, vector1);\n    return [\n        -setDecimalPlaces(sub[1], decimalPlaces),\n        setDecimalPlaces(sub[0], decimalPlaces)\n    ];\n};", "import { Matrix2, Matrix3, Matrix4, Matrix, Vector, Vector2, Vector3 } from '../../types';\nimport { vMulScalar, vSum, vSub, vDotProduct, vN, vEqual, vDivideScalar } from './vector';\n\n// --------------- SUM ----------------------\n\nexport const mSum = (matrix1: Matrix, matrix2: Matrix, decimalPlaces = Infinity): Matrix => {\n    const matrix: Matrix = [];\n\n    for(let i=0; i<matrix1.length; i++){\n        matrix.push(vSum(matrix1[i], matrix2[i], decimalPlaces));\n    }\n\n    return matrix;\n};\n\nexport const m2Sum = (matrix1: Matrix2, matrix2: Matrix2, decimalPlaces = Infinity): Matrix2 => {\n    return mSum(matrix1, matrix2, decimalPlaces) as Matrix2;\n};\n\nexport const m3Sum = (matrix1: Matrix3, matrix2: Matrix3, decimalPlaces = Infinity): Matrix3 => {\n    return mSum(matrix1, matrix2, decimalPlaces) as Matrix3;\n};\n\n// --------------- SUB ----------------------\n\nexport const mSub = (matrix1: Matrix, matrix2: Matrix, decimalPlaces = Infinity): Matrix => {\n    const matrix: Matrix = [];\n\n    for(let i=0; i<matrix1.length; i++){\n        matrix.push(vSub(matrix1[i], matrix2[i], decimalPlaces));\n    }\n\n    return matrix;\n};\n\nexport const m2Sub = (matrix1: Matrix2, matrix2: Matrix2, decimalPlaces = Infinity): Matrix2 => {\n    return mSub(matrix1, matrix2, decimalPlaces) as Matrix2;\n};\n\nexport const m3Sub = (matrix1: Matrix3, matrix2: Matrix3, decimalPlaces = Infinity): Matrix3 => {\n    return mSub(matrix1, matrix2, decimalPlaces) as Matrix3;\n};\n\n// --------------- MUL SCALAR ----------------------\n\nexport const mMulScalar = (m: Matrix, scalar: number, decimalPlaces = Infinity): Matrix => {\n    const matrix: Matrix = [];\n\n    for(const v of m){\n        matrix.push(vMulScalar(v, scalar, decimalPlaces));\n    }\n\n    return matrix;\n};\n\nexport const m2MulScalar = (m2: Matrix2, scalar: number, decimalPlaces = Infinity): Matrix2 => {\n    return mMulScalar(m2, scalar, decimalPlaces) as Matrix2;\n};\n\nexport const m3MulScalar = (m3: Matrix3, scalar: number, decimalPlaces = Infinity): Matrix3 => {\n    return mMulScalar(m3, scalar, decimalPlaces) as Matrix3;\n};\n\n// --------------- DIVIDE SCALAR ----------------------\n\nexport const mDivideScalar = (m: Matrix, scalar: number, decimalPlaces = Infinity): Matrix => {\n    if(scalar === 0){\n        throw new Error('Division by zero error.');\n    }\n\n    const matrix: Matrix = [];\n\n    for(const v of m){\n        matrix.push(vDivideScalar(v, scalar, decimalPlaces));\n    }\n\n    return matrix;\n};\n\nexport const m2DivideScalar = (m2: Matrix2, scalar: number, decimalPlaces = Infinity): Matrix2 => {\n    return mDivideScalar(m2, scalar, decimalPlaces) as Matrix2;\n};\n\nexport const m3DivideScalar = (m3: Matrix3, scalar: number, decimalPlaces = Infinity): Matrix3 => {\n    return mDivideScalar(m3, scalar, decimalPlaces) as Matrix3;\n};\n\n\n// --------------- TRANSPOSE ----------------------\n\nexport const mTranspose = (m: Matrix): Matrix => {\n\n    const vectorsCount = m.length;\n    if(vectorsCount <= 0) return m;\n\n    const vectorLength = m[0].length;\n    if(vectorLength <= 0) return m;\n\n    const matrix: Matrix = [];\n    for(let i=0; i<vectorLength; i++){\n        matrix.push([]);\n    }\n\n    for(let i=0; i<vectorsCount; i++){\n        for(let j=0; j<vectorLength; j++){\n            matrix[j].push(m[i][j]);\n        }\n    }\n\n    return matrix;\n};\n\nexport const m2Transpose = (m2: Matrix2): Matrix => {\n    return mTranspose(m2);\n};\n\nexport const m3Transpose = (m3: Matrix3): Matrix => {\n    return mTranspose(m3);\n};\n\n// ----------------- RESET ----------------------\n\nexport const mReset = (m: Matrix, defaultValue = 0): Matrix => {\n\n    if(m.length <= 0) return [];\n\n    const res: Matrix = [];\n\n    for(let i=0; i<m.length; i++){\n        const size = m[i].length;\n\n        const vector: Vector = [];\n        for(let j=0; j<size; j++){\n            vector.push(defaultValue);\n        }\n\n        res.push(vector);\n    }\n\n    return res;\n};\n\nexport const m2Reset = (m2: Matrix2, defaultValue = 0): Matrix2 => {\n    return mReset(m2, defaultValue) as Matrix2;\n};\n\nexport const m3Reset = (m3: Matrix3, defaultValue = 0): Matrix3 => {\n    return mReset(m3, defaultValue) as Matrix3;\n};\n\n// --------------- MATRIX INIT HELPERS -----------------\n\nexport const m2x2 = (defaultValue = 0): Matrix2 => {\n    return [\n        [defaultValue, defaultValue],\n        [defaultValue, defaultValue],\n    ];\n};\n\nexport const m3x3 = (defaultValue = 0): Matrix3 => {\n    return [\n        [defaultValue, defaultValue, defaultValue],\n        [defaultValue, defaultValue, defaultValue],\n        [defaultValue, defaultValue, defaultValue],\n    ];\n};\n\nexport const m4x4 = (defaultValue = 0): Matrix4 => {\n    return [\n        [defaultValue, defaultValue, defaultValue, defaultValue],\n        [defaultValue, defaultValue, defaultValue, defaultValue],\n        [defaultValue, defaultValue, defaultValue, defaultValue],\n        [defaultValue, defaultValue, defaultValue, defaultValue],\n    ];\n};\n\nexport const mNxM = (N: number, M: number, defaultValue = 0): Matrix => {\n    if(N <= 0 || M <= 0){\n        throw new Error('M and N must be positive numbers.');\n    }\n\n    const matrix: Matrix = [];\n\n    for(let i=0; i<N; i++){\n        matrix.push(vN(M, defaultValue));\n    }\n\n    return matrix;\n};\n\nexport const identity2 = (): Matrix2 => {\n    return [\n        [1, 0],\n        [0, 1],\n    ];\n};\n\nexport const identity3 = (): Matrix3 => {\n    return [\n        [1, 0, 0],\n        [0, 1, 0],\n        [0, 0, 1],\n    ];\n};\n\nexport const identity4 = (): Matrix4 => {\n    return [\n        [1, 0, 0, 0],\n        [0, 1, 0, 0],\n        [0, 0, 1, 0],\n        [0, 0, 0, 1],\n    ];\n};\n\n/**\n * Identity Matrix (I).\n * M x I = I x M = M for any matrix M.\n * Identity Matrix is a special case of scale matrix.\n */\nexport const identityN = (N: number): Matrix => {\n    if(N < 0){\n        throw new Error('N must be a non-negative number.');\n    }\n\n    if(N === 0) return [];\n\n    const matrix: Matrix = [];\n\n    for(let i=0; i<N; i++){\n        const vector: Vector = [];\n        for(let j=0; j<N; j++){\n            vector.push(i === j ? 1 : 0);\n        }\n        matrix.push(vector);\n    }\n\n    return matrix;\n};\n\n// -------------- MATRIX MANIPULATION HELPERS ------------\n\nexport const mDeepCopy = (m: Matrix): Matrix => {\n    const matrix: Matrix = [];\n\n    for(let i=0; i<m.length; i++){\n        const v = m[i];\n        const vector: Vector = [];\n        for(let j=0; j<v.length; j++){\n            vector.push(v[j]);\n        }\n        matrix.push(vector);\n    }\n\n    return matrix;\n};\n\nexport const m2DeepCopy = (m2: Matrix2): Matrix2 => {\n    return mDeepCopy(m2) as Matrix2;\n};\n\nexport const m3DeepCopy = (m3: Matrix3): Matrix3 => {\n    return mDeepCopy(m3) as Matrix3;\n};\n\n// -------------- APPEND / PREPEND ROW OR COLUMN ---------------\n\nexport const mAppendCol = (m: Matrix, col: Vector): Matrix  => {\n    if(m.length <= 0) return [];\n\n    const copy = mDeepCopy(m);\n    for(let i=0; i<copy.length; i++){\n        copy[i].push(col[i]);\n    }\n\n    return copy;\n};\n\nexport const mPrependCol = (m: Matrix, col: Vector): Matrix  => {\n    if(m.length <= 0) return [];\n\n    const copy = mDeepCopy(m);\n    for(let i=0; i<copy.length; i++){\n        copy[i].unshift(col[i]);\n    }\n\n    return copy;\n};\n\nexport const mAppendRow = (m: Matrix, row: Vector) : Matrix => {\n    const copy = mDeepCopy(m);\n    copy.push(row);\n    return copy;\n};\n\nexport const m2AppendRow = (m2: Matrix2, row: Vector2) : Matrix2 => {\n    const copy = m2DeepCopy(m2);\n    copy.push(row);\n    return copy;\n};\n\nexport const m3AppendRow = (m3: Matrix3, row: Vector3) : Matrix3 => {\n    const copy = m3DeepCopy(m3);\n    copy.push(row);\n    return copy;\n};\n\nexport const mPrependRow = (m: Matrix, row: Vector) : Matrix => {\n    const copy = mDeepCopy(m);\n    copy.unshift(row);\n    return copy;\n};\n\nexport const m2PrependRow = (m2: Matrix2, row: Vector2) : Matrix2 => {\n    const copy = m2DeepCopy(m2);\n    copy.unshift(row);\n    return copy;\n};\n\nexport const m3PrependRow = (m3: Matrix3, row: Vector3) : Matrix3 => {\n    const copy = m3DeepCopy(m3);\n    copy.unshift(row);\n    return copy;\n};\n\n// ------------ DELETE ROW OR COLUMN ----------------------------\n\nexport const mDelLastRow = (m: Matrix): Matrix => {\n    if(m.length <= 0) return [];\n\n    const copy = mDeepCopy(m);\n    copy.pop();\n    return copy;\n};\n\nexport const mDelFirstRow = (m: Matrix): Matrix => {\n    if(m.length <= 0) return [];\n\n    const copy = mDeepCopy(m);\n    copy.shift();\n    return copy;\n};\n\nexport const mDelLastColumn = (m: Matrix): Matrix => {\n    if(m.length <= 0) return [];\n\n    const copy = mDeepCopy(m);\n    for(let i=0; i<copy.length; i++){\n        copy[i].pop();\n    }\n\n    return copy;\n};\n\nexport const mDelFirstColumn = (m: Matrix): Matrix => {\n    if(m.length <= 0) return [];\n\n    const copy = mDeepCopy(m);\n    for(let i=0; i<copy.length; i++){\n        copy[i].shift();\n    }\n\n    return copy;\n};\n\n// ----------- GET COLUMN ---------------------------\n\nexport const mGetFirstColumn = (m: Matrix) : Vector => {\n    if(m.length <= 0) return [];\n\n    const vector: Vector = [];\n    for(let i=0; i<m.length; i++){\n        vector.push(m[i][0]);\n    }\n    return vector;\n};\n\nexport const mGetLastColumn = (m: Matrix) : Vector => {\n    if(m.length <= 0) return [];\n\n    const size = m[0].length;\n\n    const vector: Vector = [];\n    for(let i=0; i<m.length; i++){\n        vector.push(m[i][size - 1]);\n    }\n    return vector;\n};\n\nexport const mGetColumn = (m: Matrix, colIndex: number) : Vector => {\n    if(m.length <= 0) return [];\n\n    const vector: Vector = [];\n    for(let i=0; i<m.length; i++){\n        vector.push(m[i][colIndex]);\n    }\n    return vector;\n};\n\n// --------------- MULTIPLICATION ------------------------\n\n/**\n * Matrix Multiplication.\n * - Matrix multiplication is not commutative: M1 x M2 !== M2 x M1\n * - Matrix multiplication is associative: A x (B x C) = (A x B) x C.\n * - A x (B + C) = A x B + A x C\n */\nexport const mMul = (matrix1: Matrix, matrix2: Matrix, decimalPlaces = Infinity): Matrix => {\n\n    const matrix: Matrix = [];\n    for(let i=0; i<matrix1.length; i++){\n        matrix.push([]);\n    }\n\n    const transposed = mTranspose(matrix2);\n\n    if(matrix.length !== transposed.length){\n        throw new Error('The number of columns in the 1st matrix must be equal to the number of rows in the 2nd matrix.');\n    }\n\n    for(let i=0; i<matrix1.length; i++){\n        const vector1 = matrix1[i];\n\n        for(let j=0; j<transposed.length; j++){\n            const vector2 = transposed[j];\n            const product = vDotProduct(vector1, vector2, decimalPlaces);\n            matrix[i].push(product);\n        }\n    }\n\n    return matrix;\n};\n\nexport const mMulVector = (matrix: Matrix, vector: Vector, decimalPlaces = Infinity): Vector => {\n\n    if(matrix.length < 0) return [];\n\n    if(matrix[0].length !== vector.length){\n        throw new Error('The number of columns in the matrix must be equal to the length of the vector.');\n    }\n\n    const res: Vector = [];\n\n    for(let i=0; i<matrix.length; i++){\n        res[i] = vDotProduct(matrix[i], vector, decimalPlaces);\n    }\n\n    return res;\n};\n\n// --------------- EQUALITY -----------------------------\n\nexport const mEqual = (matrix1: Matrix, matrix2: Matrix): boolean => {\n    if(matrix1.length !== matrix2.length) return false;\n\n    for(let i=0; i<matrix1.length; i++){\n        if(!vEqual(matrix1[i], matrix2[i])) return false;\n    }\n\n    return true;\n};\n\n// ------------------- Determinant ---------------\n\n/**\n * Returns a matrix without provided row / col.\n * If we received a matrix M (mxm) ===> returns matrix N (m-1 x m-1)\n * The matrix must be square.\n */\nconst mMinorHelper = (m: Matrix, row: number, col: number) => {\n    const size = m.length;\n\n    if(size <= 0){\n        throw new Error('The matrix should not be empty.');\n    }\n\n    if(size !== m[0].length){\n        throw new Error('The matrix must be square.');\n    }\n\n    const matrix: Matrix = [];\n\n    for(let i=0; i<size; i++){\n        if(i === row) continue;\n\n        const vector: Vector = [];\n\n        for(let j=0; j<size; j++){\n            if(j === col) continue;\n            vector.push(m[i][j]);\n        }\n\n        matrix.push(vector);\n    }\n\n    return matrix;\n};\n\n/**\n * Calculate matrix minor.\n */\nexport const mMinor = (m: Matrix, row: number, col: number) => {\n    const size = m.length;\n\n    if(size <= 0){\n        throw new Error('The matrix should not be empty.');\n    }\n\n    if(size !== m[0].length){\n        throw new Error('The matrix must be square.');\n    }\n\n    // prepare the matrix without provided row and column\n    const matrix = mMinorHelper(m, row, col);\n\n    // calculate the matrix determinant\n    return mDeterminant(matrix);\n};\n\n/**\n * Calculate determinant for NxN matrix.\n * Matrix should be square.\n */\nexport const mDeterminant = (matrix: Matrix): number => {\n    const size = matrix.length;\n    if(size === 0) return 1;\n\n    if(size !== matrix[0].length){\n        throw new Error('The matrix must be square.');\n    }\n\n    if(size === 1) return matrix[0][0];\n    if(size === 2) return m2Determinant(matrix as Matrix2);\n\n    let d = 0;\n\n    for(let i=0; i<size; i++){\n        const minor = mMinor(matrix, 0, i);\n\n        let param = matrix[0][i];\n        if(i % 2 !== 0){\n            param = -param;\n        }\n\n        d += minor * param;\n    }\n\n    return d;\n};\n\n/**\n * Calculate determinant for 2x2 matrix.\n * Matrix should be square.\n */\nexport const m2Determinant = (m2: Matrix2): number => {\n    if(m2.length !== m2[0].length){\n        throw new Error('The matrix must be square.');\n    }\n\n    return m2[0][0] * m2[1][1] - m2[1][0] * m2[0][1];\n};\n\n/**\n * Calculate determinant for 3x3 matrix.\n * Matrix should be square.\n */\nexport const m3Determinant = (m3: Matrix3): number => {\n    if(m3.length !== m3[0].length){\n        throw new Error('The matrix must be square.');\n    }\n\n    return mDeterminant(m3);\n};\n\n// ------------------ INVERSE -----------------------\n\nexport const m2Adjugate = (m2: Matrix2): Matrix2|null => {\n    if(m2.length !== m2[0].length){\n        throw new Error('The matrix must be square.');\n    }\n\n    return [\n      [m2[1][1], -m2[0][1]],\n      [-m2[1][0], m2[0][0]],\n    ];\n};\n\nexport const m3Adjugate = (m3: Matrix3) : Matrix3|null => {\n    return mAdjugate(m3) as (Matrix3|null);\n};\n\n/**\n * Adjugate is a transpose of a cofactor matrix\n */\nexport const mAdjugate = (m: Matrix): Matrix|null => {\n\n    const size = m.length;\n    if(size <= 0) return null;\n\n    if(size !== m[0].length){\n        throw new Error('The matrix must be square.');\n    }\n\n    if(size === 1) return m;\n\n    if(size === 2) return m2Adjugate(m as Matrix2);\n\n    // build a cofactor matrix ----------------\n    const cofactors: Matrix = [];\n\n    for(let i=0; i<size; i++){\n        const vector: Vector = [];\n        for(let j=0; j<size; j++){\n            const minor = mMinor(m, i, j);\n            const sign = Math.pow(-1, i + j)\n            vector.push(sign * minor);\n        }\n        cofactors.push(vector);\n    }\n\n    // find an Adjugate - a transpose of a cofactor matrix\n    return mTranspose(cofactors);\n};\n\n/**\n * Singular Matrix = a square matrix that does not have a matrix inverse.\n * A matrix is singular iff its determinant is 0.\n */\nexport const isSingularMatrix = (m: Matrix) => {\n    if(m.length > 0 && m.length !== m[0].length){\n        throw new Error('The matrix must be square.');\n    }\n\n    const d = mDeterminant(m);\n    return d === 0;\n};\n\n/**\n * Square matrix A (nxn) is invertible is there is another square matrix B (nxn) so AxB = BxA = I\n * For A (2x2) matrix, the inverse is:\n * (1 / (determinant(A))) * adj(A)\n */\nexport const m2Inverse = (m2: Matrix2, decimalPlaces = Infinity): (Matrix2 | null) => {\n    if(m2.length > 0 && m2.length !== m2[0].length){\n        throw new Error('The matrix must be square.');\n    }\n\n    const d = m2Determinant(m2);\n    if(d === 0) return null;\n\n    const adj = m2Adjugate(m2);\n    if(adj === null) return null;\n\n    return m2DivideScalar(adj, d, decimalPlaces);\n};\n\nexport const m3Inverse = (m3: Matrix3, decimalPlaces = Infinity): (Matrix3 | null) => {\n    return mInverse(m3, decimalPlaces) as (Matrix3|null);\n};\n\nexport const mInverse = (m: Matrix, decimalPlaces = Infinity): (Matrix | null) => {\n    const size = m.length;\n\n    if(size > 0 && size !== m[0].length){\n        throw new Error('The matrix must be square.');\n    }\n\n    // find a determinant ----------------------\n    const d = mDeterminant(m);\n\n    // find an Adjugate - a transpose of a cofactor matrix\n    const adj = mAdjugate(m);\n    if(adj === null) return null;\n\n    return mDivideScalar(adj, d, decimalPlaces);\n};", "import { Matrix2, Matrix3, Matrix4, Matrix, Vector2, Vector3, Vector4 } from '../../types';\nimport { v2Normalize, v3MulScalar, v3Normalize } from './vector';\nimport { mMulVector, mMul } from './matrix';\nimport { setDecimalPlaces } from '../format';\n\n/*\nAny 2D affine transformation can be decomposed\ninto a rotation, followed by a scaling, followed by a\nshearing, and followed by a translation.\n---------------------------------------------------------\nAffine matrix = translation x shearing x scaling x rotation\n */\n\n// ----------------- CSS -------------------------------------\n\n/**\n * Matrix 2D in non-homogeneous coordinates to CSS matrix() function\n * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix\n */\nexport const m2ToCSS = (m: Matrix2) : string => {\n    const a = m[0][0];\n    const b = m[1][0];\n    const c = m[0][1];\n    const d = m[1][1];\n\n    return `matrix(${ a }, ${ b }, ${ c }, ${ d }, 0, 0)`;\n};\n\n/**\n * Matrix 2D in homogeneous coordinates to CSS matrix() function\n * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix\n */\nexport const m2hToCSS = (m: Matrix3) : string => {\n    const a = m[0][0];\n    const b = m[1][0];\n    const c = m[0][1];\n    const d = m[1][1];\n    const tx = m[0][2];\n    const ty = m[1][2];\n\n    return `matrix(${ a }, ${ b }, ${ c }, ${ d }, ${ tx }, ${ ty })`;\n};\n\n/**\n * Matrix 2D in homogeneous coordinates to CSS matrix3d() function\n * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d\n */\nexport const m2hToCSS3d = (m: Matrix3) : string => {\n    const a = m[0][0];\n    const b = m[1][0];\n    const c = m[0][1];\n    const d = m[1][1];\n    const tx = m[0][2];\n    const ty = m[1][2];\n\n    return `matrix3d(${ a }, ${ b }, 0, 0, ${ c }, ${ d }, 0, 0, 0, 0, 1, 0, ${ tx }, ${ ty }, 0, 1)`;\n};\n\n/**\n * Matrix 3D in homogeneous coordinates to CSS matrix3d() function\n * https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function/matrix3d\n */\nexport const m3hToCSS3d = (m: Matrix4) : string => {\n\n    return `matrix3d(\n        ${ m[0][0] }, ${ m[0][1] }, ${ m[0][2] }, ${ m[0][3] },\n        ${ m[1][0] }, ${ m[1][1] }, ${ m[1][2] }, ${ m[1][3] },\n        ${ m[2][0] }, ${ m[2][1] }, ${ m[2][2] }, ${ m[2][3] },\n        ${ m[3][0] }, ${ m[3][1] }, ${ m[3][2] }, ${ m[3][3] }\n    )`;\n};\n\n// ---------------- TRANSLATION MATRICES ----------------------\n\nexport const m2Translation = (position: Vector2, decimalPlaces = Infinity): Matrix2 => {\n\n    return [\n        [1, 0],\n        [0, 1],\n        [setDecimalPlaces(position[0], decimalPlaces), setDecimalPlaces(position[1], decimalPlaces)],\n    ];\n};\n\nexport const m3Translation = (position: Vector3, decimalPlaces = Infinity): Matrix3 => {\n\n    return [\n        [1, 0, 0],\n        [0, 1, 0],\n        [0, 0, 1],\n        [\n            setDecimalPlaces(position[0], decimalPlaces),\n            setDecimalPlaces(position[1], decimalPlaces),\n            setDecimalPlaces(position[2], decimalPlaces)\n        ],\n    ];\n};\n\n/**\n * 2D Translation matrix in homogeneous coordinates.\n */\nexport const m2TranslationH = (position: Vector3, decimalPlaces = Infinity): Matrix3 => {\n\n    return [\n        [1, 0, setDecimalPlaces(position[0], decimalPlaces)],\n        [0, 1, setDecimalPlaces(position[1], decimalPlaces)],\n        [0, 0, 1],\n    ];\n};\n\n/**\n * 3D Translation matrix in homogeneous coordinates.\n */\nexport const m3TranslationH = (position: Vector4, decimalPlaces = Infinity): Matrix4 => {\n\n    return [\n        [1, 0, 0, setDecimalPlaces(position[0], decimalPlaces)],\n        [0, 1, 0, setDecimalPlaces(position[1], decimalPlaces)],\n        [0, 0, 1, setDecimalPlaces(position[2], decimalPlaces)],\n        [0, 0, 0, 1],\n    ];\n};\n\n// ---------------- ROTATION MATRICES -------------------------\n\n/**\n * Rotation of an angle about the origin.\n */\nexport const m2Rotation = (angleRad: number, isClockwise = true, decimalPlaces = Infinity): Matrix2 => {\n    const cos = setDecimalPlaces(Math.cos(angleRad), decimalPlaces);\n    const sin = setDecimalPlaces(Math.sin(angleRad), decimalPlaces);\n\n    return isClockwise ? [\n        [cos, -sin],\n        [sin, cos],\n    ] :\n    [\n        [cos, sin],\n        [-sin, cos],\n    ];\n};\n\n/**\n * Rotation of an angle about the origin in homogeneous coordinates (clockwise).\n */\nexport const m2RotationH = (angleRad: number, isClockwise = true, decimalPlaces = Infinity): Matrix3 => {\n    const cos = setDecimalPlaces(Math.cos(angleRad), decimalPlaces);\n    const sin = setDecimalPlaces(Math.sin(angleRad), decimalPlaces);\n\n    return isClockwise ? [\n        [cos, -sin, 0],\n        [sin, cos, 0],\n        [0, 0, 1],\n    ]:\n    [\n        [cos, sin, 0],\n        [-sin, cos, 0],\n        [0, 0, 1],\n    ];\n};\n\n/**\n * Rotation of an angle \"angleRad\" around the given point (transformOrigin) in homogeneous coordinates (clockwise).\n * result_vector = TranslationMatrix(x, y) * RotationMatrix() * TranslationMatrix(-x, -y) * position_vector\n */\nexport const m2RotationAroundPointH = (\n    angleRad: number,\n    transformOrigin: Vector3,\n    isClockwise = true,\n    decimalPlaces = Infinity): Matrix3 => {\n\n    const translation = m2TranslationH(transformOrigin, decimalPlaces);\n    const rotation = m2RotationH(angleRad, isClockwise, decimalPlaces);\n    const translationBack = m2TranslationH(v3MulScalar(transformOrigin, -1), decimalPlaces);\n    const temp1 = mMul(translation, rotation);\n    return mMul(temp1, translationBack) as Matrix3;\n};\n\nexport const m2RotateAroundPointH = (\n    angleRad: number,\n    transformOrigin: Vector3,\n    position: Vector3,\n    isClockwise = true,\n    decimalPlaces = Infinity): Vector3 => {\n\n    const mat3h = m2RotationAroundPointH(angleRad, transformOrigin, isClockwise, decimalPlaces);\n    return mMulVector(mat3h, position) as Vector3;\n};\n\n/**\n * Rotate vector around the origin by angle \"angleRad\" (clockwise).\n */\nexport const v2Rotate = (angleRad: number, vector: Vector2, isClockwise = true, decimalPlaces = Infinity): Vector2 => {\n    const unitVector = v2Normalize(vector);\n    return mMulVector(m2Rotation(angleRad, isClockwise, decimalPlaces), unitVector) as Vector2;\n};\n\n/**\n * Rotate vector around the origin by angle \"angleRad\" (clockwise).\n */\nexport const v2RotateH = (angleRad: number, vector: Vector3, isClockwise = true, decimalPlaces = Infinity): Vector3 => {\n    const unitVector = v3Normalize(vector);\n    return mMulVector(m2RotationH(angleRad, isClockwise, decimalPlaces), unitVector) as Vector3;\n};\n\n/**\n * Rotation around the X axis (clockwise).\n */\nexport const m3RotationX = (angleRad: number, isClockwise = true, decimalPlaces = Infinity): Matrix3 => {\n    const cos = setDecimalPlaces(Math.cos(angleRad), decimalPlaces);\n    const sin = setDecimalPlaces(Math.sin(angleRad), decimalPlaces);\n\n    return isClockwise ? [\n        [1, 0, 0],\n        [0, cos, -sin],\n        [0, sin, cos],\n    ] :\n    [\n        [1, 0, 0],\n        [0, cos, sin],\n        [0, -sin, cos],\n    ];\n};\n\n/**\n * Rotation around the X axis (clockwise) - in homogeneous coordinates\n */\nexport const m3RotationXH = (angleRad: number, isClockwise = true, decimalPlaces = Infinity): Matrix4 => {\n    const cos = setDecimalPlaces(Math.cos(angleRad), decimalPlaces);\n    const sin = setDecimalPlaces(Math.sin(angleRad), decimalPlaces);\n\n    return isClockwise ? [\n            [1, 0, 0, 0],\n            [0, cos, -sin, 0],\n            [0, sin, cos, 0],\n            [0, 0, 0, 1],\n        ] :\n        [\n            [1, 0, 0, 0],\n            [0, cos, sin, 0],\n            [0, -sin, cos, 0],\n            [0, 0, 0, 1],\n        ];\n};\n\nexport const v3RotateX = (angleRad: number, vector: Vector3, isClockwise = true, decimalPlaces = Infinity): Vector3 => {\n    const unitVector = v3Normalize(vector);\n    return mMulVector(m3RotationX(angleRad, isClockwise, decimalPlaces), unitVector) as Vector3;\n};\n\n/**\n * Rotation around the Y axis (clockwise).\n */\nexport const m3RotationY = (angleRad: number, isClockwise = true, decimalPlaces = Infinity): Matrix3 => {\n    const cos = setDecimalPlaces(Math.cos(angleRad), decimalPlaces);\n    const sin = setDecimalPlaces(Math.sin(angleRad), decimalPlaces);\n\n    return isClockwise ? [\n        [cos, 0, sin],\n        [0, 1, 0],\n        [-sin, 0, cos],\n    ] :\n    [\n        [cos, 0, -sin],\n        [0, 1, 0],\n        [sin, 0, cos],\n    ];\n};\n\n/**\n * Rotation around the Y axis (clockwise) - in homogeneous coordinates\n */\nexport const m3RotationYH = (angleRad: number, isClockwise = true, decimalPlaces = Infinity): Matrix4 => {\n    const cos = setDecimalPlaces(Math.cos(angleRad), decimalPlaces);\n    const sin = setDecimalPlaces(Math.sin(angleRad), decimalPlaces);\n\n    return isClockwise ? [\n            [cos, 0, sin, 0],\n            [0, 1, 0, 0],\n            [-sin, 0, cos, 0],\n            [0, 0, 0, 1],\n        ] :\n        [\n            [cos, 0, -sin, 0],\n            [0, 1, 0, 0],\n            [sin, 0, cos, 0],\n            [0, 0, 0, 1],\n        ];\n};\n\nexport const v3RotateY = (angleRad: number, vector: Vector3, isClockwise = true, decimalPlaces = Infinity): Vector3 => {\n    const unitVector = v3Normalize(vector);\n    return mMulVector(m3RotationY(angleRad, isClockwise, decimalPlaces), unitVector) as Vector3;\n};\n\n/**\n * Rotation around the Z axis (clockwise).\n */\nexport const m3RotationZ = (angleRad: number, isClockwise = true, decimalPlaces = Infinity): Matrix3 => {\n\n    const cos = setDecimalPlaces(Math.cos(angleRad), decimalPlaces);\n    const sin = setDecimalPlaces(Math.sin(angleRad), decimalPlaces);\n\n    return isClockwise ? [\n        [cos, -sin, 0],\n        [sin, cos, 0],\n        [0, 0, 1],\n    ] : [\n        [cos, sin, 0],\n        [-sin, cos, 0],\n        [0, 0, 1],\n    ];\n};\n\n/**\n * Rotation around the Z axis (clockwise)- in homogeneous coordinates\n */\nexport const m3RotationZH = (angleRad: number, isClockwise = true, decimalPlaces = Infinity): Matrix4 => {\n\n    const cos = setDecimalPlaces(Math.cos(angleRad), decimalPlaces);\n    const sin = setDecimalPlaces(Math.sin(angleRad), decimalPlaces);\n\n    return isClockwise ? [\n        [cos, -sin, 0, 0],\n        [sin, cos, 0, 0],\n        [0, 0, 1, 0],\n        [0, 0, 0, 1],\n    ] : [\n        [cos, sin, 0, 0],\n        [-sin, cos, 0, 0],\n        [0, 0, 1, 0],\n        [0, 0, 0, 1],\n    ];\n};\n\nexport const v3RotateZ = (angleRad: number, vector: Vector3, isClockwise = true, decimalPlaces = Infinity): Vector3 => {\n    const unitVector = v3Normalize(vector);\n    return mMulVector(m3RotationZ(angleRad, isClockwise, decimalPlaces), unitVector) as Vector3;\n};\n\n// ---------------- SCALE MATRICES -------------\n\n/**\n * Get matrix for arbitrary scaling pivot point.\n * result_vector = TranslationMatrix(x, y) * ScaleMatrix() * TranslationMatrix(-x, -y) * scale_vector\n */\nexport const m2ScaleAtPointHMatrix = (\n    scaleVector: Vector3,\n    transformOrigin: Vector3,\n    decimalPlaces = Infinity): Matrix3 => {\n\n    const translation = m2TranslationH(transformOrigin, decimalPlaces);\n    const scale = m2ScaleH(scaleVector);\n    const translationBack = m2TranslationH(v3MulScalar(transformOrigin, -1), decimalPlaces);\n    const temp1 = mMul(translation, scale);\n    return mMul(temp1, translationBack) as Matrix3;\n};\n\nexport const m2ScaleAtPointH = (\n    scaleVector: Vector3,\n    transformOrigin: Vector3,\n    point: Vector3,\n    decimalPlaces = Infinity): Vector3 => {\n\n    const mat3h = m2ScaleAtPointHMatrix(scaleVector, transformOrigin, decimalPlaces);\n    return mMulVector(mat3h, point) as Vector3;\n};\n\nexport const m2Scale = (scaleVector: Vector2): Matrix2 => {\n    return [\n        [scaleVector[0], 0],\n        [0, scaleVector[1]],\n    ];\n};\n\nexport const v2Scale = (scaleVector: Vector2, vector: Vector2): Vector2 => {\n    return mMulVector(m2Scale(scaleVector), vector) as Vector2;\n};\n\n/**\n * homogeneous coordinates\n */\nexport const m2ScaleH = (scaleVector: Vector3): Matrix3 => {\n    return [\n        [scaleVector[0], 0, 0],\n        [0, scaleVector[1], 0],\n        [0, 0, 1],\n    ];\n};\n\nexport const m3Scale = (scaleVector: Vector3): Matrix3 => {\n    return [\n        [scaleVector[0], 0, 0],\n        [0, scaleVector[1], 0],\n        [0, 0, scaleVector[2]],\n    ];\n};\n\nexport const m3ScaleH = (scaleVector: Vector4): Matrix4 => {\n    return [\n        [scaleVector[0], 0, 0, 0],\n        [0, scaleVector[1], 0, 0],\n        [0, 0, scaleVector[2], 0],\n        [0, 0, 0, 1]\n    ];\n};\n\nexport const v3Scale = (scaleVector: Vector3, vector: Vector3): Vector3 => {\n    return mMulVector(m3Scale(scaleVector), vector) as Vector3;\n};\n\n/**\n * Stretch, parallel to the x-axis.\n */\nexport const m2ScaleX = (scale: number): Matrix2 => {\n    return [\n        [scale, 0],\n        [0, 1],\n    ];\n};\n\n/**\n * Stretch, parallel to the x-axis - homogeneous coordinates\n */\nexport const m2ScaleXH = (scale: number): Matrix3 => {\n    return [\n        [scale, 0, 0],\n        [0, 1, 0],\n        [0, 0, 1],\n    ];\n};\n\n/**\n * Stretch in x-direction\n */\nexport const m3ScaleX = (scale: number): Matrix3 => {\n    return [\n        [scale, 0, 0],\n        [0, 1, 0],\n        [0, 0, 1],\n    ];\n};\n\n/**\n * Stretch in x-direction\n */\nexport const m3ScaleXH = (scale: number): Matrix4 => {\n    return [\n        [scale, 0, 0, 0],\n        [0, 1, 0, 0],\n        [0, 0, 1, 0],\n        [0, 0, 0, 1],\n    ];\n};\n\n/**\n * Stretch in y-direction\n */\nexport const m3ScaleY = (scale: number): Matrix3 => {\n    return [\n        [1, 0, 0],\n        [0, scale, 0],\n        [0, 0, 1],\n    ];\n};\n\n/**\n * Stretch in y-direction\n */\nexport const m3ScaleYH = (scale: number): Matrix => {\n    return [\n        [1, 0, 0, 0],\n        [0, scale, 0, 0],\n        [0, 0, 1, 0],\n        [0, 0, 0, 1],\n    ];\n};\n\n/**\n * Stretch in z-direction\n */\nexport const m3ScaleZ = (scale: number): Matrix3 => {\n    return [\n        [1, 0, 0],\n        [0, 1, 0],\n        [0, 0, scale],\n    ];\n};\n\n/**\n * Stretch in z-direction\n */\nexport const m3ScaleZH = (scale: number): Matrix4 => {\n    return [\n        [1, 0, 0, 0],\n        [0, 1, 0, 0],\n        [0, 0, scale, 0],\n        [0, 0, 0, 1],\n    ];\n};\n\n/**\n * Stretch, parallel to the y-axis.\n */\nexport const m2ScaleY = (scale: number): Matrix2 => {\n    return [\n        [1, 0],\n        [0, scale],\n    ];\n};\n\n/**\n * Stretch, parallel to the y-axis - homogeneous coordinates\n */\nexport const m2ScaleYH = (scale: number): Matrix3 => {\n    return [\n        [1, 0, 0],\n        [0, scale, 0],\n        [0, 0, 1],\n    ];\n};\n\n// ---------------- REFLECTION MATRICES -------------------------\n\n/**\n * Reflection about the origin.\n */\nexport const m2ReflectionOrigin = (): Matrix2 => {\n\n    return [\n        [-1, 0],\n        [0, -1],\n    ];\n};\n\n/**\n * Reflection about the origin.\n */\nexport const m2ReflectionOriginH = (): Matrix3 => {\n\n    return [\n        [-1, 0, 0],\n        [0, -1, 0],\n        [0, 0, 1],\n    ];\n};\n\n/**\n * Reflection about the origin in non-homogeneous coordinates\n */\nexport const m3ReflectionOrigin = (): Matrix3 => {\n\n    return [\n        [-1, 0, 0],\n        [0, -1, 0],\n        [0, 0, -1],\n    ];\n};\n\n/**\n * Reflection about the origin in homogeneous coordinates\n */\nexport const m3ReflectionOriginH = (): Matrix4 => {\n\n    return [\n        [-1, 0, 0, 0],\n        [0, -1, 0, 0],\n        [0, 0, -1, 0],\n        [0, 0, 0, 1],\n    ];\n};\n\n/**\n * Reflection about y=-x\n */\nexport const m2ReflectionYmX = (): Matrix2 => {\n\n    return [\n        [0, -1],\n        [-1, 0],\n    ];\n};\n\n/**\n * Reflection in the x-axis.\n */\nexport const m2ReflectionX = (): Matrix2 => {\n\n    return [\n        [1, 0],\n        [0, -1],\n    ];\n};\n\n/**\n * Reflection in the x-axis.\n */\nexport const m2ReflectionXH = (): Matrix3 => {\n\n    return [\n        [1, 0, 0],\n        [0, -1, 0],\n        [0, 0, 1],\n    ];\n};\n\n/**\n * Reflection in the y-axis.\n */\nexport const m2ReflectionY = (): Matrix2 => {\n\n    return [\n        [-1, 0],\n        [0, 1],\n    ];\n};\n\nexport const m2ReflectionYH = (): Matrix3 => {\n\n    return [\n        [-1, 0, 0],\n        [0, 1, 0],\n        [0, 0, 1],\n    ];\n};\n\n/**\n * Reflection relative to YZ plane in non-homogeneous coordinates\n */\nexport const m3ReflectionYZ = (): Matrix3 => {\n\n    return [\n        [-1, 0, 0],\n        [0, 1, 0],\n        [0, 0, 1],\n    ];\n};\n\n/**\n * Reflection relative to YZ plane in homogeneous coordinates\n */\nexport const m3ReflectionYZH = (): Matrix4 => {\n\n    return [\n        [-1, 0, 0, 0],\n        [0, 1, 0, 0],\n        [0, 0, 1, 0],\n        [0, 0, 0, 1],\n    ];\n};\n\n/**\n * Reflection relative to XZ plane in non-homogeneous coordinates\n */\nexport const m3ReflectionXZ = (): Matrix3 => {\n\n    return [\n        [1, 0, 0],\n        [0, -1, 0],\n        [0, 0, 1],\n    ];\n};\n\n/**\n * Reflection relative to XZ plane in homogeneous coordinates\n */\nexport const m3ReflectionXZH = (): Matrix4 => {\n\n    return [\n        [1, 0, 0, 0],\n        [0, -1, 0, 0],\n        [0, 0, 1, 0],\n        [0, 0, 0, 1],\n    ];\n};\n\n/**\n * Reflection relative to XY plane in non-homogeneous coordinates\n */\nexport const m3ReflectionXY = (): Matrix3 => {\n\n    return [\n        [1, 0, 0],\n        [0, 1, 0],\n        [0, 0, -1],\n    ];\n};\n\n/**\n * Reflection relative to XY plane in homogeneous coordinates\n */\nexport const m3ReflectionXYH = (): Matrix4 => {\n\n    return [\n        [1, 0, 0, 0],\n        [0, 1, 0, 0],\n        [0, 0, -1, 0],\n        [0, 0, 0, 1],\n    ];\n};\n\n// ---------------- SHEARING MATRICES -------------------------\n\n\n/**\n * Shearing in y-axis, with x-axis fixed with (0,1) moving to (factor, 1)\n */\nexport const m2ShearingY = (factor: number): Matrix2 => {\n\n    return [\n        [1, factor],\n        [0, 1],\n    ];\n};\n\n/**\n * Shearing in x-axis, with y-axis fixed with (1,0) moving to (1, factor)\n */\nexport const m2ShearingX = (factor: number): Matrix2 => {\n\n    return [\n        [1, 0],\n        [factor, 1],\n    ];\n};", "import { setDecimalPlaces } from './format';\n\n/**\n * Returns a random number in the [min,max] range.\n */\nexport const getRandom = (min: number, max: number, decimalPlaces = Infinity): number => {\n    return setDecimalPlaces(Math.random() * (max - min) + min, decimalPlaces);\n};\n\n/**\n * Returns a random integer number in the [min,max] range.\n */\nexport const getRandomInt = (min: number, max: number): number => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nexport const getRandomBoolean = () => Math.random() < 0.5;\n\n/* eslint-disable  @typescript-eslint/no-explicit-any */\nexport const getRandomItemFromArray = (array: any[]) => {\n    const randomIndex = getRandomInt(0, array.length - 1);\n    return array[randomIndex];\n};", "export const stringToNumber = (value: string|undefined|null|number, defaultNumber: number) => {\n    if(value === undefined || value === null) return defaultNumber;\n    const res = Number(value) ?? defaultNumber;\n    return isNaN(res) ? defaultNumber : res;\n};", "import { setDecimalPlaces } from './format';\nimport { Vector2, Vector3 } from '../types';\n\n/**\n * u(x) and v(x) are functions ---------->\n *\n * dx(u + v) = dx(u) + dx(v)\n * dx(u - v) = dx(u) - dx(v)\n * dx(u * v) = dx(u) * v + u * dx(v)\n * dx(u / v) = (dx(u) * v - u * dx(v)) / (v ^ 2), when v(x) != 0\n */\n\n// ------------------ Derivatives of Polynomial ---------------------------\n\n/**\n * y = 3x+2\n * dxPolynomial(10, [[3, 1], [2, 0]])\n */\nexport const dxPolynomial = (x: number, polynomial: number[][], decimalPlaces = Infinity) => {\n    let res = 0;\n\n    for(const part of polynomial){\n        if(part.length !== 2) return NaN;\n\n        const coeff = part[0];\n        const power = part[1];\n        res += coeff * power * Math.pow(x, power - 1);\n    }\n\n    return setDecimalPlaces(res, decimalPlaces);\n}\n\n// ---------------------- Bezier Curves ---------------------------\n\n/**\n * Derivative of Bezier Curve is another Bezier Curve.\n * t must min in range [0, 1]\n */\nexport const dxV2QuadraticBezierCurve = (\n    t: number,\n    startControlPoint: Vector2,\n    centerControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : Vector2 => {\n\n    // The derivative: P1 * (2t-2) + (2*P3-4*P2) * t + 2 * P2\n\n    const temp1 = -2 * (1 - t); // Math.pow(1 - t, 2)\n    const temp2 = 2 - 4 * t; // (1 - t) * 2 * t\n    const temp3 = 2 * t; //t * t;\n\n    return [\n        setDecimalPlaces(temp1 * startControlPoint[0] + temp2 * centerControlPoint[0] + temp3 * endControlPoint[0], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[1] + temp2 * centerControlPoint[1] + temp3 * endControlPoint[1], decimalPlaces),\n    ];\n};\n\nexport const dxV3QuadraticBezierCurve = (\n    t: number,\n    startControlPoint: Vector3,\n    centerControlPoint: Vector3,\n    endControlPoint: Vector3,\n    decimalPlaces = Infinity\n) : Vector3 => {\n\n    const temp1 = -2 * (1 - t); // Math.pow(1 - t, 2)\n    const temp2 = 2 - 4 * t; // (1 - t) * 2 * t\n    const temp3 = 2 * t; //t * t;\n\n    return [\n        setDecimalPlaces(temp1 * startControlPoint[0] + temp2 * centerControlPoint[0] + temp3 * endControlPoint[0], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[1] + temp2 * centerControlPoint[1] + temp3 * endControlPoint[1], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[2] + temp2 * centerControlPoint[2] + temp3 * endControlPoint[2], decimalPlaces),\n    ];\n};\n\nexport const dxV2CubicBezierCurve = (\n    t: number,\n    startControlPoint: Vector2,\n    center1ControlPoint: Vector2,\n    center2ControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : Vector2 => {\n\n    const temp1 = -3 * Math.pow(1 - t, 2); //Math.pow(1 - t, 3);\n    const temp2 = 3 * (t - 1) * (3 * t - 1); //Math.pow(1 - t, 2) * 3 * t;\n    const temp3 = 6 * t - 9 * t * t; // (1 - t) * 3 * t * t;\n    const temp4 = 3 * t * t; //t * t * t;\n\n    return [\n        setDecimalPlaces(temp1 * startControlPoint[0] + temp2 * center1ControlPoint[0] + temp3 * center2ControlPoint[0] + temp4 * endControlPoint[0], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[1] + temp2 * center1ControlPoint[1] + temp3 * center2ControlPoint[1] + temp4 * endControlPoint[1], decimalPlaces),\n    ];\n};\n\nexport const dxV3CubicBezierCurve = (\n    t: number,\n    startControlPoint: Vector3,\n    center1ControlPoint: Vector3,\n    center2ControlPoint: Vector3,\n    endControlPoint: Vector3,\n    decimalPlaces = Infinity\n) : Vector3 => {\n\n    const temp1 = -3 * Math.pow(1 - t, 2); //Math.pow(1 - t, 3);\n    const temp2 = 3 * (t - 1) * (3 * t - 1); //Math.pow(1 - t, 2) * 3 * t;\n    const temp3 = 6 * t - 9 * t * t; // (1 - t) * 3 * t * t;\n    const temp4 = 3 * t * t; //t * t * t;\n\n    return [\n        setDecimalPlaces(temp1 * startControlPoint[0] + temp2 * center1ControlPoint[0] + temp3 * center2ControlPoint[0] + temp4 * endControlPoint[0], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[1] + temp2 * center1ControlPoint[1] + temp3 * center2ControlPoint[1] + temp4 * endControlPoint[1], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[2] + temp2 * center1ControlPoint[2] + temp3 * center2ControlPoint[2] + temp4 * endControlPoint[2], decimalPlaces),\n    ];\n};\n\n\n// ----------------- Derivatives of trigonometry functions ---------------------------\n\nexport const dxSin = (x: number, decimalPlaces = Infinity) => {\n    return setDecimalPlaces(Math.cos(x), decimalPlaces);\n};\n\nexport const dxCos = (x: number, decimalPlaces = Infinity) => {\n    return setDecimalPlaces(-Math.sin(x), decimalPlaces);\n};\n\nexport const dxTan = (x: number, decimalPlaces = Infinity) => {\n    return setDecimalPlaces(1 / (Math.cos(x) ** 2), decimalPlaces);\n};\n\n/**\n * x != Math.PI * n, where n is an integer\n */\nexport const dxCot = (x: number, decimalPlaces = Infinity) => {\n    return setDecimalPlaces(-1 / (Math.sin(x) ** 2), decimalPlaces);\n};\n\n/**\n * -1 < x < 1\n */\nexport const dxArcSin = (x: number, decimalPlaces = Infinity) => {\n    return setDecimalPlaces(1 / (Math.sqrt(1 - x ** 2)), decimalPlaces);\n};\n\n/**\n * -1 < x < 1\n */\nexport const dxArcCos = (x: number, decimalPlaces = Infinity) => {\n    return setDecimalPlaces(-1 / (Math.sqrt(1 - x ** 2)), decimalPlaces);\n};\n\nexport const dxArcTan = (x: number, decimalPlaces = Infinity) => {\n    return setDecimalPlaces(1 / (1 + x ** 2), decimalPlaces);\n};\n\nexport const dxArcCot = (x: number, decimalPlaces = Infinity) => {\n    return setDecimalPlaces(-1 / (1 + x ** 2), decimalPlaces);\n};\n", "import { Matrix, Matrix2, Matrix3, Vector, Vector2, Vector3 } from '../../types';\nimport { m2Inverse, m3Inverse, mInverse, mMulVector, mDelLastColumn, mGetLastColumn } from '../linear-algebra/matrix';\nimport { setDecimalPlaces } from '../format';\nimport { v2Sub } from '../linear-algebra/vector';\n\n/**\n * Linear equation\n * ax + b = c\n * x = (c - b) / a; a != 0\n */\nexport const linearEquation = (equation: Vector3, decimalPlaces = Infinity) : number => {\n    const a = equation[0];\n    const b = equation[1];\n    const c = equation[2];\n\n    const diff = c - b;\n\n    if(a === 0 && diff === 0) return Infinity; // any number is a solution\n    if(a === 0) return NaN; // no solution\n\n    return setDecimalPlaces(diff / a, decimalPlaces);\n};\n\n/**\n * System of 2 linear equations.\n * [x, y] = inverse(Matrix of equation parameters) x (vector of equation results)\n * ---------------\n * 3x + 2y = 7\n * -6x + 6y = 6\n */\nexport const linearEquationSystem2 = (equation1: Vector3, equation2: Vector3, decimalPlaces = Infinity) : Vector2 | null => {\n    const equationParams: Matrix2 = [\n        [equation1[0], equation1[1]],\n        [equation2[0], equation2[1]],\n    ];\n\n    const inversed = m2Inverse(equationParams);\n    if(inversed === null) return null; // no results\n\n    const equationResults: Vector2 = [\n        equation1[2],\n        equation2[2]\n    ];\n\n    return mMulVector(inversed, equationResults, decimalPlaces) as Vector2;\n};\n\n/**\n * System of 3 linear equations.\n * ---------------------------------------\n * 3x + 2y + 5z = 7\n * -6x + 6y + 6z = 6\n * 2x + 7y - z = 4\n */\nexport const linearEquationSystem3 = (\n    equation1: Vector,\n    equation2: Vector,\n    equation3: Vector,\n    decimalPlaces = Infinity) : Vector3 | null => {\n    const equationParams: Matrix3 = [\n        [equation1[0], equation1[1], equation1[2]],\n        [equation2[0], equation2[1], equation2[2]],\n        [equation3[0], equation3[1], equation3[2]],\n    ];\n\n    const inversed = m3Inverse(equationParams);\n    if(inversed === null) return null; // no results\n\n    const equationResults: Vector3 = [\n        equation1[3],\n        equation2[3],\n        equation3[3]\n    ];\n\n    return mMulVector(inversed, equationResults, decimalPlaces) as Vector3;\n};\n\n/**\n * System of N linear equations.\n */\nexport const linearEquationSystemN = (equations: Matrix, decimalPlaces = Infinity) : Vector | null => {\n    if(equations.length <= 0) return null;\n\n    const equationParams = mDelLastColumn(equations);\n\n    const inversed = mInverse(equationParams);\n    if(inversed === null) return null; // no results\n\n    // the last column of the equations matrix\n    const equationResults = mGetLastColumn(equations);\n\n    return mMulVector(inversed, equationResults, decimalPlaces) as Vector;\n};\n\n/**\n * Calculate the equation of a line given two points in a 2D space.\n * y = ax + b\n * y - y1 = m(x - x1)\n * m = (y2 - y1) / (x2 - x1)\n */\nexport const getLinearEquationBy2Points = (point1: Vector2, point2: Vector2) : {\n    slope: number|undefined,\n    yIntercept: number|undefined,\n    xIntercept: number|undefined,\n    formula: string,\n} => {\n    const [deltaX, deltaY] = v2Sub(point2, point1);\n    const [x, y] = point1;\n\n    if(deltaX === 0) {\n        return {\n            slope: undefined,\n            xIntercept: x,\n            yIntercept: undefined,\n            formula: `x = ${ x }`,\n        };\n    }\n\n    const m = deltaY / deltaX;\n    const b = y - m * x;\n    let formula = '';\n\n    if(m === 0) {\n        formula = `y = ${ b }`;\n    }\n    else{\n        formula = `y = ${ m === 1 ? '' : m }x`;\n\n        if(b !== 0) {\n            formula += ` ${ b < 0 ? '-' : '+' } ${ Math.abs(b) }`;\n        }\n    }\n\n    return {\n        slope: m,\n        xIntercept: undefined,\n        yIntercept: b,\n        formula,\n    };\n};", "import { Vector } from '../../types';\nimport { setDecimalPlaces } from '../format';\nimport { linearEquation } from './linear-equations';\nimport { isNumber } from '../other';\n\n/**\n * Quadratic Equation.\n * ax^2 + bx + c = d\n */\nexport const quadraticEquation = (equation: Vector, decimalPlaces = Infinity) : Vector => {\n    const a = equation[0];\n    const b = equation[1];\n    const c = equation[2];\n    const d = equation[3];\n\n    if(a === 0){\n        // it's a linear equation -------------------------------------------\n        const res = linearEquation([b, c, d], decimalPlaces);\n        if(isNumber(res)) return [res];\n        return [];\n    }\n\n    const diff = c - d;\n\n    const discriminant = b * b - (4 * a * diff);\n\n    if(discriminant < 0){\n        return []; // no results\n    }\n\n    if(discriminant === 0){\n        return [ setDecimalPlaces(-b / (2 * a), decimalPlaces) ]; // 1 result\n    }\n\n    // if(determinant > 0) ---> 2 results\n    const t1 = 2 * a;\n    const t2 = Math.sqrt(discriminant);\n\n    return [\n        setDecimalPlaces((-b + t2) / t1, decimalPlaces),\n        setDecimalPlaces((-b - t2) / t1, decimalPlaces),\n    ];\n};", "import { IBBox, Vector, Vector2, Vector3 } from '../../types';\nimport { setDecimalPlaces } from '../format';\nimport {\n    dxV2CubicBezierCurve,\n    dxV2QuadraticBezierCurve,\n    dxV3CubicBezierCurve,\n    dxV3QuadraticBezierCurve\n} from '../derivative';\nimport { v2Normalize, v3Normalize } from '../linear-algebra/vector';\nimport { linearEquation } from '../equations/linear-equations';\nimport { quadraticEquation } from '../equations/quadratic-equations';\nimport { isNumber } from '../other';\n\n/**\n * B\u00E9zier Curves\n * quadratic: y = P1 * (1-t)\u00B2 + P2 * 2 * (1-t)t + P3 * t\u00B2\n * t in range [0, 1]\n */\n\n// -------------------- GET POINT ON CURVE --------------------------\n\n/**\n * Get a point on a quadratic B\u00E9zier curve as a function of time.\n */\nexport const v2QuadraticBezierCurve = (\n    t: number,\n    startControlPoint: Vector2,\n    centerControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : Vector2 => {\n\n    const temp1 = Math.pow(1 - t, 2);\n    const temp2 = (1 - t) * 2 * t;\n    const temp3 = t * t;\n\n    return [\n        setDecimalPlaces(temp1 * startControlPoint[0] + temp2 * centerControlPoint[0] + temp3 * endControlPoint[0], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[1] + temp2 * centerControlPoint[1] + temp3 * endControlPoint[1], decimalPlaces),\n    ];\n};\n\nexport const v3QuadraticBezierCurve = (\n    t: number,\n    startControlPoint: Vector3,\n    centerControlPoint: Vector3,\n    endControlPoint: Vector3,\n    decimalPlaces = Infinity\n) : Vector3 => {\n\n    const temp1 = Math.pow(1 - t, 2);\n    const temp2 = (1 - t) * 2 * t;\n    const temp3 = t * t;\n\n    return [\n        setDecimalPlaces(temp1 * startControlPoint[0] + temp2 * centerControlPoint[0] + temp3 * endControlPoint[0], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[1] + temp2 * centerControlPoint[1] + temp3 * endControlPoint[1], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[2] + temp2 * centerControlPoint[2] + temp3 * endControlPoint[2], decimalPlaces),\n    ];\n};\n\n/**\n * Get a point on a cubic B\u00E9zier curve as a function of time.\n */\nexport const v2CubicBezierCurve = (\n    t: number,\n    startControlPoint: Vector2,\n    center1ControlPoint: Vector2,\n    center2ControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : Vector2 => {\n\n    const temp1 = Math.pow(1 - t, 3);\n    const temp2 = Math.pow(1 - t, 2) * 3 * t;\n    const temp3 = (1 - t) * 3 * t * t;\n    const temp4 = t * t * t;\n\n    return [\n        setDecimalPlaces(temp1 * startControlPoint[0] + temp2 * center1ControlPoint[0] + temp3 * center2ControlPoint[0] + temp4 * endControlPoint[0], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[1] + temp2 * center1ControlPoint[1] + temp3 * center2ControlPoint[1] + temp4 * endControlPoint[1], decimalPlaces),\n    ];\n};\n\nexport const v3CubicBezierCurve = (\n    t: number,\n    startControlPoint: Vector3,\n    center1ControlPoint: Vector3,\n    center2ControlPoint: Vector3,\n    endControlPoint: Vector3,\n    decimalPlaces = Infinity\n) : Vector3 => {\n\n    const temp1 = Math.pow(1 - t, 3);\n    const temp2 = Math.pow(1 - t, 2) * 3 * t;\n    const temp3 = (1 - t) * 3 * t * t;\n    const temp4 = t * t * t;\n\n    return [\n        setDecimalPlaces(temp1 * startControlPoint[0] + temp2 * center1ControlPoint[0] + temp3 * center2ControlPoint[0] + temp4 * endControlPoint[0], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[1] + temp2 * center1ControlPoint[1] + temp3 * center2ControlPoint[1] + temp4 * endControlPoint[1], decimalPlaces),\n        setDecimalPlaces(temp1 * startControlPoint[2] + temp2 * center1ControlPoint[2] + temp3 * center2ControlPoint[2] + temp4 * endControlPoint[2], decimalPlaces),\n    ];\n};\n\n// -------------------- TANGENT --------------------------\n\n/**\n * Tangent indicates the direction of travel at specific points along the B\u00E9zier curve,\n * and is literally just the first derivative of our curve.\n */\nexport const v2QuadraticBezierCurveTangent = (\n    t: number,\n    startControlPoint: Vector2,\n    centerControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : Vector2 => {\n    const dxVector = dxV2QuadraticBezierCurve(t, startControlPoint, centerControlPoint, endControlPoint);\n    return v2Normalize(dxVector, decimalPlaces);\n};\n\nexport const v3QuadraticBezierCurveTangent = (\n    t: number,\n    startControlPoint: Vector3,\n    centerControlPoint: Vector3,\n    endControlPoint: Vector3,\n    decimalPlaces = Infinity\n) : Vector3 => {\n    const dxVector = dxV3QuadraticBezierCurve(t, startControlPoint, centerControlPoint, endControlPoint);\n    return v3Normalize(dxVector, decimalPlaces);\n};\n\nexport const v2CubicBezierCurveTangent = (\n    t: number,\n    startControlPoint: Vector2,\n    center1ControlPoint: Vector2,\n    center2ControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : Vector2 => {\n    const dxVector = dxV2CubicBezierCurve(t, startControlPoint, center1ControlPoint, center2ControlPoint, endControlPoint);\n    return v2Normalize(dxVector, decimalPlaces);\n};\n\nexport const v3CubicBezierCurveTangent = (\n    t: number,\n    startControlPoint: Vector3,\n    center1ControlPoint: Vector3,\n    center2ControlPoint: Vector3,\n    endControlPoint: Vector3,\n    decimalPlaces = Infinity\n) : Vector3 => {\n    const dxVector = dxV3CubicBezierCurve(t, startControlPoint, center1ControlPoint, center2ControlPoint, endControlPoint);\n    return v3Normalize(dxVector, decimalPlaces);\n};\n\n// -------------------- NORMAL --------------------------\n\n/**\n * Normal is a vector that runs at a right angle to the direction of the curve, and is typically of length 1.\n * To find it, we take the normalised tangent vector, and then rotate it by a 90 degrees.\n */\nexport const v2QuadraticBezierCurveNormal = (\n    t: number,\n    startControlPoint: Vector2,\n    centerControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : Vector2 => {\n\n    const tangent = v2QuadraticBezierCurveTangent(t, startControlPoint, centerControlPoint, endControlPoint, decimalPlaces);\n    return [-tangent[1], tangent[0]];\n};\n\nexport const v2CubicBezierCurveNormal = (\n    t: number,\n    startControlPoint: Vector2,\n    center1ControlPoint: Vector2,\n    center2ControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : Vector2 => {\n\n    const tangent = v2CubicBezierCurveTangent(t, startControlPoint, center1ControlPoint, center2ControlPoint, endControlPoint, decimalPlaces);\n    return [-tangent[1], tangent[0]];\n};\n\n// -------------------- EXTREMA --------------------------\n\n/**\n * Find maxima and minima by solving the equation B'(t) = 0\n * Returns result in [0, 1] range.\n */\nexport const v2QuadraticBezierCurveExtrema = (\n    startControlPoint: Vector2,\n    centerControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : Vector => {\n\n   /*\n    (-2 * (1 - t)) * startControlPoint[0] + (2 - 4 * t) * centerControlPoint[0] + (2 * t) * endControlPoint[0]\n    2 * t * startControlPoint[0] - 4 * t * centerControlPoint[0] + 2 * t * endControlPoint[0] - 2 * startControlPoint[0] + 2 * centerControlPoint[0]\n    t * (2  * startControlPoint[0] - 4 * centerControlPoint[0] + 2 * endControlPoint[0]) + (- 2 * startControlPoint[0] + 2 * centerControlPoint[0])\n    */\n\n    const a1 = 2  * startControlPoint[0] - 4 * centerControlPoint[0] + 2 * endControlPoint[0];\n    const b1 = -2 * startControlPoint[0] + 2 * centerControlPoint[0];\n    const equation1: Vector3 = [a1, b1, 0];\n    const res1 = linearEquation(equation1, decimalPlaces);\n\n    const a2 = 2  * startControlPoint[1] - 4 * centerControlPoint[1] + 2 * endControlPoint[1];\n    const b2 = -2 * startControlPoint[1] + 2 * centerControlPoint[1];\n    const equation2: Vector3 = [a2, b2, 0];\n    const res2 = linearEquation(equation2, decimalPlaces);\n\n    const res: Vector = [];\n\n    if(isNumber(res1)){\n        res.push(res1);\n    }\n\n    if(isNumber(res2)){\n        res.push(res2);\n    }\n\n    return res;\n};\n\n/**\n * Find maxima and minima by solving the equation B'(t) = 0\n * Returns result in [0, 1] range.\n */\nexport const v2CubicBezierCurveExtrema = (\n    startControlPoint: Vector2,\n    center1ControlPoint: Vector2,\n    center2ControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : Vector2|null => {\n\n    const a1 = -3  * startControlPoint[0] + 9 * center1ControlPoint[0] - 9 * center2ControlPoint[0] + 3 * endControlPoint[0];\n    const b1 = 6  * startControlPoint[0] - 12 * center1ControlPoint[0] + 6 * center2ControlPoint[0];\n    const c1 = -3  * startControlPoint[0] + 3 * center1ControlPoint[0];\n    const equation1: Vector = [a1, b1, c1, 0];\n\n    const a2 = -3  * startControlPoint[1] + 9 * center1ControlPoint[1] - 9 * center2ControlPoint[1] + 3 * endControlPoint[1];\n    const b2 = 6  * startControlPoint[1] - 12 * center1ControlPoint[1] + 6 * center2ControlPoint[1];\n    const c2 = -3  * startControlPoint[1] + 3 * center1ControlPoint[1];\n    const equation2: Vector = [a2, b2, c2, 0];\n\n    // Any value between 0 and 1 is a root that matters for B\u00E9zier curves, anything below or above that is irrelevant (because B\u00E9zier curves are only defined over the interval [0,1]).\n    const res1 = quadraticEquation(equation1, decimalPlaces).filter(num => num >= 0 && num <= 1);\n    const res2 = quadraticEquation(equation2, decimalPlaces).filter(num => num >= 0 && num <= 1);\n\n    const res = [...res1, ...res2];\n    if(res.length === 2){\n        return [...res1, ...res2] as Vector2;\n    }\n\n    return null;\n};\n\n// -------------------- BOUNDING BOX --------------------------\n\nexport const v2QuadraticBezierBBox = (\n    startControlPoint: Vector2,\n    centerControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : IBBox => {\n\n    const extrema = v2QuadraticBezierCurveExtrema(startControlPoint, centerControlPoint, endControlPoint);\n\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for(const percent of extrema){\n        const point = v2QuadraticBezierCurve(percent, startControlPoint, centerControlPoint, endControlPoint);\n\n        const x = point[0];\n        const y = point[1];\n\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n    }\n\n    minX = setDecimalPlaces(Math.min(minX, startControlPoint[0], endControlPoint[0]), decimalPlaces);\n    maxX = setDecimalPlaces(Math.max(maxX, startControlPoint[0], endControlPoint[0]), decimalPlaces);\n    minY = setDecimalPlaces(Math.min(minY, startControlPoint[1], endControlPoint[1]), decimalPlaces);\n    maxY = setDecimalPlaces(Math.max(maxY, startControlPoint[1], endControlPoint[1]), decimalPlaces);\n\n    return {\n        x: minX,\n        y: minY,\n        w: Math.abs(maxX - minX),\n        h: Math.abs(maxY - minY),\n        x2: maxX,\n        y2: maxY,\n    }\n};\n\nexport const v2CubicBezierBBox = (\n    startControlPoint: Vector2,\n    center1ControlPoint: Vector2,\n    center2ControlPoint: Vector2,\n    endControlPoint: Vector2,\n    decimalPlaces = Infinity\n) : IBBox => {\n\n    const extrema = v2CubicBezierCurveExtrema(startControlPoint, center1ControlPoint, center2ControlPoint, endControlPoint) || [];\n\n    let minX = Infinity;\n    let minY = Infinity;\n    let maxX = -Infinity;\n    let maxY = -Infinity;\n\n    for(const percent of extrema){\n        const point = v2CubicBezierCurve(percent, startControlPoint, center1ControlPoint, center2ControlPoint, endControlPoint);\n\n        const x = point[0];\n        const y = point[1];\n\n        minX = Math.min(minX, x ?? Infinity);\n        maxX = Math.max(maxX, x ?? -Infinity);\n\n        minY = Math.min(minY, y ?? Infinity);\n        maxY = Math.max(maxY, y ?? -Infinity);\n    }\n\n    minX = setDecimalPlaces(Math.min(minX, startControlPoint[0], endControlPoint[0]), decimalPlaces);\n    maxX = setDecimalPlaces(Math.max(maxX, startControlPoint[0], endControlPoint[0]), decimalPlaces);\n    minY = setDecimalPlaces(Math.min(minY, startControlPoint[1], endControlPoint[1]), decimalPlaces);\n    maxY = setDecimalPlaces(Math.max(maxY, startControlPoint[1], endControlPoint[1]), decimalPlaces);\n\n    return {\n        x: minX,\n        y: minY,\n        w: Math.abs(maxX - minX),\n        h: Math.abs(maxY - minY),\n        x2: maxX,\n        y2: maxY,\n    }\n};\n\n\n", "import { Vector2 } from '../types';\nimport { v2Sub } from './linear-algebra/vector';\nimport { getV2Angle } from './angle';\nimport { convertRange } from './other';\n\n/**\n * Circle Equation\n * x^2 + y^2 = radius^2\n * ----------------------\n * Circle Parametric Equation\n * x(t) = radius * cos(t)\n * y(t) = radius * sin(t)\n * t is the parameter = angle\n *\n * Angle should be in the range [0, Math.PI]\n */\nexport const circleMovement = (center: Vector2, angle: number, radius: number): Vector2 => {\n    angle = angle % Math.PI * 2;\n\n    return [\n        center[0] + Math.cos(angle) * radius,\n        center[1] + Math.sin(angle) * radius\n    ];\n};\n\n/**\n * Circle Movement After Mouse.\n * Mouse Positions:\n * - pageX/Y coordinates are relative to the top left corner of the whole rendered page (including parts hidden by scrolling),\n * - screenX and screenY: Relative to the top left of the physical screen/monitor, this reference point only moves if you increase or decrease the number of monitors or the monitor resolution.\n * - clientX/Y coordinates are relative to the top left corner of the visible part of the page, \"seen\" through browser window.\n * - offsetX and offsetY are relative to the parent container,\n */\nexport const circleMovementAfterMouse = (\n    mouse: Vector2,\n    center: Vector2,\n    radius: number\n): Vector2 => {\n\n    const vector = v2Sub(mouse, center);\n\n    let angle = getV2Angle(vector);\n\n    // convert the angle from the range [0, Math.PI*2] to the range [0, Math.PI]\n    angle = convertRange(angle, 0, Math.PI*2, 0, Math.PI);\n\n    return circleMovement(center, angle, radius);\n};\n\n/**\n * Ellipse Equation\n * (x - centerX)^2 / (radius1^2) + (y - centerY)^2 / (radius2^2) = 1\n * -----------------------------------------------------------------\n * Ellipse Parametric Equation\n * x(t) = radius1 * cos(t)\n * y(t) = radius2 * sin(t)\n * t is the parameter = angle\n *\n * Angle should be in the range [0, Math.PI]\n */\nexport const ellipseMovement = (center: Vector2, angle: number, radius1: number, radius2: number): Vector2 => {\n    angle = angle % Math.PI * 2;\n\n    return [\n        center[0] + Math.cos(angle) * radius1,\n        center[1] + Math.sin(angle) * radius2\n    ];\n};\n\n/**\n * Ellipse Movement After Mouse.\n * Mouse Positions:\n * - pageX/Y coordinates are relative to the top left corner of the whole rendered page (including parts hidden by scrolling),\n * - screenX and screenY: Relative to the top left of the physical screen/monitor, this reference point only moves if you increase or decrease the number of monitors or the monitor resolution.\n * - clientX/Y coordinates are relative to the top left corner of the visible part of the page, \"seen\" through browser window.\n * - offsetX and offsetY are relative to the parent container,\n */\nexport const ellipseMovementAfterMouse = (\n    mouse: Vector2,\n    center: Vector2,\n    radii: Vector2\n): Vector2 => {\n\n    const vector = v2Sub(mouse, center);\n\n    let angle = getV2Angle(vector);\n\n    // convert the angle from the range [0, Math.PI*2] to the range [0, Math.PI]\n    angle = convertRange(angle, 0, Math.PI*2, 0, Math.PI);\n\n    return ellipseMovement(center, angle, radii[0], radii[1]);\n};\n\n/**\n * Sine Wave Equation (Sinusoid)\n * -----------------------------\n * const y = amplitude * Math.sin(2 * Math.PI * frequency * x + phase);\n * amplitude = the peak deviation of the function from zero\n * frequency = number of cycles\n * phase = specifies (in radians) where in its cycle the oscillation is at t = 0.\n * think of it as \"shifting\" the starting point of the function to the right (positive p) or left (negative)\n */\nexport const sineWaveMovement = (x: number, amplitude: number, frequency: number, phase: number) : Vector2 => {\n    /*\n    example values:\n    const amplitude = 50;\n    const frequency = 0.005;\n    const phase = 0;\n    x: [0, 1000]\n     */\n    const y = amplitude * Math.sin(2 * Math.PI * frequency * x + phase);\n\n    return [x, y];\n};\n\n/**\n * Lissajous curve (Lissajous figure or Bowditch curve)\n * Parametric equation #1\n * f(t) = A * sin(k * t + m)\n * f(t) = B * sin(n * t)\n * 0 <= m <= PI/2\n * k, n >= 1\n * -----------------------\n * Parametric equation #2\n * f(t) = A * cos(k * t - m)\n * f(t) = B * cos(n * t - p)\n * -----------------------------\n * Shapes:\n * k = 1, n = 1, m = 0, p = 0 ---> line\n * A = B,  k = 1, n = 1, m = PI/2, p = PI/2 ----> circle\n * A != B, k = 1, n = 1, m = PI/2, p = PI/2 ----> ellipse\n * k = 2, n = 2, m = PI/2, p = PI/2 ----> section of a parabola\n */\nexport const lissajousCurve = (\n    width: number,\n    height: number,\n    t: number,\n    k: number,\n    n: number,\n    m: number,\n    p: number\n) :Vector2 => {\n    return [\n        width * Math.cos(k * t - m),\n        height * Math.cos(n * t - p),\n    ];\n};\n", "import { getRandom } from './random';\nimport { HSLColor, LABColor, RGBColor } from '../types';\nimport { mod } from './other';\nimport { setDecimalPlaces } from './format';\n\n// ------------------------ RANDOM COLOR -------------------------------------\n\nexport const getRandomRGBColor = () : RGBColor => {\n    const hslColor = getRandomHSLColor();\n    return hslToRgb(hslColor);\n};\n\nexport const getRandomHexColor = () : string => {\n    const hslColor = getRandomHSLColor();\n    return hslToHex(hslColor);\n};\n\nexport const getRandomHSLColor = () : HSLColor => {\n    const h = getRandom(1, 360);\n    const s = getRandom(0, 100);\n    const l = getRandom(0, 100);\n    return [h, s, l];\n};\n\n/**\n * generate random color with the given hue\n */\nexport const getRandomHSLColorWithHue = (h: number) : HSLColor => {\n    const s = getRandom(0, 100);\n    const l = getRandom(0, 100);\n    return [h, s, l];\n};\n\n/**\n * generate random color with the given saturation\n */\nexport const getRandomHSLColorWithSaturation = (s: number) : HSLColor => {\n    const h = getRandom(1, 360);\n    const l = getRandom(0, 100);\n    return [h, s, l];\n};\n\n/**\n * generate random color with the given lightness\n */\nexport const getRandomHSLColorWithLightness = (l: number) : HSLColor => {\n    const h = getRandom(1, 360);\n    const s = getRandom(0, 100);\n    return [h, s, l];\n};\n\nexport const getRandomGrayscaleHSLColor = () : HSLColor => {\n    const l = getRandom(0, 100);\n    return [0, 0, l];\n};\n\nexport const getRandomHSLColorWithinRanges = (\n    hueStart = 1, hueEnd = 360,\n    saturationStart = 0, saturationEnd = 100,\n    lightStart = 0, lightEnd = 100\n) : HSLColor => {\n    const h = getRandom(hueStart, hueEnd);\n    const s = getRandom(saturationStart, saturationEnd);\n    const l = getRandom(lightStart, lightEnd);\n    return [h, s, l];\n};\n\n// ----------------------- CONVERT COLORS --------------------------------------\n\n/**\n * helper: convert hue value to degrees.\n * @param {number} h\n * @return {number} [0, 360] degrees\n */\nconst convertHueToDegrees = (h : number) : number => {\n\n    // the hue value needs to be multiplied by 60 to convert it to degrees\n    h *= 60;\n\n    // if hue becomes negative, you need to add 360 to, because a circle has 360 degrees\n    if(h < 0){\n        h += 360;\n    }\n\n    return h;\n    // convert huw to %\n    // return h * 100 / 360;\n};\n\n/**\n * get hue from RGB\n * @param {number} r [0, 255]\n * @param {number} g [0, 255]\n * @param {number} b [0, 255]\n * @param {number|undefined=} min - min number of [r, g, b]\n * @param {number|undefined=} max - max number of [r, g, b]\n * @return {number} [0, 100] % - we use here % instead of [0, 359] degrees\n */\nconst getHue = (r : number, g : number, b : number, min : number | undefined = undefined, max : number | undefined = undefined) : number => {\n\n    // find the minimum and maximum values of r, g, and b if they are not provided\n    min = (min === undefined) ? Math.min(r, g, b) : min;\n    max = (max === undefined) ? Math.max(r, g, b) : max;\n\n    // if the min and max value are the same -> no hue, as it's gray\n    if(min === max) return 0;\n\n    const diff = max - min;\n\n    let h = 0;\n\n    // if red is max\n    if(max === r){\n        h = (g - b) / diff + (g < b ? 6 : 0);\n    }\n\n    // if green is max\n    if(max === g){\n        h = 2 + (b - r) / diff;\n    }\n\n    // if blue is max\n    if(max === b){\n        h = 4 + (r - g) / diff;\n    }\n\n    return convertHueToDegrees(h);\n};\n\n/**\n * get luminance from RGB\n * @param {number} r [0, 255]\n * @param {number} g [0, 255]\n * @param {number} b [0, 255]\n * @param {number|undefined=} min - min number of [r, g, b]\n * @param {number|undefined=} max - max number of [r, g, b]\n * @return {number} [0, 100] %\n */\nconst getLuminance = (\n    r : number,\n    g : number,\n    b : number,\n    min : number | undefined = undefined,\n    max : number | undefined = undefined) : number => {\n\n    // find the minimum and maximum values of r, g, and b if they are not provided\n    min = (min === undefined) ? Math.min(r, g, b) : min;\n    max = (min === undefined) ? Math.max(r, g, b) : max;\n\n    // calculate the luminance value\n    // @ts-ignore\n    const l = (min + max) / 2; // [0, 1]\n\n    // return l value in %\n    return l * 100;\n};\n\n/**\n * get saturation from RGB\n * @param {number} r [0, 255]\n * @param {number} g [0, 255]\n * @param {number} b [0, 255]\n * @param {number|undefined=} min - min number of [r, g, b]\n * @param {number|undefined=} max - max number of [r, g, b]\n * @param {number|undefined=} l - luminance in [0, 100] %\n * @return {number} [0, 100] %\n */\nconst getSaturation = (\n    r : number,\n    g : number,\n    b : number,\n    min : number | undefined = undefined,\n    max : number | undefined = undefined,\n    l : number | undefined = undefined) : number => {\n\n    // find the minimum and maximum values of r, g, and b if they are not provided\n    min = (min === undefined) ? Math.min(r, g, b) : min;\n    max = (min === undefined) ? Math.max(r, g, b) : max;\n\n    // if the min and max value are the same -> no saturation, as it's gray\n    if(min === max) return 0;\n\n    // calculate luminance if it's not provided\n    l = (l === undefined) ? getLuminance(r, g, b) : l;\n\n    // check the level of luminance\n    const s = (l <= 50) ?\n        // @ts-ignore\n        ((max - min) / (max + min)) : // this formula is used when luminance <= 50%\n        // @ts-ignore\n        (max - min) / (2.0 - max - min);  // this formula is used when luminance > 50%\n\n    // return saturation in %\n    return s * 100;\n};\n\nexport const rgbToHsl = (rgb: RGBColor, decimalPlaces = Infinity): HSLColor => {\n\n    // convert rgb values to the range [0, 1]\n    const r = rgb[0] / 255;\n    const g = rgb[1] / 255;\n    const b = rgb[2] / 255;\n\n    // find the minimum and maximum values of r, g, and b\n    const min = Math.min(r, g, b);\n    const max = Math.max(r, g, b);\n\n    // calculate the luminance value in %\n    const l = getLuminance(r, g, b, min, max);\n\n    // calculate the saturation in %\n    const s = getSaturation(r, g, b, min, max, l);\n\n    // calculate the hue in % (not in degrees!)\n    const h = getHue(r, g, b, min, max);\n\n    if(h > 360 || s > 100 || l > 100){\n        return [0, 0, 100];\n    }\n\n    if(h < 0 || s < 0 || l < 0){\n        return [0, 0, 0];\n    }\n\n    return [\n        setDecimalPlaces(h, decimalPlaces),\n        setDecimalPlaces(s, decimalPlaces),\n        setDecimalPlaces(l, decimalPlaces),\n    ];\n};\n\n/**\n * helper: HSL to RGB\n */\nconst hslToRgbHelper = (helper1 : number, helper2 : number, colorHelper : number) : number => {\n\n    // all values need to be between 0 and 1\n    // if you get a negative value you need to add 1 to it\n    if(colorHelper < 0) colorHelper += 1;\n\n    // if you get a value above 1 you need to subtract 1 from it.\n    if(colorHelper > 1) colorHelper -= 1;\n\n    if(colorHelper * 6 < 1) return helper2 + (helper1 - helper2) * 6 * colorHelper;\n\n    if(colorHelper * 2 < 1) return helper1;\n\n    if(colorHelper * 3 < 2){\n        return helper2 + (helper1 - helper2) * (0.666 - colorHelper) * 6;\n    }\n    else{\n        return helper2;\n    }\n};\n\nexport const hslToRgb = (hsl: HSLColor, decimalPlaces = Infinity): RGBColor => {\n\n    // convert all values to [0, 1] from %\n    const h = hsl[0] / 100;\n    const s = hsl[1] / 100;\n    const l = hsl[2] / 100;\n\n    // if there is no saturation -> it\u2019s grey\n    if(s === 0){\n        // convert the luminance from [0, 1] to [0, 255]\n        const gray = l * 255;\n        return [gray, gray, gray];\n    }\n\n    // check the level of luminance\n    const helper1 = (l < 0.5) ?\n        (l * (1.0 + s)) :\n        (l + s - l * s);\n\n    const helper2 = 2 * l - helper1;\n\n    const rHelper = h + 0.333;\n    const gHelper = h;\n    const bHelper = h - 0.333;\n\n    let r = hslToRgbHelper(helper1, helper2, rHelper);\n    let g = hslToRgbHelper(helper1, helper2, gHelper);\n    let b = hslToRgbHelper(helper1, helper2, bHelper);\n\n    // convert rgb to [0, 255]\n    r *= 255;\n    g *= 255;\n    b *= 255;\n\n    if(r > 255 || g > 255 || b > 255){\n        return [255, 255, 255];\n    }\n\n    if(r < 0 || g < 0 || b < 0){\n        return [0, 0, 0];\n    }\n\n    return [\n        setDecimalPlaces(r, decimalPlaces),\n        setDecimalPlaces(g, decimalPlaces),\n        setDecimalPlaces(b, decimalPlaces),\n    ];\n};\n\n/**\n * HSL to hex\n * hslToHex(360, 100, 50)  // [360, 100, 5] ==> \"#ff0000\" (red)\n */\nexport const hslToHex = (hsl: HSLColor) => {\n\n    if(hsl[0] > 360 || hsl[1] > 100 || hsl[2] > 100){\n        return '#ffffff';\n    }\n\n    if(hsl[0] < 0 || hsl[1] < 0 || hsl[2] < 0){\n        return '#000000';\n    }\n\n    const h = hsl[0] / 360;\n    const s = hsl[1] / 100;\n    const l = hsl[2] / 100;\n\n    let r, g, b;\n    if (s === 0) {\n        r = g = b = l; // achromatic\n    } else {\n        const hue2rgb = (p: number, q: number, t: number) => {\n            if (t < 0) t += 1;\n            if (t > 1) t -= 1;\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\n            if (t < 1 / 2) return q;\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n            return p;\n        };\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        const p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    const toHex = (x: number) => {\n        const hex = Math.round(x * 255).toString(16);\n        return hex.length === 1 ? '0' + hex : hex;\n    };\n\n    return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n};\n\n/**\n * RGB to HEX\n * rgbToHex([235, 64, 52]) // #eb4034\n */\nexport const rgbToHex = (rgb: RGBColor) => {\n    const [r, g, b] = rgb;\n    return '#' + (1 << 24 | r << 16 | g << 8 | b).toString(16).slice(1);\n};\n\nexport const hexToRgb = (hex: string) : RGBColor | null => {\n\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n    const _hex = hex.replace(shorthandRegex, (_m, r, g, b) => {\n        return r + r + g + g + b + b;\n    });\n\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(_hex);\n    if(!result) return null;\n\n    const r = parseInt(result[1], 16);\n    const g = parseInt(result[2], 16);\n    const b = parseInt(result[3], 16);\n\n    return [r, g, b];\n};\n\nexport const rgbToLab = (rgb: RGBColor, decimalPlaces = Infinity) : LABColor => {\n\n    let r = rgb[0] / 255;\n    let g = rgb[1] / 255;\n    let b = rgb[2] / 255;\n\n    r = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n\n    let x = (r * 0.4124 + g * 0.3576 + b * 0.1805) / 0.95047;\n    let y = (r * 0.2126 + g * 0.7152 + b * 0.0722) / 1.00000;\n    let z = (r * 0.0193 + g * 0.1192 + b * 0.9505) / 1.08883;\n\n    x = (x > 0.008856) ? Math.pow(x, 1/3) : (7.787 * x) + 16/116;\n    y = (y > 0.008856) ? Math.pow(y, 1/3) : (7.787 * y) + 16/116;\n    z = (z > 0.008856) ? Math.pow(z, 1/3) : (7.787 * z) + 16/116;\n\n    return [\n        setDecimalPlaces((116 * y) - 16, decimalPlaces),\n        setDecimalPlaces(500 * (x - y), decimalPlaces),\n        setDecimalPlaces(200 * (y - z), decimalPlaces),\n    ];\n};\n\nexport const labToRgb = (lab: LABColor, decimalPlaces = Infinity) : RGBColor => {\n    let y = (lab[0] + 16) / 116;\n    let x = lab[1] / 500 + y;\n    let z = y - lab[2] / 200;\n\n    x = 0.95047 * ((x * x * x > 0.008856) ? x * x * x : (x - 16/116) / 7.787);\n    y = 1.00000 * ((y * y * y > 0.008856) ? y * y * y : (y - 16/116) / 7.787);\n    z = 1.08883 * ((z * z * z > 0.008856) ? z * z * z : (z - 16/116) / 7.787);\n\n    let r = x *  3.2406 + y * -1.5372 + z * -0.4986;\n    let g = x * -0.9689 + y *  1.8758 + z *  0.0415;\n    let b = x *  0.0557 + y * -0.2040 + z *  1.0570;\n\n    r = (r > 0.0031308) ? (1.055 * Math.pow(r, 1/2.4) - 0.055) : 12.92 * r;\n    g = (g > 0.0031308) ? (1.055 * Math.pow(g, 1/2.4) - 0.055) : 12.92 * g;\n    b = (b > 0.0031308) ? (1.055 * Math.pow(b, 1/2.4) - 0.055) : 12.92 * b;\n\n    return [\n        setDecimalPlaces(Math.max(0, Math.min(1, r)) * 255, decimalPlaces),\n        setDecimalPlaces(Math.max(0, Math.min(1, g)) * 255, decimalPlaces),\n        setDecimalPlaces(Math.max(0, Math.min(1, b)) * 255, decimalPlaces),\n    ];\n};\n\n// ----------------------- GET SHIFTED COLORS --------------------------------------\n\nexport const getShiftedHue = (color: HSLColor, shift = 180) : HSLColor => {\n    let hue = color[0];\n    hue += shift;\n\n    if (hue > 360 || hue < 0) {\n        hue = mod(hue, 360);\n    }\n\n    return [hue, color[1], color[2]];\n};\n\nexport const getShiftedLightness = (color: HSLColor, shift = 10) : HSLColor => {\n    let lightness = color[2];\n    lightness += shift;\n\n    if (lightness > 100 || lightness < 0) {\n        lightness = mod(lightness, 100);\n    }\n\n    return [color[0], color[1], lightness];\n};\n\nexport const getShiftedSaturation = (color: HSLColor, shift = 10) : HSLColor => {\n    let saturation = color[1];\n    saturation += shift;\n\n    if (saturation > 100) {\n        saturation -= 100;\n    }\n\n    if(saturation < 0){\n        saturation += 100;\n    }\n\n    return [color[0], saturation, color[2]];\n};\n\n// ----------------------- SIMILAR COLORS --------------------------------------\n\n/**\n * Measure the perceptual difference between two RGB colors using the CIE76 color difference formula:\n * delta = Math.sqrt((L2 - L1)^2 + (a2 - a1)^2 + (b2 - b1)^2)\n * https://en.wikipedia.org/wiki/Color_difference\n * https://stackoverflow.com/questions/13586999/color-difference-similarity-between-two-values-with-js\n * <= 1.0     Not perceptible by human eyes.\n * 1 - 2      Perceptible through close observation.\n * 2 - 10     Perceptible at a glance.\n * 11 - 49    Colors are more similar than opposite\n * 100        Colors are exact opposite\n */\nexport const getColorsDelta = (rgbA: RGBColor, rgbB: RGBColor, decimalPlaces = Infinity) => {\n    const labA = rgbToLab(rgbA, decimalPlaces);\n    const labB = rgbToLab(rgbB, decimalPlaces);\n\n    // differences between the LAB components of the two colors\n    const deltaL = labA[0] - labB[0];\n    const deltaA = labA[1] - labB[1];\n    const deltaB = labA[2] - labB[2];\n\n    // chroma components\n    const c1 = Math.sqrt(labA[1] * labA[1] + labA[2] * labA[2]);\n    const c2 = Math.sqrt(labB[1] * labB[1] + labB[2] * labB[2]);\n    const deltaC = c1 - c2;\n\n    // difference in hue, deltaH, which takes into account both the differences\n    // in the a* and b* components of LAB and the differences in chroma.\n    let deltaH = deltaA * deltaA + deltaB * deltaB - deltaC * deltaC;\n    deltaH = deltaH < 0 ? 0 : Math.sqrt(deltaH);\n\n    const sc = 1.0 + 0.045 * c1;\n    const sh = 1.0 + 0.015 * c1;\n\n    // It applies weighting factors to the differences in lightness (deltaL),\n    // chroma (deltaC), and hue (deltaH).\n    const deltaLKlsl = deltaL / (1.0);\n    const deltaCkcsc = deltaC / (sc);\n    const deltaHkhsh = deltaH / (sh);\n\n    // It computes the final color difference using the CIE76 formula:\n    // deltaE = sqrt(deltaLKlsl^2 + deltaCkcsc^2 + deltaHkhsh^2),\n    // where deltaLKlsl is the weighted lightness difference,\n    // deltaCkcsc is the weighted chroma difference,\n    // and deltaHkhsh is the weighted hue difference.\n    const i = deltaLKlsl * deltaLKlsl + deltaCkcsc * deltaCkcsc + deltaHkhsh * deltaHkhsh;\n\n    // It returns the calculated color difference,\n    // optionally rounded to the specified number of decimal places.\n    return i < 0 ? 0 : Math.sqrt(i);\n};\n", "/**\n * guid like '932ade5e-c515-4807-ac01-73b20ab3fb66'\n */\nexport const guid = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g,  (c) => {\n        const r = Math.random() * 16 | 0;\n        return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n    });\n};\n\n/**\n * id like 'df4unio1opulby2uqh4'\n */\nexport const newId = () => {\n  return Math.random().toString(36).substring(2) + (new Date()).getTime().toString(36);\n};\n", "import { ICircle, IPolygon, IRect, Matrix2, Vector2 } from '../types';\nimport { mod } from './other';\nimport { v2GetNormal, v2DotProduct } from './linear-algebra/vector';\n\n/**\n * Rectangles collision detection.\n * Rectangles should not be rotated.\n * The algorithm works by ensuring there is no gap between any of the 4 sides of the rectangles.\n * Any gap means a collision does not exist.\n * Returns true if collision is detected.\n */\nexport const rectCollide = (rect1: IRect, rect2: IRect) : boolean => {\n    return rect1.x <= rect2.x + rect2.w &&\n            rect1.x + rect1.w >= rect2.x &&\n            rect1.y <= rect2.y + rect2.h &&\n            rect1.h + rect1.y >= rect2.y;\n};\n\n/**\n * Circles collision detection.\n * This algorithm works by taking the center points of the two circles\n * and ensuring the distance between the center points\n * are less than the two radii added together.\n * Returns true if collision is detected.\n */\nexport const circleCollide = (circle1: ICircle, circle2: ICircle) => {\n    const dx = Math.abs(circle1.cx - circle2.cx);\n    const dy = Math.abs(circle1.cy - circle2.cy);\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    return distance <= circle1.r + circle2.r;\n};\n\n//-------------------- Separating Axis Theorem (SAT) Collision detection -------------------------\n\nconst getEdges = (poly: IPolygon) : Matrix2[] => {\n    const edges: Matrix2[] = [];\n\n    for(let i= 0; i<poly.length; i++){\n        const nextIndex = mod(i + 1, poly.length);\n        const edge: Matrix2 = [poly[i], poly[nextIndex]];\n        edges.push(edge);\n    }\n\n    return edges;\n};\n\nexport const convexPolygonsCollide = (poly1: IPolygon, poly2: IPolygon): boolean => {\n    const edges: Matrix2[] = [];\n\n    // collect polygon edges, and combine then into a single array\n    edges.push(...getEdges(poly1));\n    edges.push(...getEdges(poly2));\n\n    // for each edge, find the normal vector and project both polygons onto it\n    for (const edge of edges) {\n        const normal = v2GetNormal(edge[0], edge[1]);\n        const p1Proj = projectPolygon(poly1, normal);\n        const p2Proj = projectPolygon(poly2, normal);\n\n        // Check if the projections overlap\n        const isOverlap = p1Proj.max >= p2Proj.min && p2Proj.max >= p1Proj.min;\n\n        // Check if the projections overlap; if not, the polygons do not collide\n        if (!isOverlap) return false;\n    }\n\n    // If all tests pass, the polygons overlap and collide\n    return true;\n};\n\n/**\n * Project every polygon point onto the normal.\n * Then find min and max.\n */\nconst projectPolygon = (polygon: IPolygon, normal: Vector2): { min: number, max: number } => {\n    let min = Infinity;\n    let max = -Infinity;\n\n    // Project each vertex of the polygon onto the axis\n    for (const vertex of polygon) {\n        const projection = v2DotProduct(vertex, normal);\n        min = Math.min(min, projection);\n        max = Math.max(max, projection);\n    }\n\n    return { min, max };\n};", "export interface IAnimationProps {\n    duration?: number;\n    callback: (result: IAnimationResult) => void;\n    restartOnResize?: boolean;\n    resizeCallback?: (_entries: ResizeObserverEntry[], _observer: ResizeObserver) => void;\n}\n\nexport interface IAnimationResult {\n    start: () => void;\n    stop: () => void;\n    pause: () => void;\n    resume: () => void;\n    restart: () => void;\n    isAnimating: () => boolean;\n    getStartTime: () => number|undefined;\n    getElapsedTime: () => number|undefined;\n    getPercent: () => number|undefined;\n    getResizeObserver: () => ResizeObserver|undefined;\n}\n\nexport const animate = (props: IAnimationProps) : IAnimationResult => {\n\n    const _duration = props.duration !== undefined ? props.duration : Infinity;\n\n    let startTime: number|undefined = undefined; // in milliseconds\n    let animationId: number|undefined = undefined;\n\n    // the time elapsed since the start of the animation (in milliseconds)\n    let elapsed: number|undefined = undefined;\n    let previousTimeStamp: number|undefined = undefined;\n\n    let animating = false;\n    let observer: ResizeObserver|undefined = undefined;\n\n    // -------------------- COMMANDS ---------------------\n\n    const stop = () => {\n        startTime = undefined;\n        elapsed = undefined;\n        previousTimeStamp = undefined;\n        animating = false;\n\n        /*if(observer !== undefined){\n            observer.disconnect();\n            observer = undefined;\n        }*/\n\n        if(animationId === undefined) return;\n        window.cancelAnimationFrame(animationId);\n    };\n\n    const restart = () => {\n        stop();\n        start();\n    };\n\n    const pause = () => {\n        animating = false;\n    };\n\n    const resume = () => {\n        animating = true;\n    };\n\n    /**\n     * Animation Step.\n     * @param {number} timeStamp in milliseconds\n     */\n    const step = (timeStamp: DOMHighResTimeStamp) => {\n\n        if (startTime === undefined) {\n            startTime = timeStamp;\n        }\n\n        // the time elapsed since the start of the animation (in milliseconds)\n        elapsed = timeStamp - startTime;\n\n        if (animating && previousTimeStamp !== timeStamp && typeof props.callback === 'function') {\n\n            // do the rendering .............\n            props.callback(getResult());\n        }\n\n        if(elapsed <= _duration){\n            previousTimeStamp = timeStamp;\n            animationId = window.requestAnimationFrame(step);\n        }\n        else{\n            stop();\n        }\n    };\n\n    const observerHandler = (_entries: ResizeObserverEntry[], _observer: ResizeObserver) => {\n        restart();\n\n        if(typeof props.resizeCallback === 'function'){\n            props.resizeCallback(_entries, _observer);\n        }\n    };\n\n    const start = () => {\n        startTime = undefined;\n        elapsed = undefined;\n        previousTimeStamp = undefined;\n        animating = true;\n\n        if(props.restartOnResize && window.ResizeObserver && observer === undefined){\n            observer = new ResizeObserver(observerHandler);\n            observer.observe(document.body, { box: 'border-box' });\n        }\n        else{\n            animationId = window.requestAnimationFrame(step);\n        }\n    };\n\n    // --------------- GET INFO ----------------------\n\n    /**\n     * the time elapsed since the start of the animation (in milliseconds)\n     */\n    const getElapsedTime = () : number|undefined => {\n        return elapsed;\n    };\n\n    const isAnimating = () => {\n        return animating;\n    };\n\n    const getStartTime = () => {\n        return startTime;\n    };\n\n    const getPercent = () => {\n        if(_duration === Infinity || elapsed === undefined) return undefined;\n        return elapsed * 100 / _duration;\n    };\n\n    const getResizeObserver = () => {\n      return observer;\n    };\n\n    const getResult = () : IAnimationResult => {\n        return {\n\n            // commands --------------\n            start,\n            stop,\n            pause,\n            resume,\n            restart,\n\n            // information -------\n            isAnimating,\n            getElapsedTime,\n            getStartTime,\n            getPercent,\n            getResizeObserver,\n        };\n    };\n\n    return getResult();\n};\n", "import { setDecimalPlaces } from './format';\n\nexport const getCircleCircumference = (radius: number, decimalPlaces = Infinity) => {\n    return setDecimalPlaces(2 * Math.PI * radius, decimalPlaces);\n};\n\nexport const getEllipseCircumference = (radius1: number, radius2: number, decimalPlaces = Infinity) => {\n    return setDecimalPlaces(2 * Math.PI * Math.sqrt((radius1 ** 2 + radius2 ** 2) / 2), decimalPlaces);\n};\n\nexport const isAngleInCircleArc = (startAngleDeg: number, endAngleDeg: number, currentDegrees: number) : boolean => {\n\n    if(startAngleDeg > endAngleDeg) {\n        endAngleDeg += 360;\n    }\n\n    return currentDegrees >= startAngleDeg && currentDegrees <= endAngleDeg ||\n        (currentDegrees + 360) >= startAngleDeg && (currentDegrees + 360) <= endAngleDeg;\n};\n\n/**\n * get the side of a square inscribed in a circle\n */\nexport const getSquareInCircleSide = (radius: number, decimalPlaces = Infinity) => {\n    return setDecimalPlaces(radius * 2 / Math.sqrt(2), decimalPlaces);\n};\n", "/**\n * 1 + 2 + ... + n = n * (n + 1) / 2\n */\nexport const naturalNumbersSequenceSum = (n: number) => {\n    return n * (n + 1) / 2;\n};\n\n/**\n * n = the number of terms to be added\n * a = the first term in the sequence\n * d = the constant value between terms\n */\nexport const arithmeticSequenceSum = (n: number, a: number, d: number) => {\n    return (n / 2) * (2 * a + (n - 1) * d);\n};", "import { setDecimalPlaces } from './format';\n\n// -------------------- CENTRAL TENDENCY ----------------------------\n\n/**\n * Central tendency: Calculate the Average (mean = \u03BC)\n * Sum of all numbers divided by the array length.\n */\nexport const getArithmeticMean = (data: number[], decimalPlaces = Infinity) : number|undefined => {\n    if(!data || data.length <= 0) return undefined;\n\n    const sum = data.reduce((acc, val) => acc + val, 0);\n    return setDecimalPlaces(sum / data.length, decimalPlaces);\n};\n\n/**\n * Frequency map: number ---> it's frequency\n */\nexport const getArithmeticMeanFromFrequency = (frequencyMap: Map<number, number>, decimalPlaces = Infinity) => {\n\n    let mean = 0;\n\n    for(const [val, frequency] of frequencyMap) {\n        mean += val * frequency;\n    }\n\n    return setDecimalPlaces(mean, decimalPlaces);\n};\n\n/**\n * Central tendency: What is the central number in the sorted array?\n * Good for lists like [3, 3, 3, 3, 3, 3, 100] - 100 here is called \"Outlier\"\n */\nexport const getMedian = (data: number[], decimalPlaces = Infinity) : number|undefined => {\n    if(!data || data.length <= 0) return undefined;\n\n    const copy = [...data].sort((num1, num2) => num1 - num2);\n    const mid = Math.floor(copy.length / 2);\n\n    if(copy.length % 2 === 0) {\n        return setDecimalPlaces((copy[mid] + copy[mid - 1]) / 2, decimalPlaces);\n    }\n    else {\n        return setDecimalPlaces(copy[mid], decimalPlaces);\n    }\n};\n\n/**\n * Central tendency: What number is most common in the set.\n * If all numbers have the same frequency, there is no mode.\n */\nexport const getMode = (data: number[]) : number[]|undefined => {\n    if(!data || data.length <= 0) return undefined;\n\n    // Count frequency of each number in the data array.\n    const frequencyMap: Map<number, number> = new Map();\n    for (const num of data) {\n        frequencyMap.set(num, (frequencyMap.get(num) || 0) + 1);\n    }\n\n    let maxFrequency = 0;\n    let modes: number[] = [];\n\n    // Find the maximum frequency\n    for (const [num, frequency] of frequencyMap) {\n        if (frequency > maxFrequency) {\n            maxFrequency = frequency;\n            modes = [num];\n        }\n        else if (frequency === maxFrequency) {\n            modes.push(num);\n        }\n    }\n\n    // If all numbers have the same frequency, there is no mode\n    if (modes.length === data.length) {\n        return undefined;\n    }\n\n    // Return the mode(s)\n    return modes.length === 1 ? [modes[0]] : modes;\n};\n\n/*\nTODO:\n- geometric mean\n- harmonic mean\n */\n\n// -------------------- DISPERSION ----------------------------\n\n/**\n * Dispersion: the average square distance from the mean.\n * Sum of (x - mean)^2 / N\n */\nexport const getVariance1 = (data: number[], decimalPlaces = Infinity) : number|undefined => {\n    if(!data || data.length <= 0) return undefined;\n\n    const mean = getArithmeticMean(data);\n    if(mean === undefined) return undefined;\n\n    const sum = data.reduce((acc, val) => acc + ((val - mean) ** 2), 0);\n\n    return setDecimalPlaces(sum / data.length, decimalPlaces);\n};\n\n/**\n * Another formula of dispersion - the average square distance from the mean.\n * (Sum of x^2) / N - (mean ^ 2)\n */\nexport const getVariance = (data: number[], decimalPlaces = Infinity) : number|undefined => {\n    if(!data || data.length <= 0) return undefined;\n\n    const mean = getArithmeticMean(data);\n    if(mean === undefined) return undefined;\n\n    const sum = data.reduce((acc, val) => acc + (val ** 2), 0);\n\n    return setDecimalPlaces((sum / data.length) - (mean ** 2), decimalPlaces);\n};\n\n/**\n * \u03C3\n */\nexport const getStandardDeviation = (data: number[], decimalPlaces = Infinity) => {\n    const variance = getVariance(data) ?? 0;\n    return setDecimalPlaces(Math.sqrt(variance), decimalPlaces);\n};", "import { setDecimalPlaces } from './format';\nimport { getArithmeticMean, getStandardDeviation } from './statistics';\nimport { IMlNormalizeResult, IMlStandardizeResult } from '../types';\n\n// --------------------- NORMALIZE --------------------------------\n\n/**\n * Changes value to be in the range [0, 1].\n */\nexport const mlNormalizeValue = (value: number, min: number, max: number, decimalPlaces = Infinity) : number => {\n    const diff = max - min;\n    if(diff === 0) return 0;\n    return setDecimalPlaces((value - min) / diff, decimalPlaces);\n};\n\n/**\n * Returns a copy of array, where each value will be in the range [0, 1].\n */\nexport const mlNormalizeArray = (data: number[], min: number, max: number, decimalPlaces = Infinity): number[] => {\n    const copy = [...data];\n\n    for(let i=0; i<copy.length; i++) {\n        copy[i] = mlNormalizeValue(copy[i], min, max, decimalPlaces);\n    }\n\n    return copy;\n};\n\nexport const mlNormalizeTestData = (data: number[], decimalPlaces = Infinity): IMlNormalizeResult => {\n    const min = Math.min(...data);\n    const max = Math.max(...data);\n    const _data = mlNormalizeArray(data, min, max, decimalPlaces);\n\n    return {\n        min: setDecimalPlaces(min, decimalPlaces),\n        max: setDecimalPlaces(max, decimalPlaces),\n        data: _data,\n    };\n};\n\n/**\n * Alias.\n */\nexport const mlNormalizeUnseenData = (data: number[], min: number, max: number, decimalPlaces = Infinity): number[] => {\n    return mlNormalizeArray(data, min, max, decimalPlaces);\n};\n\n// --------------------- STANDARDIZE --------------------------------\n\n/**\n * Changes value to be in the range [-1, 1].\n */\nexport const mlStandardizeValue = (value: number, mean: number, stdDev: number, decimalPlaces = Infinity) : number => {\n    if(stdDev === 0) return 0;\n    return setDecimalPlaces((value - mean) / stdDev, decimalPlaces);\n};\n\n/**\n * Returns a copy of array, where each value will be in the range [-1, 1].\n */\nexport const mlStandardizeArray = (data: number[], mean: number, stdDev: number, decimalPlaces = Infinity) : number[] => {\n    return [...data].map(value => mlStandardizeValue(value, mean, stdDev, decimalPlaces));\n};\n\nexport const mlStandardizeTestData = (data: number[], decimalPlaces = Infinity): IMlStandardizeResult => {\n    const mean = getArithmeticMean(data) ?? 0;\n    const stdDev = getStandardDeviation(data);\n    const _data = mlStandardizeArray(data, mean, stdDev, decimalPlaces);\n\n    return {\n        mean: setDecimalPlaces(mean, decimalPlaces),\n        stdDev: setDecimalPlaces(stdDev, decimalPlaces),\n        data: _data,\n    };\n};\n\n/**\n * Alias.\n */\nexport const mlStandardizeUnseenData = (data: number[], mean: number, stdDev: number, decimalPlaces = Infinity): number[] => {\n    return mlStandardizeArray(data, mean, stdDev, decimalPlaces);\n};", "/**\n * Sum of 1 to n numbers:\n * (n * (n + 1)) / 2\n */\nexport const naturalNumbersSum1ToN = (n: number): number => {\n    return (n / 2) * (n + 1);\n};\n\n/**\n * Sum of m to n numbers.\n */\nexport const naturalNumbersSumMToN = (m: number, n: number): number => {\n    return (n - m + 1) * (m + n) / 2;\n};", "/**\n * The simplest and straightforward method\n * but can become inefficient for extremely large numbers\n * due to growing computational time.\n */\nexport const factorialIterative = (n: number, start = 0): number => {\n\n    if (n < 0) {\n        throw new Error('Factorial is not defined for negative numbers.');\n    }\n\n    if (start > n) {\n        throw new Error('Start cannot be greater than n.');\n    }\n\n    if (start < 0) {\n        throw new Error('Start must be non-negative.');\n    }\n\n    if (start === 0) {\n        if (n === 0) {\n            return 1; // 0! is defined as 1\n        }\n        else {\n            start = 1; // Adjust start to 1 to prevent multiplication by zero\n        }\n    }\n\n    let result = 1;\n    for (let i = start; i <= n; i++) {\n        result *= i;\n    }\n    return result;\n};\n\n/**\n * A recursive approach is a classic method for calculating factorials\n * but can lead to stack overflow errors\n * for very large inputs because of deep recursion.\n * However, it's a direct translation\n * of the mathematical definition of factorial.\n */\nexport const factorialRecursive = (n: number, start = 0): number => {\n    if (n < 0) {\n        throw new Error('Factorial is not defined for negative numbers.');\n    }\n\n    if (start > n) {\n        throw new Error('Start cannot be greater than n.');\n    }\n\n    if (start < 0) {\n        throw new Error('Start must be non-negative.');\n    }\n\n    if (start === 0) {\n        if (n === 0) {\n            return 1; // 0! is defined as 1\n        }\n        else {\n            start = 1; // Adjust start to 1 to prevent multiplication by zero\n        }\n    }\n\n    // Base case: when n reaches start, return start instead of further reducing\n    if (n === start) return start;\n\n    // Recursive call\n    return n * factorialRecursive(n - 1, start);\n};\n\n/**\n * Memoization (Top-Down Dynamic Programming).\n */\nexport const factorialMemoized = (n: number, start = 0): number => {\n    if (n < 0) {\n        throw new Error('Factorial is not defined for negative numbers.');\n    }\n\n    if (start > n) {\n        throw new Error('Start cannot be greater than n.');\n    }\n\n    if (start < 0) {\n        throw new Error('Start must be non-negative.');\n    }\n\n    if (start === 0) {\n        if (n === 0) {\n            return 1; // 0! is defined as 1\n        }\n        else {\n            start = 1; // Adjust start to 1 to prevent multiplication by zero\n        }\n    }\n\n    const memo = new Map<number, number>();\n\n    const traverse = (num: number, end: number): number => {\n        if (num < end) return 1;  // Adjust the base case to return 1 if we're below 'end'\n        // if (num === 0) return 1;\n\n        if (memo.has(num)) return memo.get(num) ?? 1;\n\n        if (num === end) {\n            memo.set(num, num);\n            return num;\n        }\n\n        const result = num * traverse(num - 1, end);\n\n        memo.set(num, result);\n\n        return result;\n    };\n\n    return traverse(n, start);\n};\n\n/**\n * Tabulation (Bottom-Up Dynamic Programming).\n */\nexport const factorial = (n: number, start = 0): number => {\n    if (n < 0) {\n        throw new Error('Factorial is not defined for negative numbers.');\n    }\n\n    if (start > n) {\n        throw new Error('Start cannot be greater than n.');\n    }\n\n    if (start < 0) {\n        throw new Error('Start must be non-negative.');\n    }\n\n    if (start === n) {\n        return n === 0 ? 1 : n; // If start == n and n == 0, return 1 (0!), otherwise return n\n    }\n\n    if (start === 0) {\n        start = 1;\n    }\n\n    const table = []; // new Array(n + 1);\n    table[0] = 1;\n    for (let i = 1; i <= n; i++) {\n        table[i] = table[i - 1] * i;\n    }\n    return table[n] / table[start - 1];\n};", "import { factorial } from './factorial';\n\n/**\n * Permutations with repetitions:\n * - \"n\" is the number of things to choose from\n * - we choose \"r\" of them\n * - order matters\n * - repetition is allowed\n *\n * Formula:\n * --------\n * n^r\n *\n * Intuition:\n * ----------\n * In other words, there are n possibilities for the first choice,\n * THEN there are n possibilities for the second choice, and so on,\n * multiplying each time.\n *\n * A Permutation is an ordered Combination.\n *\n * Example:\n * --------\n * Such as a lock that could be \"333\".\n */\nexport const permutationsWithRepetition = (n: number, r: number) => {\n    if (n < 0 || r < 0) {\n        throw new Error('Both n and r should be non-negative integers.');\n    }\n\n    if(r > n) {\n        throw new Error('r cannot be greater than n.');\n    }\n\n    if (!Number.isInteger(n) || !Number.isInteger(r)) {\n        throw new Error('Both n and r should be integers.');\n    }\n\n    return n ** r;\n};\n\n/**\n * Permutations without repetitions:\n * - \"n\" is the number of things to choose from\n * - we choose \"r\" of them\n * - order matters\n * - no repetitions\n *\n * Formula:\n * --------\n * P(n,r) = n! / (n \u2212 r)!\n *\n * Intuition:\n * ----------\n * In this case, we have to reduce the number of available choices each time.\n * After choosing, say, number \"14\" we can't choose it again.\n * So, our first choice has 16 possibilities, and our next choice has 15 possibilities,\n * then 14, 13, 12, 11, ... etc.\n *\n * A Permutation is an ordered Combination.\n */\nexport const permutationsWithoutRepetition = (n: number, r: number) => {\n    if (n < 0 || r < 0) {\n        throw new Error('Both n and r should be non-negative integers.');\n    }\n\n    if(r > n) {\n        throw new Error('r cannot be greater than n.');\n    }\n\n    if (!Number.isInteger(n) || !Number.isInteger(r)) {\n        throw new Error('Both n and r should be integers.');\n    }\n\n    return factorial(n, n - r + 1);\n};\n\n/**\n * Combinations without repetitions:\n * - \"n\" is the number of things to choose from\n * - we choose \"r\" of them\n * - order doesn't matter\n * - no repetitions\n *\n * And is also known as the Binomial Coefficient.\n * We can also use Pascal's Triangle to find the values.\n *\n * Formula:\n * --------\n * C(n, r) = C(n, n - r) = n! / (r! * (n\u2212r)!)\n *\n * Example:\n * --------\n * Such as lottery numbers (2, 14, 15, 27, 30, 33).\n *\n * Tabulation (Bottom-Up Dynamic Programming).\n * Time Complexity: \uD835\uDC42(n \u00D7 r)\n * Space Complexity: \uD835\uDC42(n \u00D7 r)\n */\nexport const combinationsWithoutRepetition = (n: number, r: number) : number => {\n    if (n < 0 || r < 0) {\n        throw new Error('Both n and r should be non-negative integers.');\n    }\n\n    if(r > n) {\n        throw new Error('r cannot be greater than n.');\n    }\n\n    if (!Number.isInteger(n) || !Number.isInteger(r)) {\n        throw new Error('Both n and r should be integers.');\n    }\n\n    // Initialize a two-dimensional array (or matrix) [n + 1, r + 1].\n    // The reason for n + 1 is to ensure that we can access indices directly equal to the value of n\n    // without running out of bounds, as array indices start at 0.\n    const dp = Array.from({ length: n + 1 }, () => Array(r + 1).fill(0));\n    /*\n    const dp: number[][] = [];\n    for(let i=0; i<=n; i++) {\n        dp[i] = [];\n        for(let j=0; j<=r; j++) {\n            dp[i][j] = 0;\n        }\n    }*/\n\n    // Base cases: C(n, 0) = 1 and C(n, n) = 1 for any n.\n    for (let i = 0; i <= n; i++) {\n        dp[i][0] = 1;\n        if (i <= r) {\n            // Only fill this if i <= r to avoid filling non-existent cells\n            dp[i][i] = 1;\n        }\n    }\n\n    // Fill the table using the relation C(n, r) = C(n-1, r-1) + C(n-1, r)\n    for (let i = 1; i <= n; i++) {\n        for (let j = 1; j <= Math.min(i, r); j++) { // Only compute up to the minimum of i and r\n            dp[i][j] = dp[i-1][j-1] + dp[i-1][j];\n        }\n    }\n\n    return dp[n][r];\n};\n\n/**\n * Combinations with repetitions (multi-choose):\n * - \"n\" is the number of things to choose from\n * - we choose \"r\" of them\n * - order doesn't matter\n * - repetition is allowed\n *\n * Formula:\n * --------\n * (r + n \u2212 1)! / r!(n \u2212 1)! = C(r + n \u2212 1, r) = C(r + n \u2212 1, n \u2212 1)\n *\n * Example:\n * --------\n * - Coins in your pocket (5, 5, 5, 10, 10).\n * - Let us say there are five flavors of ice cream: banana, chocolate, lemon, strawberry and vanilla.\u00E5\n *   We can have three scoops. How many variations will there be?\n *\n * Tabulation (Bottom-Up Dynamic Programming).\n * Time Complexity: \uD835\uDC42((r + n) \u00D7 r)\n * Space Complexity: \uD835\uDC42((r + n) \u00D7 r)\n */\nexport const combinationsWithRepetition = (n: number, r: number) : number => {\n    if (n < 0 || r < 0) {\n        throw new Error('Both n and r should be non-negative integers.');\n    }\n\n    if(r > n) {\n        throw new Error('r cannot be greater than n.');\n    }\n\n    if (!Number.isInteger(n) || !Number.isInteger(r)) {\n        throw new Error('Both n and r should be integers.');\n    }\n\n    if(n === 0) return 1;\n\n    // Calculate adjusted values for indices in the DP table\n    const totalItems = r + n - 1;\n    const chooseItems = r;\n\n    // Initialize DP table\n    const dp: number[][] = Array.from({ length: totalItems + 1 }, () => Array(chooseItems + 1).fill(0));\n\n    // Base case initialization: C(i, 0) = 1 for all i, because there's one way to choose nothing\n    for (let i = 0; i <= totalItems; i++) {\n        dp[i][0] = 1;\n    }\n\n    for (let i = 1; i <= totalItems; i++) {\n        for (let j = 1; j <= Math.min(i, chooseItems); j++) {\n            dp[i][j] = dp[i - 1][j] + dp[i - 1][j - 1];\n        }\n    }\n\n    return dp[totalItems][chooseItems];\n};\n\n", "import { setDecimalPlaces, Vector2 } from 'mz-math';\n\nexport interface ISvg {\n    cx: number;\n    cy: number;\n    radius: number;\n    size: number;\n    thickness: number;\n    border: number;\n    startAngleDeg: number;\n    endAngleDeg: number;\n}\n\nexport const getSvg = (\n    circleRadius: number,\n    circleThickness: number,\n    circleBorder: number,\n    maxPointerRadius: number,\n    startAngleDeg: number,\n    endAngleDeg: number\n) : ISvg => {\n\n    const thickness = circleThickness + circleBorder * 2;\n\n    const diff = Math.max(0, maxPointerRadius * 2 - thickness);\n    const size = circleRadius * 2 + thickness + diff;\n\n    const [ cx, cy ] = getSVGCenter(\n        circleRadius,\n        maxPointerRadius,\n        circleThickness,\n        circleBorder\n    );\n\n    return {\n        cx,\n        cy,\n        radius: circleRadius,\n        size,\n        thickness: circleThickness,\n        border: circleBorder,\n        startAngleDeg,\n        endAngleDeg\n    } as ISvg;\n};\n\nexport const getSVGCenter = (\n    circleRadius: number,\n    maxPointerRadius: number,\n    circleThickness: number,\n    circleBorder: number\n) : Vector2 => {\n\n    const size = getSVGSize(\n        circleRadius,\n        maxPointerRadius,\n        circleThickness,\n        circleBorder\n    );\n\n    const val = setDecimalPlaces(size/2, 2);\n\n    return [\n        val,\n        val,\n    ];\n};\n\nexport const getSVGSize = (\n    circleRadius: number,\n    maxPointerRadius: number,\n    circleThickness: number,\n    circleBorder: number\n) : number => {\n    const thickness = circleThickness + circleBorder * 2;\n    const diff = Math.max(0, maxPointerRadius * 2 - thickness);\n    return circleRadius * 2 + thickness + diff;\n};", "// Data  Defaults --------------------\nexport const DEFAULT_MIN = 0;\nexport const DEFAULT_MAX = 100;\nexport const DEFAULT_STEP = 1;\nexport const DEFAULT_ARROW_STEP = 1;\nexport const DEFAULT_ROUND = 0;\n\n// Path Defaults ---------------------\nexport const DEFAULT_PATH_START_ANGLE = 0;\nexport const DEFAULT_PATH_END_ANGLE = 360;\nexport const DEFAULT_PATH_RADIUS = 150;\nexport const DEFAULT_PATH_THICKNESS = 5;\nexport const DEFAULT_PATH_BG_COLOR = '#efefef';\nexport const DEFAULT_PATH_BORDER = 0;\nexport const DEFAULT_PATH_BORDER_COLOR = '#444444';\n\n// Pointer Defaults ------------------\nexport const DEFAULT_POINTER_RADIUS = 10;\nexport const DEFAULT_POINTER_BG_COLOR = '#163a86';\nexport const DEFAULT_POINTER_BG_COLOR_SELECTED = '#000';\nexport const DEFAULT_POINTER_BG_COLOR_DISABLED = '#a8a8a8';\nexport const DEFAULT_POINTER_BORDER = 0;\nexport const DEFAULT_POINTER_BORDER_COLOR = '#000';\n\n// Connection Defaults ------------------\nexport const DEFAULT_CONNECTION_BG_COLOR = '#5daed2';\nexport const DEFAULT_CONNECTION_BG_COLOR_DISABLED = '#97b0bb';\n\n// Text Defaults ------------------------\nexport const DEFAULT_TEXT_COLOR = '#000';\nexport const DEFAULT_TEXT_FONT_SIZE = 16;\n\n// Ticks Defaults -----------------------\nexport const DEFAULT_TICKS_ENABLED = false;\nexport const DEFAULT_TICKS_WIDTH = 3;\nexport const DEFAULT_TICKS_HEIGHT = 10;\nexport const DEFAULT_TICKS_COLOR = '#efefef';\nexport const DEFAULT_TICKS_VALUES_COLOR = '#000';\nexport const DEFAULT_TICKS_VALUES_FONT_SIZE = 12;\nexport const DEFAULT_TICKS_GROUP_SIZE = 10;\nexport const DEFAULT_TICKS_VALUES_DISTANCE = 15;\n\n// Animation Defaults -----------------------\nexport const DEFAULT_ANIMATION_DURATION = 200;\n\n\n", "import { isNumber } from 'mz-math';\n\nexport const getNumber = (value: number|string|undefined|null, defaultValue: number) : number => {\n    return isNumber(value) ? Number(value) : defaultValue;\n};\n\nexport const getString = (value: string|undefined|null, defaultValue: string) : string => {\n    return value === undefined || value === null ? defaultValue : value;\n};\n\nexport const getBoolean = (value: boolean|undefined|null, defaultValue: boolean) : boolean => {\n    return value === undefined || value === null ? defaultValue : value;\n};", "import { mod } from 'mz-math';\n\nexport interface ICircle {\n    strokeDasharray: string;\n    strokeOffset: number;\n}\n\nexport const isAngleInArc = (startAngleDeg: number, endAngleDeg: number, currentDegrees: number) : boolean => {\n    if(startAngleDeg > endAngleDeg) {\n        endAngleDeg += 360;\n    }\n\n    return (currentDegrees >= startAngleDeg && currentDegrees <= endAngleDeg) ||\n        ((currentDegrees + 360) >= startAngleDeg && (currentDegrees + 360) <= endAngleDeg);\n};\n\nexport const getAnglesDistance = (startAngle: number, endAngle: number) => {\n    if(endAngle < startAngle) {\n        endAngle += 360;\n    }\n\n    const diff = endAngle - startAngle;\n    const diffMod = mod(diff, 360);\n\n    return diffMod === 0 && diff > 0 ? 360 : diffMod;\n};\n\nexport const getCircle = (\n    startAngleDeg: number,\n    endAngleDeg: number,\n    radius: number,\n) : ICircle => {\n\n    if(startAngleDeg > endAngleDeg) {\n        endAngleDeg += 360;\n    }\n\n    const circumference = 2 * Math.PI * radius;\n    const angleDiff = endAngleDeg - startAngleDeg;\n    const strokeOffset = -(startAngleDeg / 360) * circumference;\n    const strokeDasharray = (angleDiff / 360) * circumference;\n    const complement = circumference - strokeDasharray;\n\n    return {\n        strokeDasharray: [ strokeDasharray, complement ].join(' '),\n        strokeOffset,\n    } as ICircle;\n};", "import {\n    Vector2,\n    convertRange,\n    mod,\n    setDecimalPlaces,\n    v2Sub,\n    radiansToDegrees,\n    degreesToRadians, circleMovement, v2Distance\n} from 'mz-math';\nimport { ISettings } from './settings-provider';\nimport {\n    DEFAULT_PATH_END_ANGLE,\n    DEFAULT_PATH_START_ANGLE,\n    DEFAULT_POINTER_BG_COLOR,\n    DEFAULT_POINTER_BG_COLOR_DISABLED,\n    DEFAULT_POINTER_BG_COLOR_SELECTED,\n    DEFAULT_POINTER_BORDER,\n    DEFAULT_POINTER_BORDER_COLOR,\n    DEFAULT_POINTER_RADIUS,\n} from './defaults-provider';\nimport { getBoolean, getNumber, getString } from './common-provider';\nimport { IData } from './data-provider';\nimport { getAnglesDistance } from './circle-provider';\n\nexport interface IPointer {\n    id: string;\n    index: number;\n    radius: number;\n    angleDeg: number;\n    prevAngleDeg: number;\n\n    bgColor: string;\n    bgColorSelected: string;\n    bgColorDisabled: string;\n    bgColorHover: string;\n\n    border: number;\n    borderColor: string;\n\n    disabled: boolean;\n    ariaLabel?: string;\n}\n\nexport interface IPointers {\n    pointers: IPointer[];\n    maxRadius: number;\n}\n\nexport const getAngleByMouse = (\n    $svg: SVGSVGElement,\n    clientX: number,\n    clientY: number,\n    cx: number,\n    cy: number,\n    rx: number,\n    ry: number\n) => {\n    const { left, top } = $svg.getBoundingClientRect();\n\n    const relativeMouse: Vector2 = [\n        clientX - left,\n        clientY - top,\n    ];\n\n    const vector = v2Sub(relativeMouse, [ cx, cy ]);\n\n    let angleRad = Math.atan2(vector[1] / ry, vector[0] / rx);\n    if(angleRad < 0){\n        angleRad += 2 * Math.PI;\n    }\n\n    return radiansToDegrees(angleRad);\n};\n\nexport const angle2value = (data: IData, angle: number, pathStartAngle: number, pathEndAngle: number) : string | number => {\n\n    if(pathEndAngle < pathStartAngle) {\n        pathEndAngle += 360;\n    }\n\n    if(angle < pathStartAngle){\n        angle += 360;\n    }\n\n    let value: string|number = convertRange(angle, pathStartAngle, pathEndAngle, data.min, data.max);\n\n    if(data.data.length > 0) {\n        const index = Math.round(value);\n        value = data.data[index];\n    }\n    else{\n        value = setDecimalPlaces(value, data.round);\n    }\n\n    return value;\n};\n\nconst value2angle = (data: IData, value: string | number, pathStartAngle: number, pathEndAngle: number) => {\n    let _value: number;\n\n    if(pathEndAngle < pathStartAngle) {\n        pathEndAngle += 360;\n    }\n\n    if(data.data.length > 0) {\n        const valueIndex = data.data.findIndex(item => item === value);\n        _value = valueIndex === -1 ? 0 : valueIndex;\n    }\n    else{\n        _value = typeof value !== 'number' ? data.min : value;\n    }\n\n    return mod(convertRange(_value, data.min, data.max, pathStartAngle, pathEndAngle), 360);\n};\n\nexport const initPointers = (\n    settings: ISettings,\n    data: IData\n) : IPointer[] => {\n\n    if(!settings || !settings.pointers || settings.pointers.length < 0 || !data) {\n        const angleDeg = mod(getNumber(settings.pathStartAngle, DEFAULT_PATH_START_ANGLE), 360);\n\n        const bgColor = getString(settings.pointerBgColor, DEFAULT_POINTER_BG_COLOR);\n        const bgColorSelected = getString(settings.pointerBgColorSelected, DEFAULT_POINTER_BG_COLOR_SELECTED);\n        const bgColorDisabled = getString(settings.pointerBgColorDisabled, DEFAULT_POINTER_BG_COLOR_DISABLED);\n        const bgColorHover = getString(settings.pointerBgColorHover, bgColorSelected);\n\n        return [{\n            id: '0',\n            index: 0,\n            radius: getNumber(settings.pointerRadius, DEFAULT_POINTER_RADIUS),\n            angleDeg,\n            prevAngleDeg: angleDeg,\n            bgColor,\n            bgColorSelected,\n            bgColorDisabled,\n            bgColorHover,\n            border: getNumber(settings.pointerBorder, DEFAULT_POINTER_BORDER),\n            borderColor: getString(settings.pointerBorderColor, DEFAULT_POINTER_BORDER_COLOR),\n            disabled: !!settings.disabled,\n        }]\n    }\n\n    const pointers: IPointer[] = [];\n\n    for(let i=0; i<settings.pointers.length; i++) {\n        const settingPointer = settings.pointers[i];\n\n        const radius = settingPointer.radius !== undefined ? settingPointer.radius : getNumber(settings.pointerRadius, DEFAULT_POINTER_RADIUS);\n        const bgColor = settingPointer.bgColor ? settingPointer.bgColor : getString(settings.pointerBgColor, DEFAULT_POINTER_BG_COLOR);\n        const bgColorSelected = settingPointer.bgColorSelected ? settingPointer.bgColorSelected : getString(settings.pointerBgColorSelected, DEFAULT_POINTER_BG_COLOR_SELECTED);\n        const bgColorDisabled = settingPointer.bgColorDisabled ? settingPointer.bgColorDisabled : getString(settings.pointerBgColorDisabled, DEFAULT_POINTER_BG_COLOR_DISABLED);\n        const bgColorHover = settingPointer.bgColorHover ? settingPointer.bgColorHover : getString(settings.pointerBgColorHover, bgColorSelected);\n\n        const border = settingPointer.border ? settingPointer.border : getNumber(settings.pointerBorder, DEFAULT_POINTER_BORDER);\n        const borderColor = settingPointer.borderColor ? settingPointer.borderColor : getString(settings.pointerBorderColor, DEFAULT_POINTER_BORDER_COLOR);\n\n        const disabled = settingPointer.disabled !== undefined ? settingPointer.disabled : getBoolean(settings.disabled, false);\n        const pathStartAngle = getNumber(settings.pathStartAngle, DEFAULT_PATH_START_ANGLE);\n        const pathEndAngle = getNumber(settings.pathEndAngle, DEFAULT_PATH_END_ANGLE);\n\n        const angleDeg = value2angle(\n            data,\n            settingPointer.value,\n            pathStartAngle,\n            pathEndAngle,\n        );\n\n        let angleAfterStep = roundToStep(angleDeg, data.stepAngleDeg, pathStartAngle, pathEndAngle);\n\n        if(data.isClosedShape && mod(angleAfterStep, 360) === mod(pathEndAngle, 360)){\n            angleAfterStep = pathStartAngle;\n        }\n\n        pointers.push({\n            id: i.toString(),\n            index: i,\n            radius,\n            angleDeg: angleAfterStep,\n            prevAngleDeg: angleAfterStep,\n\n            bgColor,\n            bgColorSelected,\n            bgColorDisabled,\n            bgColorHover,\n\n            border,\n            borderColor,\n\n            disabled,\n            ariaLabel: settingPointer.ariaLabel,\n        });\n    }\n\n    return pointers;\n};\n\nexport const getPointers = (settings: ISettings, data: IData) : IPointers => {\n\n    const pointers = initPointers(settings, data);\n\n    return {\n        pointers,\n        maxRadius: getMaxRadius(pointers),\n    }\n};\n\nconst getMaxRadius = (pointers: IPointer[]) : number => {\n    if(pointers.length <= 0) return 0;\n\n    let max = -Infinity;\n\n    for(const pointer of pointers){\n        max = Math.max(max, Math.max(0, pointer.radius + pointer.border/2));\n    }\n\n    return max;\n};\n\nexport const getClosestPointer = (\n    pointers: IPointer[],\n    currentPlaceDegrees: number,\n    cx: number,\n    cy: number,\n    pathRadius: number\n) => {\n    if(!pointers || pointers.length <= 0) return null;\n\n    if(pointers.length === 1) return pointers[0];\n\n    const angleRad = convertRange(degreesToRadians(currentPlaceDegrees), 0, Math.PI * 2, 0, Math.PI); // [0, Math.PI*2] ---> [0, Math.PI]\n    const currentPointOnArc = circleMovement([ cx, cy ], angleRad, pathRadius);\n\n    let min: number|undefined = undefined;\n    let closestPointer: IPointer = null;\n\n    const enabledPointers = pointers.filter(p => !p.disabled);\n\n    for(const pointer of enabledPointers) {\n        const pointerAngleRad = convertRange(degreesToRadians(pointer.angleDeg), 0, Math.PI * 2, 0, Math.PI);\n        const pointOnArc = circleMovement([ cx, cy ], pointerAngleRad, pathRadius);\n        const distance = v2Distance(currentPointOnArc, pointOnArc);\n\n        if(min === undefined || distance < min) {\n            min = distance;\n            closestPointer = pointer;\n        }\n    }\n\n    return { ...closestPointer };\n};\n\nexport const getClosestEdge = (\n    startAngleDegrees: number,\n    endAngleDegrees: number,\n    currentPlaceDegrees: number,\n    cx: number,\n    cy: number,\n    pathRadius: number\n) => {\n\n    const angleRad = convertRange(degreesToRadians(currentPlaceDegrees), 0, Math.PI * 2, 0, Math.PI); // [0, Math.PI*2] ---> [0, Math.PI]\n    const currentPointOnArc = circleMovement([ cx, cy ], angleRad, pathRadius);\n\n    const startAngleRad = convertRange(degreesToRadians(startAngleDegrees), 0, Math.PI * 2, 0, Math.PI); // [0, Math.PI*2] ---> [0, Math.PI]\n    const startPointOnArc = circleMovement([ cx, cy ], startAngleRad, pathRadius);\n\n    const endAngleRad = convertRange(degreesToRadians(endAngleDegrees), 0, Math.PI * 2, 0, Math.PI); // [0, Math.PI*2] ---> [0, Math.PI]\n    const endPointOnArc = circleMovement([ cx, cy ], endAngleRad, pathRadius);\n\n    const distance1 = v2Distance(currentPointOnArc, startPointOnArc);\n    const distance2 = v2Distance(currentPointOnArc, endPointOnArc);\n\n    return distance1 <= distance2 ? startAngleDegrees : endAngleDegrees;\n};\n\nexport const getMinMaxDistancePointers = (pointers: IPointer[], pathStartAngle: number) : [IPointer, IPointer] | null => {\n    if(!pointers || pointers.length <= 0) return null;\n\n    let minDistance = undefined;\n    let maxDistance = undefined;\n    let minPointer = null;\n    let maxPointer = null;\n\n    for(const pointer of pointers) {\n\n        const distance = getAnglesDistance(pathStartAngle, pointer.angleDeg);\n\n        if(minDistance === undefined || distance < minDistance) {\n            minPointer = pointer;\n            minDistance = distance;\n        }\n\n        if(maxDistance === undefined || distance > maxDistance) {\n            maxPointer = pointer;\n            maxDistance = distance;\n        }\n    }\n\n    if(minPointer === null || maxPointer === null) return null;\n\n    return [\n        minPointer,\n        maxPointer\n    ];\n};\n\nexport const roundToStep = (angleDeg: number, step: number, pathStartAngle: number, pathEndAngle: number) : number => {\n    if((mod(angleDeg, 360) === mod(pathStartAngle, 360)) ||\n        (mod(angleDeg, 360) === mod(pathEndAngle, 360))) return angleDeg;\n    return step === 0 ? 0 : Math.round(angleDeg / step) * step;\n};\n", "import { angle2value, getAngleByMouse, getClosestEdge, IPointer } from '../domain/pointers-provider';\nimport {\n    useEffect,\n    useState,\n    MouseEvent as ReactMouseEvent,\n    TouchEvent as ReactTouchEvent,\n    KeyboardEvent,\n    useRef, useCallback,\n} from 'react';\nimport { circleMovement, convertRange, degreesToRadians, Vector2 } from 'mz-math';\nimport { ISettings } from '../domain/settings-provider';\nimport { ISvg } from '../domain/svg-provider';\nimport { isAngleInArc } from '../domain/circle-provider';\nimport { IData } from '../domain/data-provider';\nimport { outlineNoneStyle } from '../domain/style-provider';\nimport { DEFAULT_POINTER_BG_COLOR } from '../domain/defaults-provider';\n\nexport interface IPointerProps {\n    settings: ISettings;\n    pointer: IPointer;\n    svg: ISvg;\n    $svg: SVGSVGElement;\n    data: IData;\n    setPointer: (pointer: IPointer, newAngleDeg: number) => void;\n    onDragEnd: (pointer: IPointer) => void;\n    selectedPointerId: string;\n}\n\nconst getPointerFill = (\n    pointer: IPointer,\n    selectedPointerId: string,\n    bgColor: string,\n    bgColorSelected: string,\n    bgColorDisabled: string,\n    bgColorHover: string,\n    isMouseOver: boolean\n) => {\n    if(pointer.disabled) return bgColorDisabled;\n\n    if(isMouseOver) return bgColorHover;\n\n    if(pointer.id === selectedPointerId) {\n        return bgColorSelected;\n    }\n\n    return bgColor;\n};\n\nconst Pointer = (props: IPointerProps) => {\n\n    const pointerRef = useRef<SVGGElement|null>(null);\n\n    const {\n        pointer, svg, $svg, data, settings,\n        setPointer, selectedPointerId,\n    } = props;\n\n    const {\n        radius,\n        angleDeg,\n        bgColor,\n        bgColorSelected,\n        bgColorDisabled,\n        bgColorHover,\n        border,\n        borderColor,\n    } = props.pointer;\n\n    const { cx, cy } = svg;\n\n    const [ center, setCenter ] = useState<Vector2|null>(null);\n    const [ value, setValue ] = useState<string>('');\n    const [ fill, setFill ] = useState(DEFAULT_POINTER_BG_COLOR);\n    const [ isMouseOver, setIsMouseOver ] = useState(false);\n\n    useEffect(() => {\n        setFill(getPointerFill(\n            pointer,\n            selectedPointerId,\n            bgColor,\n            bgColorSelected,\n            bgColorDisabled,\n            bgColorHover,\n            isMouseOver\n        ));\n    }, [\n        pointer,\n        selectedPointerId,\n        bgColor,\n        bgColorSelected,\n        bgColorDisabled,\n        bgColorHover,\n        isMouseOver\n    ]);\n\n    useEffect(() => {\n        const value = angle2value(\n            data,\n            pointer.angleDeg,\n            svg.startAngleDeg,\n            svg.endAngleDeg\n        );\n        setValue(value === undefined ? '' : value.toString())\n    }, [\n        data,\n        pointer.angleDeg,\n        svg.startAngleDeg,\n        svg.endAngleDeg,\n    ]);\n\n    useEffect(() => {\n        const angleRad = convertRange(degreesToRadians(angleDeg), 0, Math.PI * 2, 0, Math.PI); // [0, Math.PI*2] ---> [0, Math.PI]\n        const pointerCenter = circleMovement([cx, cy], angleRad, svg.radius);\n        setCenter(pointerCenter);\n    }, [\n        angleDeg,\n        cx,\n        cy,\n        svg.radius,\n    ]);\n\n    const onValueChange = useCallback((evt: MouseEvent | ReactMouseEvent | TouchEvent | ReactTouchEvent) => {\n        if(!$svg || settings.disabled || pointer.disabled) return;\n\n        const mouseX = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientX : (evt as TouchEvent).touches[0].clientX;\n        const mouseY = evt.type.indexOf('mouse') !== -1 ? (evt as MouseEvent).clientY : (evt as TouchEvent).touches[0].clientY;\n\n        const degrees = getAngleByMouse(\n            $svg,\n            mouseX,\n            mouseY,\n            svg.cx,\n            svg.cy,\n            svg.radius,\n            svg.radius\n        );\n\n        let newAngleDeg;\n\n        if(!isAngleInArc(\n            svg.startAngleDeg,\n            svg.endAngleDeg,\n            degrees\n        )){\n            newAngleDeg = getClosestEdge(\n                svg.startAngleDeg,\n                svg.endAngleDeg,\n                pointer.angleDeg,\n                svg.cx,\n                svg.cy,\n                svg.radius\n            );\n        }\n        else{\n            newAngleDeg = degrees;\n        }\n\n        setPointer(pointer, newAngleDeg);\n    }, [\n        $svg,\n        pointer,\n        setPointer,\n        svg.cx,\n        svg.cy,\n        svg.endAngleDeg,\n        svg.radius,\n        svg.startAngleDeg,\n        settings.disabled,\n    ]);\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onValueChange);\n        window.removeEventListener('mouseup', onValueChange);\n        console.log('onDragEnd');\n    };\n\n    const onMouseDown = (evt: ReactMouseEvent) => {\n        if(settings.disabled || pointer.disabled) return;\n\n        onValueChange(evt);\n\n        window.addEventListener('mousemove', onValueChange);\n        window.addEventListener('mouseup', onMouseUp);\n    };\n\n    const onKeyDown = (evt: KeyboardEvent) => {\n\n        if(settings.disabled || pointer.disabled || settings.keyboardDisabled) return;\n\n        switch (evt.key) {\n            case 'ArrowLeft': {\n                evt.preventDefault();\n                setPointer(pointer, pointer.angleDeg + data.arrowStepAngleDeg);\n                break;\n            }\n\n            case 'ArrowRight': {\n                evt.preventDefault();\n                setPointer(pointer, pointer.angleDeg - data.arrowStepAngleDeg);\n                break;\n            }\n\n            case 'ArrowUp': {\n                evt.preventDefault();\n                setPointer(pointer, pointer.angleDeg - data.arrowStepAngleDeg);\n                break;\n            }\n\n            case 'ArrowDown': {\n                evt.preventDefault();\n                setPointer(pointer, pointer.angleDeg + data.arrowStepAngleDeg);\n                break;\n            }\n        }\n    };\n\n    useEffect(() => {\n        const $current = pointerRef.current;\n\n        const onTouch = (evt: TouchEvent | ReactTouchEvent) => {\n            if(settings.disabled || pointer.disabled) return;\n\n            evt.preventDefault();\n            evt.stopPropagation();\n            onValueChange(evt);\n        };\n\n        const onWheel = (evt: WheelEvent) => {\n\n            if(settings.disabled || pointer.disabled || settings.mousewheelDisabled || document.activeElement !== $current) return;\n\n            evt.stopPropagation();\n            evt.preventDefault();\n\n            const scrollTop = evt.deltaY < 0;\n\n            let newAngleDeg;\n            if(scrollTop) {\n                newAngleDeg = pointer.angleDeg + data.arrowStepAngleDeg;\n            }\n            else{\n                newAngleDeg = pointer.angleDeg - data.arrowStepAngleDeg;\n            }\n\n            setPointer(pointer, newAngleDeg);\n        };\n\n        $current?.addEventListener('touchmove', onTouch, {\n            passive: false,\n        });\n\n        document.addEventListener('wheel', onWheel, {\n            passive: false,\n        });\n\n        return () => {\n            $current?.removeEventListener('touchmove', onTouch);\n            document.removeEventListener('wheel', onWheel);\n        };\n    }, [\n        center,\n        onValueChange,\n        data.arrowStepAngleDeg,\n        pointer,\n        setPointer,\n        settings.disabled,\n        settings.mousewheelDisabled,\n    ]);\n\n    const onMouseOver = () => {\n        setIsMouseOver(true);\n    };\n\n    const onMouseOut = () => {\n        setIsMouseOver(false);\n    };\n\n    return (\n        <>\n            {\n                center &&\n                <g\n                    ref={ pointerRef }\n                    transform={ `translate(${ center[0] - radius/2 }, ${ center[1] - radius/2 })` }\n\n                    role=\"slider\"\n                    aria-disabled={ pointer.disabled ? true : undefined }\n                    aria-valuenow={ pointer.angleDeg }\n                    aria-valuetext={ value }\n                    aria-label={ pointer.ariaLabel }\n\n                    data-type=\"pointer\"\n                    className={ `mz-round-slider-pointer ${ pointer.disabled ? 'mz-round-slider-pointer-disabled' : '' }` }\n                    data-angle={ pointer.angleDeg }\n                    data-id={ pointer.id }\n                    data-index={ pointer.index }\n\n                    onMouseDown={ onMouseDown }\n                    onKeyDown={ onKeyDown }\n                    onMouseOver={ onMouseOver }\n                    onMouseOut={ onMouseOut }\n                    tabIndex={ 0 }\n\n                    cursor={ pointer.disabled ? 'default' : 'pointer' }\n                    style={ outlineNoneStyle }>\n\n                    {\n                        !settings.pointerSVG &&\n                        <circle\n                            cx={ radius/2 }\n                            cy={ radius/2 }\n                            r={ radius }\n                            fill={ fill }\n                            strokeWidth={ border }\n                            stroke={ borderColor }\n                            style={{\n                                transition: '0.3s fill',\n                            }}\n                        />\n                    }\n\n                    {\n                        settings.pointerSVG &&\n                        <g>\n                            { settings.pointerSVG }\n                        </g>\n                    }\n                </g>\n            }\n        </>\n    )\n};\n\nexport default Pointer;", "export const outlineNoneStyle = {\n    outline: 'none',\n};", "import { IPointer, IPointers } from '../domain/pointers-provider';\nimport Pointer from './Pointer';\nimport { ISettings } from '../domain/settings-provider';\nimport { ISvg } from '../domain/svg-provider';\nimport { IData } from '../domain/data-provider';\n\nexport interface IPointersProps {\n    pointers: IPointers;\n    settings: ISettings;\n    svg: ISvg;\n    $svg: SVGSVGElement;\n    data: IData;\n    setPointer: (pointer: IPointer, newAngleDeg: number) => void;\n    onDragEnd: (pointer: IPointer) => void;\n    selectedPointerId: string;\n}\n\nconst Pointers = (props: IPointersProps) => {\n\n    const {\n        pointers, settings, svg, $svg, data,\n        setPointer, selectedPointerId,\n    } = props;\n\n    return (\n        <>\n            {\n                pointers.pointers.map(pointer => {\n                    return (\n                        <Pointer\n                            key={ pointer.id }\n                            pointer={ pointer }\n                            svg={ svg }\n                            settings={ settings }\n                            $svg={ $svg }\n                            data={ data }\n                            setPointer={ setPointer }\n                            onDragEnd={ props.onDragEnd }\n                            selectedPointerId={ selectedPointerId }\n                        />\n                    )\n                })\n            }\n        </>\n    )\n};\n\nexport default Pointers;", "import { ISettings } from './settings-provider';\nimport { getNumber } from './common-provider';\nimport {\n    DEFAULT_ARROW_STEP,\n    DEFAULT_MAX,\n    DEFAULT_MIN,\n    DEFAULT_PATH_END_ANGLE,\n    DEFAULT_PATH_START_ANGLE,\n    DEFAULT_ROUND,\n    DEFAULT_STEP\n} from './defaults-provider';\nimport { mod } from 'mz-math';\n\nexport interface IData {\n    min: number;\n    max: number;\n    stepAngleDeg: number;\n    arrowStepAngleDeg: number;\n    round: number;\n    data: (string | number)[];\n    isClosedShape: boolean;\n}\n\nexport const getData = (setting: ISettings) : IData => {\n\n    let min = getNumber(setting.min, DEFAULT_MIN);\n    let max = getNumber(setting.max, DEFAULT_MAX);\n    const step = getNumber(setting.step, DEFAULT_STEP);\n    const arrowStep = getNumber(setting.arrowStep, DEFAULT_ARROW_STEP);\n    const round = getNumber(setting.round, DEFAULT_ROUND);\n    const data = setting.data || [];\n\n    if(data.length > 0) {\n        const minIndex = data.findIndex(item => item === min);\n        const maxIndex = data.findIndex(item => item === max);\n\n        min = minIndex === -1 ? 0 : minIndex;\n        max = maxIndex === -1 ? data.length : maxIndex;\n    }\n    else{\n        if(min > max) {\n            min = max + DEFAULT_MAX;\n        }\n    }\n\n    const pathStartAngle = getNumber(setting.pathStartAngle, DEFAULT_PATH_START_ANGLE);\n    const pathEndAngle = getNumber(setting.pathEndAngle, DEFAULT_PATH_END_ANGLE);\n    const isClosedShape = mod(pathStartAngle, 360) === mod(pathEndAngle, 360);\n\n    const stepAngleDeg = step * (pathEndAngle - pathStartAngle) / (max - min);\n    const arrowStepAngleDeg = arrowStep * (pathEndAngle - pathStartAngle) / (max - min);\n\n    return {\n        min,\n        max,\n        round,\n        data,\n        stepAngleDeg,\n        arrowStepAngleDeg,\n        isClosedShape,\n    }\n};", "import { ISettings } from '../domain/settings-provider';\nimport { getBoolean, getNumber, getString } from '../domain/common-provider';\nimport {\n    DEFAULT_ANIMATION_DURATION,\n    DEFAULT_CONNECTION_BG_COLOR,\n    DEFAULT_CONNECTION_BG_COLOR_DISABLED\n} from '../domain/defaults-provider';\nimport {\n    getAngleByMouse,\n    getClosestPointer,\n    getMinMaxDistancePointers,\n    IPointer,\n    IPointers\n} from '../domain/pointers-provider';\nimport {\n    MouseEvent as ReactMouseEvent,\n    useCallback,\n    useEffect, useRef,\n    useState\n} from 'react';\nimport { getConnection, IConnection } from '../domain/connection-provider';\nimport { ISvg } from '../domain/svg-provider';\nimport { IData } from '../domain/data-provider';\nimport { animate, IAnimationResult, mod } from 'mz-math';\nimport { getAnimationProgressAngle } from '../domain/animation-provider';\n\ninterface IConnectionProps {\n    settings: ISettings;\n    pointers: IPointers;\n    svg: ISvg;\n    $svg: SVGSVGElement;\n    data: IData;\n    setPointer: (pointer: IPointer, newAngleDeg: number) => void;\n}\n\nconst getStroke = (\n    disabled: boolean,\n    connectionBgColorDisabled: string,\n    connectionBgColor: string,\n    isMouseOver: boolean,\n    connectionBgColorHover: string\n) => {\n    if(disabled) return getString(connectionBgColorDisabled, DEFAULT_CONNECTION_BG_COLOR_DISABLED);\n\n    const bgColor = getString(connectionBgColor, DEFAULT_CONNECTION_BG_COLOR);\n\n    if(isMouseOver) {\n        return getString(connectionBgColorHover, bgColor);\n    }\n\n    return bgColor;\n};\n\nconst Connection = (props: IConnectionProps) => {\n\n    const { settings, pointers, $svg, svg, data, setPointer } = props;\n\n    const [ connection, setConnection ] = useState<IConnection|null>(null);\n    const [ animation, setAnimation ] = useState<IAnimationResult|null>(null);\n    const [ stroke, setStroke ] = useState(DEFAULT_CONNECTION_BG_COLOR);\n    const [ isMouseOver, setIsMouseOver ] = useState(false);\n\n    const rangeDraggingLastAngle = useRef<number>();\n    const animationClosestPointer = useRef<IPointer|null>(null);\n    const animationSourceDegrees = useRef(0);\n    const animationTargetDegrees = useRef(0);\n\n    useEffect(() => {\n        setStroke(getStroke(\n            settings.disabled,\n            settings.connectionBgColorDisabled,\n            settings.connectionBgColor,\n            isMouseOver,\n            settings.connectionBgColorHover\n        ));\n    }, [\n        settings.disabled,\n        settings.connectionBgColorDisabled,\n        settings.connectionBgColor,\n        settings.connectionBgColorHover,\n        isMouseOver,\n    ]);\n\n    useEffect(() => {\n        setConnection(getConnection(\n            pointers,\n            svg.radius,\n            svg.cx,\n            svg.cy,\n            svg.startAngleDeg,\n            svg.endAngleDeg\n        ));\n    }, [\n        pointers,\n        svg.radius,\n        svg.cx,\n        svg.cy,\n        svg.startAngleDeg,\n        svg.endAngleDeg\n    ]);\n\n    const onClick = (evt: ReactMouseEvent) => {\n\n        if(!$svg || settings.disabled || (animation && animation.isAnimating())) return;\n\n        const degrees = getAngleByMouse(\n            $svg,\n            evt.clientX,\n            evt.clientY,\n            svg.cx,\n            svg.cy,\n            svg.radius,\n            svg.radius\n        );\n\n        const closestPointer = getClosestPointer(\n            pointers.pointers,\n            degrees,\n            svg.cx,\n            svg.cy,\n            svg.radius\n        );\n\n        if(!closestPointer) return;\n\n        if(settings.animateOnClick) {\n            animationClosestPointer.current = closestPointer;\n            animationSourceDegrees.current = closestPointer.angleDeg;\n            animationTargetDegrees.current = degrees;\n            animation?.start();\n        }\n        else{\n            setPointer(closestPointer, degrees);\n        }\n    };\n\n    // RANGE DRAGGING -------------------------------------------\n\n    const onValueChange = useCallback((evt: MouseEvent | ReactMouseEvent) => {\n        if(!$svg || settings.disabled || !settings.rangeDragging) return;\n\n        const minMaxResult = getMinMaxDistancePointers(pointers.pointers, svg.startAngleDeg);\n        if(!minMaxResult) return;\n\n        const [ minPointer, maxPointer ] = minMaxResult;\n\n        const mouseDegrees = getAngleByMouse(\n            $svg,\n            evt.clientX,\n            evt.clientY,\n            svg.cx,\n            svg.cy,\n            svg.radius,\n            svg.radius\n        );\n\n        if(rangeDraggingLastAngle.current === undefined) {\n            rangeDraggingLastAngle.current = mouseDegrees;\n            return;\n        }\n\n        const diff = (mouseDegrees - rangeDraggingLastAngle.current);\n        if(diff === 0 || Math.abs(diff) < data.stepAngleDeg) return;\n\n        setPointer(minPointer, mod(minPointer.angleDeg + diff, 360));\n        setPointer(maxPointer, mod(maxPointer.angleDeg + diff, 360));\n\n        rangeDraggingLastAngle.current = mouseDegrees;\n    }, [\n        $svg,\n        svg.cx,\n        svg.cy,\n        svg.radius,\n        data.stepAngleDeg,\n        pointers.pointers,\n        setPointer,\n        settings.disabled,\n        settings.rangeDragging,\n        svg.startAngleDeg,\n    ]);\n\n    const onMouseUp = () => {\n        window.removeEventListener('mousemove', onValueChange);\n        window.removeEventListener('mouseup', onValueChange);\n\n        rangeDraggingLastAngle.current = undefined;\n    };\n\n    const onMouseDown = (evt: ReactMouseEvent) => {\n        if(!settings.rangeDragging || settings.disabled || pointers.pointers.length <= 1) return;\n\n        onValueChange(evt);\n\n        window.addEventListener('mousemove', onValueChange);\n        window.addEventListener('mouseup', onMouseUp);\n    };\n\n    // ANIMATE ON CLICK -------------------------------------------\n    useEffect(() => {\n        if(animation) {\n            animation.stop();\n        }\n\n        if(!settings.animateOnClick) {\n            setAnimation(null);\n            return;\n        }\n\n        const _animation = animate({\n            callback: (progress) => {\n                if(!animationClosestPointer.current) return;\n                const currentDegrees = getAnimationProgressAngle(\n                    progress,\n                    animationSourceDegrees.current,\n                    animationTargetDegrees.current,\n                    svg.startAngleDeg\n                );\n                setPointer(animationClosestPointer.current, currentDegrees);\n            },\n            duration: getNumber(settings.animationDuration, DEFAULT_ANIMATION_DURATION),\n        });\n\n        setAnimation(_animation);\n\n    },\n        // eslint-disable-next-line\n        [\n        settings.animateOnClick,\n        settings.animationDuration,\n    ]);\n\n    const onMouseOver = () => {\n        setIsMouseOver(true);\n    };\n\n    const onMouseOut = () => {\n        setIsMouseOver(false);\n    };\n\n    return (\n        <>\n            {\n                !getBoolean(settings.hideConnection, false) && connection &&\n                <circle\n                    data-type=\"connection\"\n                    className=\"mz-round-slider-connection\"\n\n                    cx={ connection.cx }\n                    cy={ connection.cy }\n                    r={ connection.radius }\n\n                    strokeDasharray={ connection.strokeDasharray.join(' ') }\n                    strokeDashoffset={ connection.strokeOffset }\n                    stroke={ stroke }\n                    strokeWidth={ svg.thickness + 1 }\n\n                    fill=\"none\"\n                    shapeRendering=\"geometricPrecision\"\n                    strokeLinecap=\"round\"\n                    cursor={ settings.disabled ? 'default' : 'pointer' }\n\n                    onClick={ onClick }\n                    onMouseDown={ onMouseDown }\n                    onMouseOver={ onMouseOver }\n                    onMouseOut={ onMouseOut }\n\n                    style={{\n                        transition: '0.2s stroke',\n                    }}\n                />\n            }\n        </>\n    )\n};\n\nexport default Connection;", "import { IPointers } from './pointers-provider';\nimport { getAnglesDistance } from './circle-provider';\n\nexport interface IConnection {\n    radius: number;\n    cx: number;\n    cy: number;\n\n    // calculated properties ---------\n    startAngleDeg: number;\n    endAngleDeg: number;\n    strokeDasharray: number[];\n    strokeOffset: number;\n}\n\nexport const getConnection = (\n    pointers: IPointers,\n    radius: number,\n    cx: number,\n    cy: number,\n    pathStartAngle: number,\n    pathEndAngle: number,\n) : IConnection => {\n\n    if(!pointers.pointers || pointers.pointers.length <= 0) return null;\n\n    const result : IConnection = {\n        radius,\n        cx,\n        cy,\n\n        // calculated properties ---------\n        startAngleDeg: pathStartAngle,\n        endAngleDeg: pathStartAngle,\n        strokeDasharray: [0, 0],\n        strokeOffset: 0,\n    };\n\n    // Define start/end angles.\n    if(pointers.pointers.length === 1) {\n        result.startAngleDeg = pathStartAngle;\n        result.endAngleDeg = pointers.pointers[0].angleDeg;\n    }\n    else{\n        result.startAngleDeg = pointers.pointers[0].angleDeg;\n        result.endAngleDeg = pointers.pointers[pointers.pointers.length - 1].angleDeg;\n\n        /*const minMaxResult = getMinMaxDistancePointers(pointers.pointers, pathStartAngle);\n        if(!minMaxResult) return null;\n\n        const [ minPointer, maxPointer ] = minMaxResult;\n\n        result.startAngleDeg = minPointer.angleDeg;\n        result.endAngleDeg = maxPointer.angleDeg;*/\n    }\n\n    const pathAnglesDistance = getAnglesDistance(pathStartAngle, pathEndAngle);\n\n    if(result.startAngleDeg > result.endAngleDeg) {\n        result.endAngleDeg += 360;\n    }\n\n    let angleDistance = getAnglesDistance(result.startAngleDeg, result.endAngleDeg);\n\n    const shouldSwitch = angleDistance > pathAnglesDistance;\n\n    if(shouldSwitch) {\n        angleDistance = 360 - angleDistance;\n        [result.startAngleDeg, result.endAngleDeg] = [result.endAngleDeg, result.startAngleDeg];\n    }\n\n    const circumference = 2 * Math.PI * radius;\n    const strokeOffset = -(result.startAngleDeg / 360) * circumference;\n    const strokeDasharray = (angleDistance / 360) * circumference;\n    const complement = circumference - strokeDasharray;\n\n    result.strokeDasharray = [ strokeDasharray, complement ];\n    result.strokeOffset = strokeOffset;\n\n    return result;\n};", "import { IAnimationResult, mod } from 'mz-math';\n\nexport const getAnimationProgressAngle = (\n    progress: IAnimationResult,\n    animationSourceDegrees: number,\n    animationTargetDegrees: number,\n    startPathAngleDeg: number\n) => {\n    let percent = progress.getPercent();\n\n    if(percent < 0) {\n        percent = 0;\n    }\n\n    if(percent > 100) {\n        percent = 100;\n    }\n\n    let angle1 = animationSourceDegrees % 360;\n    let angle2 = animationTargetDegrees % 360;\n\n    if(angle1 < startPathAngleDeg) {\n        angle1 += 360;\n    }\n\n    if(angle2 < startPathAngleDeg) {\n        angle2 += 360;\n    }\n\n    const isClockwise = angle2 > angle1;\n\n    if(isClockwise) {\n        const clockwiseDistance = (angle2 - angle1 + 360) % 360;\n        return mod(animationSourceDegrees + (percent * clockwiseDistance / 100), 360);\n    }\n    else {\n        const counterclockwiseDistance = (angle1 - angle2 + 360) % 360;\n        return mod(animationSourceDegrees - (percent * counterclockwiseDistance / 100), 360);\n    }\n};", "import { ISettings } from '../domain/settings-provider';\nimport { angle2value, IPointers } from '../domain/pointers-provider';\nimport { getBoolean, getNumber, getString } from '../domain/common-provider';\nimport {\n    DEFAULT_TEXT_COLOR,\n    DEFAULT_TEXT_FONT_SIZE\n} from '../domain/defaults-provider';\nimport { useEffect, useState } from 'react';\nimport { ISvg } from '../domain/svg-provider';\nimport { IData } from '../domain/data-provider';\n\ninterface ITextProps {\n    settings: ISettings;\n    pointers: IPointers;\n    svg: ISvg;\n    data: IData;\n}\n\nconst Text = (props: ITextProps) => {\n\n    const { settings, pointers, svg, data } = props;\n\n    const { cx, cy } = svg;\n    const [ value, setValue ] = useState('');\n\n    useEffect(() => {\n\n        const values = pointers.pointers.map(pointer => angle2value(\n            data,\n            pointer.angleDeg,\n            svg.startAngleDeg,\n            svg.endAngleDeg\n        ));\n\n        values.sort((value1, value2) => {\n            return value1.toString().localeCompare(\n                value2.toString(),\n                'en',\n                { numeric: true }\n            );\n        });\n\n        const texts = values.map(value => `${ settings.textPrefix || '' }${ value }${ settings.textSuffix || '' }`);\n\n        const textBetween = getString(settings.textBetween, ' ');\n        setValue(texts.join(textBetween));\n\n    }, [\n        data,\n        pointers.pointers,\n        svg.startAngleDeg,\n        svg.endAngleDeg,\n        settings.textPrefix,\n        settings.textSuffix,\n        settings.textBetween,\n    ]);\n\n    const hideText = getBoolean(settings.hideText, false);\n\n    return (\n        <>\n            {\n                !hideText &&\n                <text\n                    data-type=\"text\"\n                    className=\"mz-round-slider-text\"\n\n                    x={ cx + getNumber(settings.textOffsetX, 0) }\n                    y={ cy + getNumber(settings.textOffsetY, 0) }\n\n                    fill={ getString(settings.textColor, DEFAULT_TEXT_COLOR) }\n                    fontSize={ getNumber(settings.textFontSize, DEFAULT_TEXT_FONT_SIZE) }\n                    fontFamily={ settings.textFontFamily }\n\n                    style={{\n                        userSelect: 'none',\n                        whiteSpace: 'pre',\n                    }}\n\n                    textAnchor=\"middle\">\n\n                    { value }\n\n                </text>\n            }\n        </>\n    )\n};\n\nexport default Text;", "import { useEffect, useState, Fragment } from 'react';\nimport { getTicks, getTicksSettings, ITick, ITicks } from '../domain/ticks-provider';\nimport { ISettings } from '../domain/settings-provider';\nimport { ISvg } from '../domain/svg-provider';\nimport { IData } from '../domain/data-provider';\n\ninterface ITicksProps {\n    settings: ISettings;\n    svg: ISvg;\n    data: IData;\n}\n\nconst Ticks = (props: ITicksProps) => {\n\n    const { settings, svg, data } = props;\n\n    const [ ticksSettings, setTicksSettings ] = useState<ITicks|null>(null);\n    const [ ticks, setTicks ] = useState<ITick[]>([]);\n\n    useEffect(() => {\n       setTicksSettings(getTicksSettings(settings, data));\n    }, [\n        settings,\n        data,\n    ]);\n\n    useEffect(() => {\n        if(!ticksSettings) return;\n\n        let endAngleDeg = svg.endAngleDeg;\n        if(endAngleDeg < svg.startAngleDeg) {\n            endAngleDeg += 360;\n        }\n\n        setTicks(getTicks(\n            ticksSettings,\n            ticksSettings.ticksCount,\n            svg.startAngleDeg,\n            endAngleDeg,\n            svg,\n            data\n        ));\n    }, [\n        data,\n        svg,\n        ticksSettings,\n    ]);\n\n    return (\n        <>\n            {\n                ticksSettings && ticksSettings.enableTicks &&\n                <g>\n                    {\n                        ticks.map((tick, i) => {\n                            const { x, y, x1, y1, textX, textY, showText } = tick;\n\n                            return (\n                                <Fragment key={ i }>\n                                    <line\n                                        x1={ x }\n                                        y1={ y }\n                                        x2={ x1 }\n                                        y2={ y1 }\n                                        strokeWidth={ ticksSettings.ticksWidth }\n                                        stroke={ ticksSettings.ticksColor }\n\n                                        data-type=\"tick\"\n                                        className=\"mz-round-slider-tick\"\n                                    />\n\n                                    {\n                                        showText &&\n                                        <text\n                                            data-type=\"tick-text\"\n                                            className=\"mz-round-slider-tick-text\"\n\n                                            x={ textX }\n                                            y={ textY }\n                                            textAnchor=\"middle\"\n                                            dominantBaseline=\"middle\"\n                                            fill={ ticksSettings.tickValuesColor }\n                                            fontSize={ ticksSettings.tickValuesFontSize }\n                                            fontFamily={ settings.tickValuesFontFamily }\n                                            style={{\n                                                userSelect: 'none',\n                                                whiteSpace: 'pre',\n                                            }}>\n                                            { settings.tickValuesPrefix }{ tick.tickValue }{ settings.tickValuesSuffix }\n                                        </text>\n                                    }\n                                </Fragment>\n                            );\n                        })\n                    }\n                </g>\n            }\n        </>\n    )\n};\n\nexport default Ticks;", "import {\n    circleMovement,\n    convertRange,\n    degreesToRadians,\n    setDecimalPlaces,\n    v2MulScalar,\n    v2Normalize\n} from 'mz-math';\nimport { ISvg } from './svg-provider';\nimport { IData } from './data-provider';\nimport { ISettings } from './settings-provider';\nimport { getBoolean, getNumber, getString } from './common-provider';\nimport {\n    DEFAULT_TICKS_COLOR, DEFAULT_TICKS_ENABLED, DEFAULT_TICKS_GROUP_SIZE,\n    DEFAULT_TICKS_HEIGHT, DEFAULT_TICKS_VALUES_COLOR,\n    DEFAULT_TICKS_VALUES_DISTANCE, DEFAULT_TICKS_VALUES_FONT_SIZE,\n    DEFAULT_TICKS_WIDTH\n} from './defaults-provider';\n\nexport interface ITicks {\n    ticksCount: number;\n    enableTicks: boolean;\n    ticksWidth: number;\n    ticksHeight: number;\n    longerTicksHeight: number;\n    ticksDistanceToPanel: number;\n    tickValuesDistance: number;\n    ticksColor: string;\n    tickValuesColor: string;\n    tickValuesFontSize: number;\n    ticksGroupSize: number;\n    longerTickValuesOnly: boolean;\n    showTickValues: boolean;\n}\n\nexport interface ITick {\n    x: number;\n    y: number;\n    x1: number;\n    y1: number;\n    textX: number;\n    textY: number;\n    isLonger: boolean;\n    showText: boolean;\n    tickValue?: string;\n}\n\nexport const getTicksSettings = (settings: ISettings, data: IData) : ITicks => {\n\n    let ticksCount = getNumber(settings.ticksCount, 0);\n    if(!ticksCount) {\n        if(data.data && data.data.length > 0) {\n            ticksCount = data.data.length;\n        }\n        else{\n            ticksCount = data.max;\n        }\n    }\n\n    const ticksHeight = getNumber(settings.ticksHeight, DEFAULT_TICKS_HEIGHT);\n\n    return {\n        ticksCount,\n        enableTicks: getBoolean(settings.enableTicks, DEFAULT_TICKS_ENABLED),\n        ticksWidth: getNumber(settings.ticksWidth, DEFAULT_TICKS_WIDTH),\n        ticksHeight,\n        longerTicksHeight: getNumber(settings.longerTicksHeight, ticksHeight * 2),\n        ticksDistanceToPanel: getNumber(settings.ticksDistanceToPanel, 0),\n        tickValuesDistance: getNumber(settings.tickValuesDistance, DEFAULT_TICKS_VALUES_DISTANCE),\n        ticksColor: getString(settings.ticksColor, DEFAULT_TICKS_COLOR),\n        tickValuesColor: getString(settings.tickValuesColor, DEFAULT_TICKS_VALUES_COLOR),\n        tickValuesFontSize: getNumber(settings.tickValuesFontSize, DEFAULT_TICKS_VALUES_FONT_SIZE),\n        ticksGroupSize: getNumber(settings.ticksGroupSize, DEFAULT_TICKS_GROUP_SIZE),\n        longerTickValuesOnly: getBoolean(settings.longerTickValuesOnly, true),\n        showTickValues: getBoolean(settings.showTickValues, true),\n    };\n};\n\nexport const getTicks = (\n    ticksSettings: ITicks,\n    ticksCount: number,\n    pathStartAngle: number,\n    pathEndAngle: number,\n    svg: ISvg,\n    data: IData\n) : ITick[] => {\n\n    const ticks: ITick[] = [];\n\n    const deltaAngle = Math.abs(pathEndAngle - pathStartAngle);\n    const oneTickAngleSize = ticksCount === 0 ? 0 : deltaAngle / ticksCount;\n\n    let count = ticksCount;\n    if(!data.isClosedShape) {\n        count++;\n    }\n\n    for(let i=0; i<count; i++) {\n        const currentAngle = pathStartAngle + i * oneTickAngleSize;\n        const angleRad = convertRange(degreesToRadians(currentAngle), 0, Math.PI * 2, 0, Math.PI); // [0, Math.PI*2] ---> [0, Math.PI]\n\n        let [x, y] = circleMovement([svg.cx, svg.cy], angleRad, svg.radius);\n\n        const isLonger = ticksSettings.ticksGroupSize !== undefined && (i % ticksSettings.ticksGroupSize === 0 );\n\n        let desiredDistance = ticksSettings.ticksHeight;\n\n        if(isLonger) {\n            desiredDistance = ticksSettings.longerTicksHeight;\n        }\n\n        const normalizedDirectionVector = v2Normalize([svg.cx - x, svg.cy - y]);\n        const tickEndVector = v2MulScalar(normalizedDirectionVector, desiredDistance);\n\n        const tickStartVector = v2MulScalar(normalizedDirectionVector, ticksSettings.ticksDistanceToPanel + svg.thickness/2);\n        x += tickStartVector[0];\n        y += tickStartVector[1];\n\n        const x1 = x + tickEndVector[0];\n        const y1 = y + tickEndVector[1];\n\n        // ------- Define tick value. ---------------------\n        let tickValue: string|undefined = undefined;\n        if(ticksSettings.showTickValues && (!ticksSettings.longerTickValuesOnly || ticksSettings.longerTickValuesOnly && (isLonger || ticksSettings.ticksGroupSize === undefined))) {\n\n            let value: string|number = convertRange(i, 0, ticksCount, data.min, data.max);\n\n            if(data.data.length > 0) {\n                const index = Math.round(value);\n                value = data.data[index];\n            }\n            else{\n                value = setDecimalPlaces(value, data.round);\n            }\n\n            tickValue = (value ?? '').toString();\n        }\n\n        let textX = 0;\n        let textY = 0;\n        const showText = tickValue !== undefined;\n\n        if(showText) {\n            const _tickValuesDistance = getNumber(desiredDistance + ticksSettings.tickValuesDistance, desiredDistance * 1.5);\n            const tickTextVector = v2MulScalar(normalizedDirectionVector, _tickValuesDistance);\n            textX = x + tickTextVector[0];\n            textY = y + tickTextVector[1];\n        }\n\n        ticks.push({\n            x,\n            y,\n            x1,\n            y1,\n            textX,\n            textY,\n            isLonger,\n            tickValue,\n            showText,\n        });\n    }\n\n    return ticks;\n};", "import { useEffect, useState, MouseEvent, useRef } from 'react';\nimport { getCircle, ICircle } from '../domain/circle-provider';\nimport { getNumber, getString } from '../domain/common-provider';\nimport { ISettings } from '../domain/settings-provider';\nimport {\n    DEFAULT_ANIMATION_DURATION,\n    DEFAULT_PATH_BG_COLOR,\n    DEFAULT_PATH_BORDER_COLOR,\n} from '../domain/defaults-provider';\nimport { ISvg } from '../domain/svg-provider';\nimport { getAngleByMouse, getClosestPointer, IPointer, IPointers } from '../domain/pointers-provider';\nimport { animate, IAnimationResult, newId } from 'mz-math';\nimport { getAnimationProgressAngle } from '../domain/animation-provider';\nimport InnerCircle from './InnerCircle';\n\ninterface ICircleProps {\n    settings: ISettings;\n    pointers: IPointers;\n    svg: ISvg;\n    $svg: SVGSVGElement;\n    setPointer: (pointer: IPointer, newAngleDeg: number) => void;\n}\n\nconst Circle = (props: ICircleProps) => {\n\n    const { settings, pointers, $svg, svg, setPointer } = props;\n\n    const [ animation, setAnimation ] = useState<IAnimationResult|null>(null);\n    const [ maskId ] = useState(newId());\n    const [ circle, setCircle ] = useState<ICircle>({\n        strokeDasharray: '0 1000000',\n        strokeOffset: 0,\n    });\n\n    const animationClosestPointer = useRef<IPointer|null>(null);\n    const animationSourceDegrees = useRef(0);\n    const animationTargetDegrees = useRef(0);\n\n    useEffect(() => {\n        setCircle(getCircle(\n            svg.startAngleDeg,\n            svg.endAngleDeg,\n            svg.radius\n        ));\n    }, [\n        svg.startAngleDeg,\n        svg.endAngleDeg,\n        svg.radius,\n    ]);\n\n    const onClick = (evt: MouseEvent) => {\n        if(!$svg || settings.disabled || (animation && animation.isAnimating())) return;\n\n        const degrees = getAngleByMouse(\n            $svg,\n            evt.clientX,\n            evt.clientY,\n            svg.cx,\n            svg.cy,\n            svg.radius,\n            svg.radius\n        );\n\n        const closestPointer = getClosestPointer(\n            pointers.pointers,\n            degrees,\n            svg.cx,\n            svg.cy,\n            svg.radius\n        );\n\n        if(!closestPointer) return;\n\n        if(settings.animateOnClick) {\n            animationClosestPointer.current = closestPointer;\n            animationSourceDegrees.current = closestPointer.angleDeg;\n            animationTargetDegrees.current = degrees;\n            animation?.start();\n        }\n        else{\n            setPointer(closestPointer, degrees);\n        }\n    };\n\n    // ANIMATE ON CLICK -------------------------------------------\n    useEffect(() => {\n        if(animation) {\n            animation.stop();\n        }\n\n        if(!settings.animateOnClick) {\n            setAnimation(null);\n            return;\n        }\n\n        const _animation = animate({\n            callback: (progress) => {\n                if(!animationClosestPointer.current) return;\n                const currentDegrees = getAnimationProgressAngle(\n                    progress,\n                    animationSourceDegrees.current,\n                    animationTargetDegrees.current,\n                    svg.startAngleDeg\n                );\n                setPointer(animationClosestPointer.current, currentDegrees);\n            },\n            duration: getNumber(settings.animationDuration, DEFAULT_ANIMATION_DURATION),\n        });\n\n        setAnimation(_animation);\n    },\n        // eslint-disable-next-line\n        [\n        settings.animateOnClick,\n        settings.animationDuration,\n    ]);\n\n    return (\n        <g onClick={ onClick }>\n\n            {\n                settings.pathInnerBgColor &&\n                <InnerCircle\n                    maskId={ maskId }\n                    settings={ settings }\n                    svg={ svg }\n                    circle={ circle }\n                />\n            }\n\n            {\n                svg.border > 0 &&\n                <circle\n                    strokeDasharray={ circle.strokeDasharray }\n                    strokeDashoffset={ circle.strokeOffset }\n                    cx={ svg.cx }\n                    cy={ svg.cy }\n                    r={ svg.radius }\n                    stroke={ getString(settings.pathBorderColor, DEFAULT_PATH_BORDER_COLOR) }\n                    strokeWidth={ svg.thickness + svg.border * 2 }\n                    fill=\"none\"\n                    shapeRendering=\"geometricPrecision\"\n                    strokeLinecap=\"round\"\n                    cursor=\"pointer\"\n                    data-type=\"path-border\"\n                    className=\"mz-round-slider-path-border\"\n                />\n            }\n\n            <circle\n                strokeDasharray={ circle.strokeDasharray }\n                strokeDashoffset={ circle.strokeOffset }\n                cx={ svg.cx }\n                cy={ svg.cy }\n                r={ svg.radius }\n                stroke={ getString(settings.pathBgColor, DEFAULT_PATH_BG_COLOR) }\n                strokeWidth={ svg.thickness }\n                fill=\"none\"\n                shapeRendering=\"geometricPrecision\"\n                strokeLinecap=\"round\"\n                cursor=\"pointer\"\n                data-type=\"path\"\n                className=\"mz-round-slider-path\"\n            />\n        </g>\n    )\n};\n\nexport default Circle;\n", "import { ISvg } from '../domain/svg-provider';\nimport { ISettings } from '../domain/settings-provider';\nimport { ICircle } from '../domain/circle-provider';\nimport { useEffect, useState } from 'react';\nimport { circleMovement, convertRange, degreesToRadians, mod, Vector2 } from 'mz-math';\nimport { getBoolean } from '../domain/common-provider';\n\ninterface IInnerCircleProps {\n    maskId: string;\n    settings: ISettings;\n    svg: ISvg;\n    circle: ICircle;\n}\n\nconst InnerCircle = (props: IInnerCircleProps) => {\n\n    const { svg, maskId, settings, circle } = props;\n\n    const [ startPoint, setStartPoint ] = useState<Vector2>([0, 0]);\n    const [ endPoint, setEndPoint ] = useState<Vector2>([0, 0]);\n    const [ largeArcFlag, setLargeArcFlag ] = useState(0);\n    const [ pathInnerBgFull, setPathInnerBgFull] = useState(false);\n\n    useEffect(() => {\n        if(mod(svg.startAngleDeg, 360) === mod(svg.endAngleDeg, 360)) {\n            setPathInnerBgFull(true);\n            return;\n        }\n\n        setPathInnerBgFull(getBoolean(settings.pathInnerBgFull, false));\n    }, [\n        settings.pathInnerBgFull,\n        svg.startAngleDeg,\n        svg.endAngleDeg,\n    ]);\n\n    useEffect(() => {\n        const startAngleDeg = convertRange(svg.startAngleDeg, 0, Math.PI*2, 0, Math.PI);\n        setStartPoint(circleMovement([svg.cx, svg.cy], degreesToRadians(startAngleDeg), svg.radius));\n\n        const endAngleDeg = convertRange(svg.endAngleDeg, 0, Math.PI*2, 0, Math.PI);\n        setEndPoint(circleMovement([svg.cx, svg.cy], degreesToRadians(endAngleDeg), svg.radius));\n\n        const largeArcFlag = svg.endAngleDeg - svg.startAngleDeg <= 180 ? 1 : 0;\n        setLargeArcFlag(largeArcFlag);\n    }, [\n        svg.cx,\n        svg.cy,\n        svg.endAngleDeg,\n        svg.radius,\n        svg.startAngleDeg,\n    ]);\n\n    return (\n        <>\n            {\n                !pathInnerBgFull &&\n                <mask id={ maskId }>\n                    <path\n                        fill=\"black\"\n                        d={ `M ${ startPoint[0] } ${ startPoint[1] } A ${ svg.radius } ${ svg.radius } 1 ${ largeArcFlag } 0 ${ endPoint[0] } ${ endPoint[1] }` }\n                    />\n                    <path\n                        fill=\"white\"\n                        d={ `M ${ startPoint[0] } ${ startPoint[1] } A ${ svg.radius } ${ svg.radius } 0 ${ largeArcFlag === 1 ? 0 : 1 } 1 ${ endPoint[0] } ${ endPoint[1] }` }\n                    />\n                </mask>\n            }\n\n            <circle\n                strokeDasharray={ circle.strokeDasharray }\n                strokeDashoffset={ circle.strokeOffset }\n                cx={ svg.cx }\n                cy={ svg.cy }\n                r={ svg.radius }\n                stroke={ 'transparent' }\n                strokeWidth={ svg.thickness }\n                fill={ settings.pathInnerBgColor }\n                shapeRendering=\"geometricPrecision\"\n                strokeLinecap=\"round\"\n                data-type=\"path-inner\"\n                className=\"mz-round-slider-path-inner\"\n                mask={ pathInnerBgFull ? '' : `url(#${ maskId })`}\n            />\n        </>\n    )\n};\n\nexport default InnerCircle;"],
  "mappings": "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",
  "names": ["require_react_development", "__commonJSMin", "exports", "module", "ReactVersion", "REACT_ELEMENT_TYPE", "REACT_PORTAL_TYPE", "REACT_FRAGMENT_TYPE", "REACT_STRICT_MODE_TYPE", "REACT_PROFILER_TYPE", "REACT_PROVIDER_TYPE", "REACT_CONTEXT_TYPE", "REACT_FORWARD_REF_TYPE", "REACT_SUSPENSE_TYPE", "REACT_SUSPENSE_LIST_TYPE", "REACT_MEMO_TYPE", "REACT_LAZY_TYPE", "REACT_OFFSCREEN_TYPE", "MAYBE_ITERATOR_SYMBOL", "FAUX_ITERATOR_SYMBOL", "getIteratorFn", "maybeIterable", "maybeIterator", "ReactCurrentDispatcher", "ReactCurrentBatchConfig", "ReactCurrentActQueue", "ReactCurrentOwner", "ReactDebugCurrentFrame", "currentExtraStackFrame", "setExtraStackFrame", "stack", "impl", "enableScopeAPI", "enableCacheElement", "enableTransitionTracing", "enableLegacyHidden", "enableDebugTracing", "ReactSharedInternals", "warn", "format", "_len", "args", "_key", "printWarning", "error", "_len2", "_key2", "level", "argsWithFormat", "item", "didWarnStateUpdateForUnmountedComponent", "warnNoop", "publicInstance", "callerName", "_constructor", "componentName", "warningKey", "ReactNoopUpdateQueue", "callback", "completeState", "partialState", "assign", "emptyObject", "Component", "props", "context", "updater", "deprecatedAPIs", "defineDeprecationWarning", "methodName", "info", "fnName", "ComponentDummy", "PureComponent", "pureComponentPrototype", "createRef", "refObject", "isArrayImpl", "isArray", "a", "typeName", "value", "hasToStringTag", "type", "willCoercionThrow", "testStringCoercion", "e", "checkKeyStringCoercion", "getWrappedName", "outerType", "innerType", "wrapperName", "displayName", "functionName", "getContextName", "getComponentNameFromType", "provider", "outerName", "lazyComponent", "payload", "init", "x", "hasOwnProperty", "RESERVED_PROPS", "specialPropKeyWarningShown", "specialPropRefWarningShown", "didWarnAboutStringRefs", "hasValidRef", "config", "getter", "hasValidKey", "defineKeyPropWarningGetter", "warnAboutAccessingKey", "defineRefPropWarningGetter", "warnAboutAccessingRef", "warnIfStringRefCannotBeAutoConverted", "ReactElement", "key", "ref", "self", "source", "owner", "element", "createElement", "children", "propName", "childrenLength", "childArray", "i", "defaultProps", "cloneAndReplaceKey", "oldElement", "newKey", "newElement", "cloneElement", "isValidElement", "object", "SEPARATOR", "SUBSEPARATOR", "escape", "escapeRegex", "escaperLookup", "escapedString", "match", "didWarnAboutMaps", "userProvidedKeyEscapeRegex", "escapeUserProvidedKey", "text", "getElementKey", "index", "mapIntoArray", "array", "escapedPrefix", "nameSoFar", "invokeCallback", "_child", "mappedChild", "childKey", "escapedChildKey", "c", "child", "nextName", "subtreeCount", "nextNamePrefix", "iteratorFn", "iterableChildren", "iterator", "step", "ii", "childrenString", "mapChildren", "func", "result", "count", "countChildren", "n", "forEachChildren", "forEachFunc", "forEachContext", "toArray", "onlyChild", "createContext", "defaultValue", "hasWarnedAboutUsingNestedContextConsumers", "hasWarnedAboutUsingConsumerProvider", "hasWarnedAboutDisplayNameOnConsumer", "Consumer", "_Provider", "_currentValue", "_currentValue2", "_threadCount", "Uninitialized", "Pending", "Resolved", "Rejected", "lazyInitializer", "ctor", "thenable", "moduleObject", "resolved", "rejected", "pending", "lazy", "lazyType", "propTypes", "newDefaultProps", "newPropTypes", "forwardRef", "render", "elementType", "ownName", "name", "REACT_MODULE_REFERENCE", "isValidElementType", "memo", "compare", "resolveDispatcher", "dispatcher", "useContext", "Context", "realContext", "useState", "initialState", "useReducer", "reducer", "initialArg", "useRef", "initialValue", "useEffect", "create", "deps", "useInsertionEffect", "useLayoutEffect", "useCallback", "useMemo", "useImperativeHandle", "useDebugValue", "formatterFn", "useTransition", "useDeferredValue", "useId", "useSyncExternalStore", "subscribe", "getSnapshot", "getServerSnapshot", "disabledDepth", "prevLog", "prevInfo", "prevWarn", "prevError", "prevGroup", "prevGroupCollapsed", "prevGroupEnd", "disabledLog", "disableLogs", "reenableLogs", "ReactCurrentDispatcher$1", "prefix", "describeBuiltInComponentFrame", "ownerFn", "reentry", "componentFrameCache", "PossiblyWeakMap", "describeNativeComponentFrame", "fn", "construct", "frame", "control", "previousPrepareStackTrace", "previousDispatcher", "Fake", "sample", "sampleLines", "controlLines", "s", "_frame", "syntheticFrame", "describeFunctionComponentFrame", "shouldConstruct", "prototype", "describeUnknownElementTypeFrameInDEV", "loggedTypeFailures", "ReactDebugCurrentFrame$1", "setCurrentlyValidatingElement", "checkPropTypes", "typeSpecs", "values", "location", "has", "typeSpecName", "error$1", "err", "ex", "setCurrentlyValidatingElement$1", "propTypesMisspellWarningShown", "getDeclarationErrorAddendum", "getSourceInfoErrorAddendum", "fileName", "lineNumber", "getSourceInfoErrorAddendumForProps", "elementProps", "ownerHasKeyUseWarning", "getCurrentComponentErrorInfo", "parentType", "parentName", "validateExplicitKey", "currentComponentErrorInfo", "childOwner", "validateChildKeys", "node", "validatePropTypes", "_name", "validateFragmentProps", "fragment", "keys", "createElementWithValidation", "validType", "sourceInfo", "typeString", "didWarnAboutDeprecatedCreateFactory", "createFactoryWithValidation", "validatedFactory", "cloneElementWithValidation", "startTransition", "scope", "options", "prevTransition", "currentTransition", "updatedFibersCount", "didWarnAboutMessageChannel", "enqueueTaskImpl", "enqueueTask", "task", "requireString", "nodeRequire", "_err", "channel", "actScopeDepth", "didWarnNoAwaitAct", "act", "prevActScopeDepth", "prevIsBatchingLegacy", "queue", "flushActQueue", "popActScope", "thenableResult", "wasAwaited", "resolve", "reject", "returnValue", "recursivelyFlushAsyncActWork", "_queue", "_thenable", "_thenable2", "isFlushing", "createElement$1", "cloneElement$1", "createFactory", "Children", "require_react", "__commonJSMin", "exports", "module", "require_react_jsx_runtime_development", "__commonJSMin", "exports", "React", "REACT_ELEMENT_TYPE", "REACT_PORTAL_TYPE", "REACT_FRAGMENT_TYPE", "REACT_STRICT_MODE_TYPE", "REACT_PROFILER_TYPE", "REACT_PROVIDER_TYPE", "REACT_CONTEXT_TYPE", "REACT_FORWARD_REF_TYPE", "REACT_SUSPENSE_TYPE", "REACT_SUSPENSE_LIST_TYPE", "REACT_MEMO_TYPE", "REACT_LAZY_TYPE", "REACT_OFFSCREEN_TYPE", "MAYBE_ITERATOR_SYMBOL", "FAUX_ITERATOR_SYMBOL", "getIteratorFn", "maybeIterable", "maybeIterator", "ReactSharedInternals", "error", "format", "_len2", "args", "_key2", "printWarning", "level", "ReactDebugCurrentFrame", "stack", "argsWithFormat", "item", "enableScopeAPI", "enableCacheElement", "enableTransitionTracing", "enableLegacyHidden", "enableDebugTracing", "REACT_MODULE_REFERENCE", "isValidElementType", "type", "getWrappedName", "outerType", "innerType", "wrapperName", "displayName", "functionName", "getContextName", "getComponentNameFromType", "context", "provider", "outerName", "lazyComponent", "payload", "init", "x", "assign", "disabledDepth", "prevLog", "prevInfo", "prevWarn", "prevError", "prevGroup", "prevGroupCollapsed", "prevGroupEnd", "disabledLog", "disableLogs", "props", "reenableLogs", "ReactCurrentDispatcher", "prefix", "describeBuiltInComponentFrame", "name", "source", "ownerFn", "match", "reentry", "componentFrameCache", "PossiblyWeakMap", "describeNativeComponentFrame", "fn", "construct", "frame", "control", "previousPrepareStackTrace", "previousDispatcher", "Fake", "sample", "sampleLines", "controlLines", "s", "c", "_frame", "syntheticFrame", "describeFunctionComponentFrame", "shouldConstruct", "Component", "prototype", "describeUnknownElementTypeFrameInDEV", "hasOwnProperty", "loggedTypeFailures", "setCurrentlyValidatingElement", "element", "owner", "checkPropTypes", "typeSpecs", "values", "location", "componentName", "has", "typeSpecName", "error$1", "err", "ex", "isArrayImpl", "isArray", "a", "typeName", "value", "hasToStringTag", "willCoercionThrow", "testStringCoercion", "e", "checkKeyStringCoercion", "ReactCurrentOwner", "RESERVED_PROPS", "specialPropKeyWarningShown", "specialPropRefWarningShown", "didWarnAboutStringRefs", "hasValidRef", "config", "getter", "hasValidKey", "warnIfStringRefCannotBeAutoConverted", "self", "defineKeyPropWarningGetter", "warnAboutAccessingKey", "defineRefPropWarningGetter", "warnAboutAccessingRef", "ReactElement", "key", "ref", "jsxDEV", "maybeKey", "propName", "defaultProps", "ReactCurrentOwner$1", "ReactDebugCurrentFrame$1", "setCurrentlyValidatingElement$1", "propTypesMisspellWarningShown", "isValidElement", "object", "getDeclarationErrorAddendum", "getSourceInfoErrorAddendum", "fileName", "lineNumber", "ownerHasKeyUseWarning", "getCurrentComponentErrorInfo", "parentType", "info", "parentName", "validateExplicitKey", "currentComponentErrorInfo", "childOwner", "validateChildKeys", "node", "i", "child", "iteratorFn", "iterator", "step", "validatePropTypes", "propTypes", "_name", "validateFragmentProps", "fragment", "keys", "didWarnAboutKeySpread", "jsxWithValidation", "isStaticChildren", "validType", "sourceInfo", "typeString", "children", "k", "beforeExample", "afterExample", "jsxWithValidationStatic", "jsxWithValidationDynamic", "jsx", "jsxs", "require_jsx_runtime", "__commonJSMin", "exports", "module", "import_react", "setDecimalPlaces", "num", "decimalPlaces", "coefficient", "__pow", "mod", "n", "m", "convertRange", "x", "a", "b", "c", "d", "isNumber", "value", "radiansToDegrees", "radians", "decimalPlaces", "res", "setDecimalPlaces", "degreesToRadians", "degrees", "vSub", "vector1", "vector2", "decimalPlaces", "vector", "i", "setDecimalPlaces", "v2Sub", "vMulScalar", "v", "scalar", "decimalPlaces", "vector", "i", "setDecimalPlaces", "v2MulScalar", "v2", "vLength", "vector", "decimalPlaces", "sum", "i", "setDecimalPlaces", "v2Distance", "vector1", "vector2", "decimalPlaces", "diff", "vSub", "vLength", "vNormalize", "v", "decimalPlaces", "length", "vLength", "unitVector", "i", "setDecimalPlaces", "v2Normalize", "v2", "circleMovement", "center", "angle", "radius", "newId", "animate", "props", "_duration", "startTime", "animationId", "elapsed", "previousTimeStamp", "animating", "observer", "stop", "restart", "start", "pause", "resume", "step", "timeStamp", "getResult", "observerHandler", "_entries", "_observer", "getElapsedTime", "isAnimating", "getStartTime", "getPercent", "getResizeObserver", "getSvg", "circleRadius", "circleThickness", "circleBorder", "maxPointerRadius", "startAngleDeg", "endAngleDeg", "thickness", "diff", "size", "cx", "cy", "getSVGCenter", "getSVGSize", "val", "s", "DEFAULT_PATH_BG_COLOR", "DEFAULT_PATH_BORDER_COLOR", "DEFAULT_POINTER_BG_COLOR", "DEFAULT_POINTER_BG_COLOR_SELECTED", "DEFAULT_POINTER_BG_COLOR_DISABLED", "DEFAULT_POINTER_BORDER_COLOR", "DEFAULT_CONNECTION_BG_COLOR", "DEFAULT_CONNECTION_BG_COLOR_DISABLED", "DEFAULT_TEXT_COLOR", "DEFAULT_TICKS_COLOR", "DEFAULT_TICKS_VALUES_COLOR", "getNumber", "value", "defaultValue", "E", "getString", "getBoolean", "isAngleInArc", "startAngleDeg", "endAngleDeg", "currentDegrees", "getAnglesDistance", "startAngle", "endAngle", "diff", "diffMod", "d", "getCircle", "radius", "circumference", "angleDiff", "strokeOffset", "strokeDasharray", "complement", "getAngleByMouse", "$svg", "clientX", "clientY", "cx", "cy", "rx", "ry", "left", "top", "relativeMouse", "vector", "R", "angleRad", "wr", "angle2value", "data", "angle", "pathStartAngle", "pathEndAngle", "value", "O", "index", "s", "value2angle", "_value", "valueIndex", "item", "d", "initPointers", "settings", "angleDeg", "getNumber", "bgColor", "getString", "DEFAULT_POINTER_BG_COLOR", "bgColorSelected", "DEFAULT_POINTER_BG_COLOR_SELECTED", "bgColorDisabled", "DEFAULT_POINTER_BG_COLOR_DISABLED", "bgColorHover", "DEFAULT_POINTER_BORDER_COLOR", "pointers", "i", "settingPointer", "radius", "border", "borderColor", "disabled", "getBoolean", "angleAfterStep", "roundToStep", "getPointers", "getMaxRadius", "max", "pointer", "getClosestPointer", "currentPlaceDegrees", "pathRadius", "Sr", "currentPointOnArc", "er", "min", "closestPointer", "enabledPointers", "p", "pointerAngleRad", "pointOnArc", "distance", "jr", "__spreadValues", "getClosestEdge", "startAngleDegrees", "endAngleDegrees", "startAngleRad", "startPointOnArc", "endAngleRad", "endPointOnArc", "distance1", "distance2", "getMinMaxDistancePointers", "minDistance", "maxDistance", "minPointer", "maxPointer", "getAnglesDistance", "step", "import_react", "outlineNoneStyle", "import_jsx_runtime", "getPointerFill", "pointer", "selectedPointerId", "bgColor", "bgColorSelected", "bgColorDisabled", "bgColorHover", "isMouseOver", "Pointer", "props", "pointerRef", "svg", "$svg", "data", "settings", "setPointer", "radius", "angleDeg", "border", "borderColor", "cx", "cy", "center", "setCenter", "value", "setValue", "fill", "setFill", "DEFAULT_POINTER_BG_COLOR", "setIsMouseOver", "angle2value", "angleRad", "O", "Sr", "pointerCenter", "er", "onValueChange", "evt", "mouseX", "mouseY", "degrees", "getAngleByMouse", "newAngleDeg", "isAngleInArc", "getClosestEdge", "onMouseUp", "onMouseDown", "onKeyDown", "$current", "onTouch", "onWheel", "scrollTop", "onMouseOver", "onMouseOut", "outlineNoneStyle", "Pointer_default", "import_jsx_runtime", "Pointers", "props", "pointers", "settings", "svg", "$svg", "data", "setPointer", "selectedPointerId", "pointer", "Pointer_default", "Pointers_default", "getData", "setting", "min", "getNumber", "max", "step", "arrowStep", "round", "data", "minIndex", "item", "maxIndex", "pathStartAngle", "pathEndAngle", "isClosedShape", "d", "stepAngleDeg", "arrowStepAngleDeg", "import_react", "getConnection", "pointers", "radius", "cx", "cy", "pathStartAngle", "pathEndAngle", "result", "pathAnglesDistance", "getAnglesDistance", "angleDistance", "circumference", "strokeOffset", "strokeDasharray", "complement", "getAnimationProgressAngle", "progress", "animationSourceDegrees", "animationTargetDegrees", "startPathAngleDeg", "percent", "angle1", "angle2", "clockwiseDistance", "d", "counterclockwiseDistance", "import_jsx_runtime", "getStroke", "disabled", "connectionBgColorDisabled", "connectionBgColor", "isMouseOver", "connectionBgColorHover", "getString", "DEFAULT_CONNECTION_BG_COLOR_DISABLED", "bgColor", "DEFAULT_CONNECTION_BG_COLOR", "Connection", "props", "settings", "pointers", "$svg", "svg", "data", "setPointer", "connection", "setConnection", "animation", "setAnimation", "stroke", "setStroke", "setIsMouseOver", "rangeDraggingLastAngle", "animationClosestPointer", "animationSourceDegrees", "animationTargetDegrees", "getConnection", "onClick", "evt", "degrees", "getAngleByMouse", "closestPointer", "getClosestPointer", "onValueChange", "minMaxResult", "getMinMaxDistancePointers", "minPointer", "maxPointer", "mouseDegrees", "diff", "d", "onMouseUp", "onMouseDown", "_animation", "ci", "progress", "currentDegrees", "getAnimationProgressAngle", "getNumber", "onMouseOver", "onMouseOut", "getBoolean", "Connection_default", "import_react", "import_jsx_runtime", "Text", "props", "settings", "pointers", "svg", "data", "cx", "cy", "value", "setValue", "values", "pointer", "angle2value", "value1", "value2", "texts", "textBetween", "getString", "hideText", "getBoolean", "getNumber", "DEFAULT_TEXT_COLOR", "Text_default", "import_react", "getTicksSettings", "settings", "data", "ticksCount", "getNumber", "ticksHeight", "getBoolean", "getString", "DEFAULT_TICKS_COLOR", "DEFAULT_TICKS_VALUES_COLOR", "getTicks", "ticksSettings", "pathStartAngle", "pathEndAngle", "svg", "ticks", "deltaAngle", "oneTickAngleSize", "count", "i", "currentAngle", "angleRad", "O", "Sr", "x", "y", "er", "isLonger", "desiredDistance", "normalizedDirectionVector", "N", "tickEndVector", "qr", "tickStartVector", "x1", "y1", "tickValue", "value", "index", "s", "textX", "textY", "showText", "_tickValuesDistance", "tickTextVector", "import_jsx_runtime", "Ticks", "props", "settings", "svg", "data", "ticksSettings", "setTicksSettings", "ticks", "setTicks", "getTicksSettings", "endAngleDeg", "getTicks", "tick", "i", "x", "y", "x1", "y1", "textX", "textY", "showText", "Ticks_default", "import_react", "import_react", "import_jsx_runtime", "InnerCircle", "props", "svg", "maskId", "settings", "circle", "startPoint", "setStartPoint", "endPoint", "setEndPoint", "largeArcFlag", "setLargeArcFlag", "pathInnerBgFull", "setPathInnerBgFull", "d", "getBoolean", "startAngleDeg", "O", "er", "Sr", "endAngleDeg", "InnerCircle_default", "import_jsx_runtime", "Circle", "props", "settings", "pointers", "$svg", "svg", "setPointer", "animation", "setAnimation", "maskId", "Jo", "circle", "setCircle", "animationClosestPointer", "animationSourceDegrees", "animationTargetDegrees", "getCircle", "onClick", "evt", "degrees", "getAngleByMouse", "closestPointer", "getClosestPointer", "_animation", "ci", "progress", "currentDegrees", "getAnimationProgressAngle", "getNumber", "InnerCircle_default", "getString", "DEFAULT_PATH_BORDER_COLOR", "DEFAULT_PATH_BG_COLOR", "Circle_default", "import_jsx_runtime", "RoundSlider", "props", "data", "setData", "svg", "setSvg", "pointers", "setPointers", "selectedPointerId", "setSelectedPointerId", "prevAngleDegRef", "svgRef", "_data", "getData", "getPointers", "pathStartAngle", "getNumber", "pathEndAngle", "getSvg", "clearSelectedPointer", "evt", "setPointersCallback", "pointer", "newAngleDeg", "roundToStep", "d", "updatePointer", "prevAngle", "nextAngle", "prevIndex", "nextIndex", "prevPointer", "nextPointer", "splitPointDeg", "t1", "t2", "clockwiseNew", "isAngleInArc", "clockwisePrev", "clockwise", "t3", "t4", "counterClockwiseNew", "counterClockwisePrev", "getClosestEdge", "angleChanged", "_a", "_pointers", "__spreadValues", "updatedPointers", "val", "angle2value", "$pointer", "__spreadProps", "outlineNoneStyle", "Circle_default", "Ticks_default", "Connection_default", "Pointers_default", "Text_default"]
}
